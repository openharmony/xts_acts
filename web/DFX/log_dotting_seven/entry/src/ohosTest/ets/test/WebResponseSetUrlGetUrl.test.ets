/*
* Copyright (C) 2024 HiHope Open Source Organization.
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

import { describe, beforeAll, beforeEach, afterEach, afterAll, it, expect } from '@ohos/hypium';
import Utils from './Utils';
import events_emitter from '@ohos.events.emitter';

let emitKey = '';

export default function webviewNApi() {
  describe('OH_ArkWebRequestHeader', async () => {
    beforeEach(async (done: Function) => {
      await Utils.sleep(500);
      done();
    });

    /**
     * @tc.number SUB_ACE_WEB_WEBHOST_NSDK_4951
     * @tc.name testWebResponse_SetError_Fail_ParamIsString
     * @tc.desc test Arguments
     * @tc.size MediumTest
     * @tc.type Function
     * @tc.level Level 2
     */
    it('SUB_ACE_WEB_WEBHOST_NSDK_4951', 0, async (done: Function) => {
      Utils.emitEvent('testWebResponse_SetError_Fail_ParamIsString', 10);
      await Utils.sleep(1000);
      Utils.registerBaseEvent('testWebResponse_SetError_Fail_ParamIsString', 17100101, 5109, done,
        (backData: events_emitter.EventData, expected: Object) => {
          console.info('Received event data: ' + JSON.stringify(backData));
          expect(backData?.data?.ACTION).assertEqual(expected);
        });
      await Utils.sleep(1000);
      sendEventByKey('SetError', 10, '');
    });
  });
}