/*
 * Copyright (C) 2024 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { describe, beforeAll, beforeEach, afterEach, afterAll, it, expect, Level, Size, TestType} from "@ohos/hypium";
import { Decimal } from '@kit.ArkTS';
type Rounding = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8;
function test_atan_001 (n: string, pr: number, rm: Rounding, expected: string) {
    Decimal.set ({ precision: pr, rounding: rm });
    expect(expected).assertEqual(Decimal.atan(n).valueOf());
    expect(expected).assertEqual(new Decimal(n).atan().valueOf());
}
function test_atan2_002 (y: string, x: string, pr: number, rm: Rounding, expected: string) {
    Decimal.set ({ precision: pr, rounding: rm });
    expect(expected).assertEqual(Decimal.atan2(y,x).valueOf());
}
function test_atanh_003 (n: string, pr: number, rm: Rounding, expected: string) {
    Decimal.set ({ precision: pr, rounding: rm });
    expect(expected).assertEqual(Decimal.atanh(n).valueOf());
    expect(expected).assertEqual(new Decimal(n).atanh().valueOf());
}
function test_cbrt_004 (n: string, pr: number, rm: Rounding, expected: string) {
    Decimal.set ({ precision: pr, rounding: rm });
    expect(expected).assertEqual(Decimal.cbrt(n).valueOf());
}
function test_ceil_005 (expected: string, n: number) {
    expect(expected).assertEqual(Decimal.ceil(n).valueOf());
    expect(expected).assertEqual(new Decimal(n).ceil().valueOf());
}
function test_ceil_006 (expected: string, n: string) {
    expect(expected).assertEqual(Decimal.ceil(n).valueOf());
    expect(expected).assertEqual(new Decimal(n).ceil().valueOf());
}
function test_clamp_007 (x: string, min: string, max: string, expected: string) {
    expect(expected).assertEqual(Decimal.clamp(x, min, max).valueOf());
}
function test_clamp_008 (x: number, min: number, max: number, expected: string) {
    expect(expected).assertEqual(Decimal.clamp(x, min, max).valueOf());
}
function test_comparedTo_009 (a: number, b: number, expected: number) {
    if (Number.isNaN(expected)) {
        expect("NaN").assertEqual(new Decimal(a).comparedTo(b).toString());
    } else {
        expect(expected).assertEqual(new Decimal(a).comparedTo(b));
    }
}
function test_comparedTo_010 (a: number, b: string, expected: number) {
    if (Number.isNaN(expected)) {
        expect("NaN").assertEqual(new Decimal(a).comparedTo(b).toString());
    } else {
        expect(expected).assertEqual(new Decimal(a).comparedTo(b));
    }
}
function test_comparedTo_011 (a: string, b: number, expected: number) {
    if (Number.isNaN(expected)) {
        expect("NaN").assertEqual(new Decimal(a).comparedTo(b).toString());
    } else {
        expect(expected).assertEqual(new Decimal(a).comparedTo(b));
    }
}
function test_comparedTo_012 (a: string, b: string, expected: number) {
    if (Number.isNaN(expected)) {
        expect("NaN").assertEqual(new Decimal(a).comparedTo(b).toString());
    } else {
        expect(expected).assertEqual(new Decimal(a).comparedTo(b));
    }
}
function test_cos_013 (n: string, pr: number, rm: Rounding, expected: string) {
    Decimal.set ({ precision: pr, rounding: rm });
    expect(expected).assertEqual(Decimal.cos(n).valueOf());
    expect(expected).assertEqual(new Decimal(n).cos().valueOf());
}
function test_cosh_014 (n: string, pr: number, rm: Rounding, expected: string) {
    Decimal.set ({ precision: pr, rounding: rm });
    expect(expected).assertEqual(Decimal.cosh(n).valueOf());
    expect(expected).assertEqual(new Decimal(n).cosh().valueOf());
}
function test_constructor_015 (expected: string, n: string) {
    expect(expected).assertEqual(new Decimal(n).valueOf());
}
function test_constructor_016 (expected: string, n: number) {
    expect(expected).assertEqual(new Decimal(n).valueOf());
}
function test_div_017 (expected: boolean, dividend: number, divisor: number) {
    expect(expected).assertEqual((Decimal.div(dividend, divisor).isZero() && Decimal.div(dividend, divisor).isNegative()));
    expect(expected).assertEqual((new Decimal(dividend).div(divisor).isZero() && new Decimal(dividend).div(divisor).isNegative()));
}
function test_dpSd_018 (n: string, dp: number, sd: Number, zs: number) {
    expect(sd).assertEqual(new Decimal(n).precision(zs));
}
function test_dpSd_019 (n: number, dp: number, sd: Number, zs: number) {
    expect(sd).assertEqual(new Decimal(n).precision(zs));
}
function test_dpSd_020 (n: number, dp: number, sd: Number, zs: boolean) {
    expect(sd).assertEqual(new Decimal(n).precision(zs));
}
function test_dpSd_021 (n: string, dp: number, sd: Number, zs: boolean) {
    expect(sd).assertEqual(new Decimal(n).precision(zs));
}
async function Delay(delay: number): Promise<void> {
  return new Promise((resolve:Function)=>{
    setTimeout(()=>{
        resolve('Hello World!');
    },delay);
  });
}
export default function DecimalTest031() {
    describe("DecimalTest031", () => {
    beforeAll(() => {
        console.info("beforeAll: Prerequisites at the test suite level, which are executed before the test suite is executed.");
    });
    beforeEach(async() => {
        await Delay(1000);
        console.info("beforeEach: Prerequisites at the test case level, which are executed before each test case is executed.");
    });
    afterEach(() => {
        console.info("afterEach: Test case-level clearance conditions, which are executed after each test case is executed.");
    });
    afterAll(() => {
        console.info("afterAll: Test suite-level cleanup condition, which is executed after the test suite is executed");
    });
        console.info("start################################start");
    /**
     * @tc.number    : DECIMAL_TEST_001
     * @tc.name      : Decimal_atan_Func_001
     * @tc.desc      : Test atan
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    it("Decimal_atan_Func_001", TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL1, () => {
        Decimal.set ({
            precision: 40,
            rounding: 4,
            toExpNeg: -9e15,
            toExpPos: 9e15,
            minE: -9e15,
            maxE: 9e15
        });
        test_atan_001('NaN', 40, 4, 'NaN');
        test_atan_001('0', 40, 4, '0');
        test_atan_001('-0', 40, 4, '-0');
        test_atan_001('Infinity', 20, 4, '1.5707963267948966192');
        test_atan_001('-Infinity', 20, 4, '-1.5707963267948966192');
        test_atan_001('0.454786854', 2, 1, '0.42');
        test_atan_001('392.8825877961099786091', 2, 1, '1.5');
        test_atan_001('90.02', 9, 1, '1.55968814');
        test_atan_001('0.22618819', 1, 6, '0.2');
        test_atan_001('2.104', 3, 3, '1.12');
        test_atan_001('0.4', 2, 0, '0.39');
        test_atan_001('700000', 7, 5, '1.570795');
        test_atan_001('0.1034373855738', 4, 0, '0.1031');
        test_atan_001('2888822222222222.77777777888888888887945111', 4, 2, '1.571');
        test_atan_001('0.7163035', 5, 0, '0.62159');
        test_atan_001('31986483109634719887104428745', 4, 1, '1.57');
        test_atan_001('66099.99999090960999899', 9, 2, '1.5707812');
        test_atan_001('1453.5793000200494316368218639720487955117970374751', 8, 3, '1.5701083');
        test_atan_001('25', 10, 1, '1.530817639');
        test_atan_001('0.00083', 2, 5, '0.00083');
        test_atan_001('15469795946533333333333', 3, 2, '1.58');
        test_atan_001('0.0471789911257911619518474101710506908660018025802862437747', 10, 4, '0.04714403323');
        test_atan_001('2436496471267622480734244943816819264461333', 6, 4, '1.5708');
        test_atan_001('397.86', 6, 3, '1.56828');
        test_atan_001('23350774.374402222222222222', 5, 2, '1.5708');
        test_atan_001('6.4999999895999999999999989901', 3, 2, '1.42');
        test_atan_001('0.2021040932658758909350221378184270710381308788971', 25, 0, '0.1994179053851243775408929');
        test_atan_001('37322947047433501470414286593213511', 3, 4, '1.57');
        test_atan_001('0.2', 30, 5, '0.197395559849880758370049765195');
        test_atan_001('68205', 73, 0, '1.570781665113202779409754819994955472047433041976705657000777636779446534');
        test_atan_001('546276727353824444.00000000000000000004444444444444444', 10, 1, '1.570796326');
        test_atan_001('0.702767582631380812', 59, 3, '0.6125809883518849916298401561171422315736485425008362936336');
        test_atan_001('77.2782608490479012', 63, 5, '1.55785679919770947051742907742015525136935668142627146470943833');
        test_atan_001('3782579384288161800008711705384065591', 64, 1, '1.570796326794896619231321691639751441834214834998463624232552952');
        test_atan_001('353878', 38, 3, '1.5707935009622650418565673617028447836');
        test_atan_001('474922903013', 37, 0, '1.570796326792791014313858641566394633');
        test_atan_001('0.983379312948256841133252743255261706498115379968780272468295525', 33, 3, '0.777018375475969147205287424713916');
        test_atan_001('0.94045376770729661028346135758732992772225497003464820039412612634023416', 56, 1, '0.75472103378449515948583375795023656690367842174996205064');
        test_atan_001('8343887380309832830517659566088111111111111111111.111', 62, 0, '1.570796326794896619231321691639751442098584699687433062273514');
        test_atan_001('0.0228839501439921', 54, 5, '0.0228799568131160143605040060800166535189129302340883479');
        test_atan_001('99999920979720113000000.551327043', 30, 2, '1.57079632679489661923131169164');
        test_atan_001('8203149', 25, 4, '1.570796204890491371929944');
        test_atan_001('930000000504000000000000000000000.0870000004', 43, 1, '1.570796326794896619231321691639750366829768');
        test_atan_001('50000000000', 16, 4, '1.570796326774897');
        test_atan_001('2675303931293671338171189092726796196.369350899273657748425', 9, 3, '1.57079632');
        test_atan_001('98351.2797372595375675252656040297344674063', 52, 5, '1.570786159159024091806382088738657135356199886480858');
        test_atan_001('9291816239901918141826076554839014635448673990956049062', 55, 4, '1.57079632679489661923132169163975144209858469968755291');
        test_atan_001('6', 72, 6, '1.40564764938026978095219340199580798810019803922252509146943786614276254');
        test_atan_001('2366378489504444444444.33333333333488', 12, 0, '1.5707963268');
        test_atan_001('161100000000000000000000.5111111', 42, 0, '1.57079632679489661923131548431510836326557');
    });
    /**
     * @tc.number    : DECIMAL_TEST_002
     * @tc.name      : Decimal_atan_Func_002
     * @tc.desc      : Test atan
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    it("Decimal_atan_Func_002", TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL1, () => {
        Decimal.set ({
            precision: 40,
            rounding: 4,
            toExpNeg: -9e15,
            toExpPos: 9e15,
            minE: -9e15,
            maxE: 9e15
        });
        try {
            test_atan_001('e1', 40, 4, 'NaN');
            expect(true).assertEqual(false);
        } catch (err) {
            expect(err.name).assertEqual(`BusinessError`);
            expect(err.code).assertEqual(401);
            expect(err.message).assertEqual(`The type of "test(str)" must be Hex/Binary/Octal. Received value is: e1`);
        }
    });
    /**
     * @tc.number    : DECIMAL_TEST_003
     * @tc.name      : Decimal_atan2_Func_003
     * @tc.desc      : Test atan2
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    it("Decimal_atan2_Func_003", TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL1, () => {
        Decimal.set ({
            precision: 40,
            rounding: 4,
            toExpNeg: -9e15,
            toExpPos: 9e15,
            minE: -9e15,
            maxE: 9e15
        });
        test_atan2_002('NaN', '1', 20, 4, 'NaN');
        test_atan2_002('NaN', 'Infinity', 20, 4, 'NaN');
        test_atan2_002('0', 'NaN', 20, 4, 'NaN');
        test_atan2_002('-Infinity', 'NaN', 20, 4, 'NaN');
        test_atan2_002('NaN', 'NaN', 20, 4, 'NaN');
        test_atan2_002('1', '0', 20, 4, '1.5707963267948966192');
        test_atan2_002('1', '-0', 20, 4, '1.5707963267948966192');
        test_atan2_002('0', '1', 20, 4, '0');
        test_atan2_002('0', '0', 20, 4, '0');
        test_atan2_002('0', '-0', 20, 4, '3.1415926535897932385');
        test_atan2_002('0', '-1', 20, 4, '3.1415926535897932385');
        test_atan2_002('-0', '1', 20, 4, '-0');
        test_atan2_002('-0', '0', 20, 4, '-0');
        test_atan2_002('-0', '-0', 20, 4, '-3.1415926535897932385');
        test_atan2_002('-0', '-1', 20, 4, '-3.1415926535897932385');
        test_atan2_002('-1', '0', 20, 4, '-1.5707963267948966192');
        test_atan2_002('-1', '-0', 20, 4, '-1.5707963267948966192');
        test_atan2_002('1', 'Infinity', 20, 4, '0');
        test_atan2_002('1', '-Infinity', 20, 4, '3.1415926535897932385');
        test_atan2_002('-1', 'Infinity', 20, 4, '-0');
        test_atan2_002('-1', '-Infinity', 20, 4, '-3.1415926535897932385');
        test_atan2_002('Infinity', '1', 20, 4, '1.5707963267948966192');
        test_atan2_002('Infinity', '-1', 20, 4, '1.5707963267948966192');
        test_atan2_002('-Infinity', '1', 20, 4, '-1.5707963267948966192');
        test_atan2_002('-Infinity', '-1', 20, 4, '-1.5707963267948966192');
        test_atan2_002('Infinity', 'Infinity', 20, 4, '0.78539816339744830962');
        test_atan2_002('Infinity', '-Infinity', 20, 4, '2.3561944901923449288');
        test_atan2_002('-Infinity', 'Infinity', 20, 4, '-0.78539816339744830962');
        test_atan2_002('-Infinity', '-Infinity', 20, 4, '-2.3561944901923449288');
        test_atan2_002('17', '14', 4, 2, '0.8819');
        test_atan2_002('0.9481218', '0.94118', 6, 6, '0.789072');
        test_atan2_002('-7445', '20099977666211456789846696402535482054490525592', 5, 3, '-0.0000000000000000000000000000000000000000003704');
        test_atan2_002('35739959929999990.99999999995999999999999999999999992959', '0.955', 8, 6, '1.5707963');
        test_atan2_002('1.1', '6524806825029162376.20457337656513698810928', 5, 1, '0.00000000000000000016858');
        test_atan2_002('5211111.101111111177', '606497413079598703117552754486732', 6, 1, '0.00000000000000000000000000859214');
        test_atan2_002('-2913.07599', '986666666666666.8888888888873058007', 6, 6, '-0.00000000000295244');
        test_atan2_002('2.66213924447211273', '0.344623945616634', 3, 0, '1.45');
        test_atan2_002('312631627154243240137182349906197', '9999999555555555.88888888889999999999', 10, 1, '1.570796326');
        test_atan2_002('899.99', '26.9', 3, 4, '1.54');
        test_atan2_002('-2', '-0.0000006306201002089224863559916332763966685755123769189', 3, 5, '-1.57');
        test_atan2_002('0.21', '8', 4, 2, '0.02625');
        test_atan2_002('0.9481218', '0.94118', 6, 6, '0.789072');
        test_atan2_002('2', '9333333333333333397407226578881017498733601111111111111', 9, 1, '0.000000000000000000000000000000000000000000000000000000214285714');
        test_atan2_002('95726', '-2693596537831566265', 9, 3, '3.14159265');
        test_atan2_002('3', '136424614399.47534873339', 6, 2, '0.0000000000219902');
        test_atan2_002('724388888888888888888', '452240666.2222266666', 3, 0, '1.58');
        test_atan2_002('0.04129', '4.7459', 6, 3, '0.00869992');
        test_atan2_002('-0.000000003593', '831', 9, 3, '-0.00000000000432370638');
        test_atan2_002('3', '652', 1, 3, '0.004');
        test_atan2_002('53', '0.00021', 5, 2, '1.5708');
        test_atan2_002('583', '0.5', 2, 3, '1.5');
        test_atan2_002('0.88956212348302', '-3613.47', 4, 1, '3.141');
        test_atan2_002('499999999999999999999999999999999999999999899999999999999999999999999999999999999999999999999999.99999', '0.397', 2, 2, '1.6');
        test_atan2_002('670.7246136257055836748897015621', '8', 9, 1, '1.55886949');
        test_atan2_002('40000', '6809492801384871383672604464351', 5, 5, '0.0000000000000000000000000058742');
        test_atan2_002('6000000002222222.00014266', '-0.450903', 1, 6, '2');
        test_atan2_002('3', '4', 10, 3, '0.6435011087');
        test_atan2_002('2666641666666666', '59999999999999999999999999999999999999999.99999999999999999999999999925', 1, 6, '0.00000000000000000000000004');
        test_atan2_002('5', '0.65', 7, 6, '1.441521');
        test_atan2_002('43.65', '8568924402932018888.66666666666666666666135181', 9, 0, '0.00000000000000000509398823');
        test_atan2_002('4891999999999999999999999999999999999999999999999999991999999799999.999999999639999999992999', '710000000000000000.0000000000005700000000000060000000000033', 10, 0, '1.570796327');
        test_atan2_002('4.73001', '455555555555559399859117776418166', 8, 0, '0.000000000000000000000000000000010382949');
        test_atan2_002('40068.2342', '1', 2, 2, '1.6');
        test_atan2_002('0.6', '511111111112433397604060000000000000000000', 1, 4, '0.000000000000000000000000000000000000000001');
        test_atan2_002('530000000000000.286', '7', 7, 1, '1.570796');
        test_atan2_002('9251010716.51554394500003489103488443', '727127846893147834657170633071486391409', 2, 6, '0.000000000000000000000000000013');
        test_atan2_002('2156', '6', 5, 0, '1.5681');
        test_atan2_002('-0.007700837496370833875888297147521851009315187908640623592495789607215971', '-0.60609673305145265303411222292406724609400618553386938', 8, 4, '-3.1288877');
        test_atan2_002('0.631666343041280486605909338251618534368378514270566344350649949184', '0.1', 9, 0, '1.41378793');
        test_atan2_002('0.81895579436335688497005428053140270015707', '34.88388', 10, 4, '0.02347231408');
        test_atan2_002('7819', '8111111111111114050153374108607899100080038117344269814600726014856', 6, 2, '0.000000000000000000000000000000000000000000000000000000000000000963987');
        test_atan2_002('78230794955', '-6', 10, 2, '1.570796327');
        test_atan2_002('444444444444444444444', '0.7', 8, 3, '1.5707963');
        test_atan2_002('0.9793', '0.7', 1, 1, '0.9');
        test_atan2_002('5244107.0628867', '2999954.9965', 7, 3, '1.051172');
        test_atan2_002('8000000', '366666666666666666666666666666466666666666666666666666666.6666666666666666666666666', 5, 4, '0.000000000000000000000000000000000000000000000000021818');
        test_atan2_002('0.2', '0.189468318714349130097801836058861527404712938072131132348336428', 6, 1, '0.812432');
        test_atan2_002('0.2858318234746344', '600000000000000000000000000000000000000000', 7, 0, '0.0000000000000000000000000000000000000000004763864');
        test_atan2_002('4339137560184', '97970869.448873424003041514353519', 4, 4, '1.571');
        test_atan2_002('-0.23311', '0.311511919081010226751458633564788098826129188077', 2, 6, '-0.64');
        test_atan2_002('51748034844738', '1.9', 4, 3, '1.57');
        test_atan2_002('489991.33896294143521760395611846731', '0.87', 9, 2, '1.57079456');
        test_atan2_002('9708256886359351', '68007500000000000300000000.8000007', 7, 3, '0.0000000001427527');
        test_atan2_002('-0.7243703154875085348', '-3', 8, 3, '-2.9046707');
        test_atan2_002('45000000000000', '65555233', 10, 2, '1.570794871');
        test_atan2_002('611492726146771524971502', '6', 1, 5, '2');
        test_atan2_002('453102.0374285112290126', '144444444448560013578500490755362539053948899999999999999999', 8, 2, '0.0000000000000000000000000000000000000000000000000000031368603');
        test_atan2_002('-93.61', '-0.0000399443101158077208687249496264941993597813459', 7, 2, '-1.570796');
        test_atan2_002('2', '9581689854499862551.065722086916773096996491758707340479', 7, 4, '0.0000000000000000002087314');
        test_atan2_002('1.3', '5.5', 6, 2, '0.232104');
        test_atan2_002('-600000000', '-3.7', 64, 5, '-1.570796332961563285897988280138208232222043273348998383738452657');
        test_atan2_002('11058591315337683586049031068.0579551185', '0.388959837250046012554110591319702948213801', 61, 0, '1.570796326794896619231321691604578803363795829358878500062293');
        test_atan2_002('0.8448786268946126278', '0.13526', 50, 4, '1.4120494110103741256697724128137501343789286117212');
        test_atan2_002('30287996', '40950.1689588762720486401957594518884943112430153961670406237501355555', 23, 0, '1.5694443012595347494123');
        test_atan2_002('49990999999999999999299995399.9999999', '18373333333333333333333333333333333313333.31333333333333', 24, 0, '0.00000000000272084542815674891142779');
        test_atan2_002('81050298736775188105704407264452322940639721302743656726962427972686398373147738700', '5758', 57, 6, '1.57079632679489661923132169163975144209858469968755291049');
        test_atan2_002('88986', '933333549093318029464784161', 25, 4, '0.00000000000000000000009534212081677014822531107');
        test_atan2_002('0.000000096379436364822449512580758185420939', '0.6', 8, 1, '0.00000016063239');
        test_atan2_002('0.0000005078632254302310932666825377', '-406.26', 54, 1, '3.14159265233969914741200809306601738606958485281812206');
        test_atan2_002('4.7407009601', '629989999.9099919', 27, 6, '0.00000000752504160506883380341035311');
    });
    /**
     * @tc.number    : DECIMAL_TEST_004
     * @tc.name      : Decimal_atan2_Func_004
     * @tc.desc      : Test atan2
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    it("Decimal_atan2_Func_004", TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL1, () => {
        Decimal.set ({
            precision: 40,
            rounding: 4,
            toExpNeg: -9e15,
            toExpPos: 9e15,
            minE: -9e15,
            maxE: 9e15
        });
        try {
            test_atan2_002('e11', 'e11', 6, 2, '0.232104');
            expect(true).assertEqual(false);
        } catch (err) {
            expect(err.name).assertEqual(`BusinessError`);
            expect(err.code).assertEqual(401);
            expect(err.message).assertEqual(`The type of "test(str)" must be Hex/Binary/Octal. Received value is: e11`);
        }
    });
    /**
     * @tc.number    : DECIMAL_TEST_005
     * @tc.name      : Decimal_atanh_Func_005
     * @tc.desc      : Test atanh
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    it("Decimal_atanh_Func_005", TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL1, () => {
        Decimal.set ({
            precision: 40,
            rounding: 4,
            toExpNeg: -9e15,
            toExpPos: 9e15,
            minE: -9e15,
            maxE: 9e15
        });
        test_atanh_003('-0.63774941', 1, 4, '-0.8');
        test_atanh_003('0.1221481', 9, 0, '0.122761087');
        test_atanh_003('-0.17990274590466674', 7, 1, '-0.1818821');
        test_atanh_003('-0.6', 5, 6, '-0.69315');
        test_atanh_003('-0.6712743', 3, 3, '-0.814');
        test_atanh_003('-0.8', 9, 2, '-1.09861228');
        test_atanh_003('0.034059491123193', 10, 5, '0.03407267052');
        test_atanh_003('0.971383207580654133272', 2, 6, '2.1');
        test_atanh_003('-0.4', 5, 5, '-0.42365');
        test_atanh_003('0.7', 8, 2, '0.86730053');
        test_atanh_003('0.4206840645836230484032786410995', 2, 2, '0.45');
        test_atanh_003('0.11657', 3, 0, '0.118');
        test_atanh_003('-0.06', 1, 4, '-0.06');
        test_atanh_003('0.8679596950069114083213661', 5, 4, '1.3247');
        test_atanh_003('-0.895165912892044', 7, 0, '-1.447342');
        test_atanh_003('-0.24549498277000856006664760772730973', 10, 0, '-0.2506131893');
        test_atanh_003('0.003434934411074', 9, 2, '0.00343494793');
        test_atanh_003('0.8', 10, 2, '1.098612289');
        test_atanh_003('0.9', 6, 5, '1.47222');
        test_atanh_003('-0.35115', 4, 6, '-0.3668');
        test_atanh_003('-0.07006008', 9, 1, '-0.0701750467');
        test_atanh_003('-0.805588217169184404803545', 7, 3, '-1.114332');
        test_atanh_003('0.035042192', 55, 2, '0.0350565459913177073622482641959208402405964262615529299');
        test_atanh_003('-0.27398', 41, 6, '-0.2811617873835199297281322455211358234326');
        test_atanh_003('-0.4860194', 77, 4, '-0.53083537941098533673177663090557161489026982518920257398555815069258399000671');
        test_atanh_003('-0.24023148147547753705876525534786727823', 64, 6, '-0.2450197568943221990022234155266189427014650372890460086779371601');
        test_atanh_003('0.6011860402795', 70, 1, '0.6950024335022886924643340340622320956358285387350047592361304767363335');
        test_atanh_003('-0.29093', 44, 2, '-0.29958195778891861736095524290964866810281107');
        test_atanh_003('0.266818124020332161434635904184413087903', 70, 6, '0.2734349124503902665106317554881156645559479073060421002241446128732386');
        test_atanh_003('-0.432531956714370232077', 6, 4, '-0.463007');
        test_atanh_003('-0.12287097619204275583897636378879', 2, 1, '-0.12');
        test_atanh_003('0.2897036197075545', 60, 6, '0.298242699414791823529878292721126830768439530743706217501737');
        test_atanh_003('-0.2655773613852928593375285', 77, 0, '-0.27209952218398509029158426102152882183064360960300836509805625022650344274319');
        test_atanh_003('0.5735882938793959782751026397687223000311120959777492896023791205', 33, 5, '0.65285425106191064820540169018885');
        test_atanh_003('0.7426414548', 23, 4, '0.95634354421618813937091');
        test_atanh_003('0.79326', 64, 1, '1.080164253158982312196251050504784270125752587840009002471824728');
        test_atanh_003('0.1991301120855576845', 79, 4, '0.2018265847477406706392428533389908448862292415015902102343859228007472489793578');
        test_atanh_003('0.58575026964988311327717364047728706968432384708442439806628335397331041029', 35, 4, '0.67117196259416045496400738728525138');
        test_atanh_003('-0.6382435885085400741', 52, 5, '-0.7552044376964453055912660622103201093353424263040963');
        test_atanh_003('-0.1937766857572633836824102902726660707344', 65, 0, '-0.19625823857879391217692284026627503312320392329436359124182475746');
        test_atanh_003('-0.77329685', 58, 3, '-1.028477133857644453547320325736890284496863994792903106468');
        test_atanh_003('-0.38935628384', 30, 0, '-0.411041070277527417008424457354');
        test_atanh_003('-0.514', 10, 3, '-0.5681509051');
        test_atanh_003('0.958729982986459836771826622473322363124574975404328744', 21, 1, '1.92995765916231006555');
        test_atanh_003('0.46401438080114898349', 52, 1, '0.5024150932833156698557467674808132274481991616651669');
        test_atanh_003('0.5989023538423641713709183', 71, 2, '0.69143386983135895477423195223524769608010916945045113248577167194266556');
        test_atanh_003('-0.03651542020603455193763551331484375543974794103475847308026587749101823431', 59, 6, '-0.036531662796419796028369200191680396653704276902211463476447');
        test_atanh_003('-0.33', 51, 2, '-0.342828254415393852722154089483655258153765543829547');
        test_atanh_003('-0.127827075266907724285915869037463706439', 80, 1, '-0.1285302029045167436793945158211468632668697124786207606960739918130299633916413');
        test_atanh_003('0.7847923398129302653846940761', 14, 2, '1.057726963944');
    });
    /**
     * @tc.number    : DECIMAL_TEST_006
     * @tc.name      : Decimal_atanh_Func_006
     * @tc.desc      : Test atanh
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    it("Decimal_atanh_Func_006", TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL1, () => {
        Decimal.set ({
            precision: 40,
            rounding: 4,
            toExpNeg: -9e15,
            toExpPos: 9e15,
            minE: -9e15,
            maxE: 9e15
        });
        try {
            test_atanh_003('e1', 10, 3, '-0.5681509051');
            expect(true).assertEqual(false);
        } catch (err) {
            expect(err.name).assertEqual(`BusinessError`);
            expect(err.code).assertEqual(401);
            expect(err.message).assertEqual(`The type of "test(str)" must be Hex/Binary/Octal. Received value is: e1`);
        }
    });
    /**
     * @tc.number    : DECIMAL_TEST_007
     * @tc.name      : Decimal_cbrt_Func_007
     * @tc.desc      : Test cbrt
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    it("Decimal_cbrt_Func_007", TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL1, () => {
        Decimal.set ({
            precision: 40,
            rounding: 4,
            toExpNeg: -9e15,
            toExpPos: 9e15,
            minE: -9e15,
            maxE: 9e15
        });
        test_cbrt_004('NaN', 40, 4, 'NaN');
        test_cbrt_004('0', 40, 4, '0');
        test_cbrt_004('-0', 40, 4, '-0');
        test_cbrt_004('Infinity', 40, 4, 'Infinity');
        test_cbrt_004('-Infinity', 40, 4, '-Infinity');
        test_cbrt_004('1', 40, 4, '1');
        test_cbrt_004('-1', 40, 4, '-1');
        test_cbrt_004('8', 40, 4, '2');
        test_cbrt_004('-8', 40, 4, '-2');
        test_cbrt_004('-4', 5, 2, '-1.5874');
        test_cbrt_004('-0.8667', 7, 0, '-0.9534318');
        test_cbrt_004('-0.0000000071', 9, 2, '-0.00192199734');
        test_cbrt_004('-21791364.26687703933853824404550506158463693222', 3, 1, '-279');
        test_cbrt_004('36', 9, 6, '3.30192725');
        test_cbrt_004('0.898', 7, 0, '0.9647737');
        test_cbrt_004('-94444444444444444.444444444444444444444444444444444444444444414404441444441', 8, 2, '-455399.06');
        test_cbrt_004('-3782929120857330517139808', 5, 2, '-155810000');
        test_cbrt_004('966666666692107298099458326175656566655348300467903965479870253722013788135743211111111111111111111.22222', 1, 5, '1000000000000000000000000000000000');
        test_cbrt_004('16.84', 7, 4, '2.563189');
        test_cbrt_004('-58918', 2, 3, '-39');
        test_cbrt_004('-74535634133038239268820777237286', 2, 4, '-42000000000');
        test_cbrt_004('6888888888.66666666666602248', 3, 5, '1900');
        test_cbrt_004('608785700000000000000000100000000000000000000.000000500020900040006', 1, 5, '800000000000000');
        test_cbrt_004('-3834369', 8, 0, '-156.51813');
        test_cbrt_004('4345752', 8, 0, '163.18804');
        test_cbrt_004('5000300.5', 5, 5, '171');
        test_cbrt_004('0.73', 7, 3, '0.9004113');
        test_cbrt_004('0.612', 20, 3, '0.84901847487755466985');
        test_cbrt_004('-26403122.886392512193592', 9, 3, '-297.772851');
        test_cbrt_004('-15047905.6442424463707664865226022703526330746497470178339129', 10, 2, '-246.8834739');
        test_cbrt_004('-0.57216409476227961', 122, 4, '-0.83018242216788557900092187018458431268949382089457981268783675303907114542359515145805957769873268594828033331460924645988');
        test_cbrt_004('-58892300900.0000037', 72, 3, '-3890.62620353612987584901759020572729952315745798457018660549639374283766');
        test_cbrt_004('4312692950776.434730495181946194732352621783', 134, 0, '16277.3179326290103123151730291347428666068760542903239801418389563715424057253795836596796134792716104557634024961949417454938847683');
        test_cbrt_004('0.772144893677647945980591', 32, 4, '0.91741591091195652167447475342283');
        test_cbrt_004('-6404156859301838811126951723297929248851328010128081790499875', 82, 4, '-185703741377679767357.3800976029196648819860800202650959861930855922060702625367479');
        test_cbrt_004('82632936267840682945343488907.06731470799523118845064687431515', 138, 6, '4355630815.60590669653353707630763857376582544155292301618426362137145407016564135319408858966461324112682532653188194626242452174990441469');
        test_cbrt_004('-61298.9118623440767849615617799359637', 197, 2, '-39.429165763027824633368109569426988335873352574747430934500984379971077138739905025020214349026555314495729845811145173351353942674905845843718751365519784088965133478757694847415073443325596801746');
        test_cbrt_004('-2667296564625933848.771563268738963983215162122262769664228', 16, 0, '-1386831.726818274');
        test_cbrt_004('-0.334827956215', 18, 4, '-0.694396042925351186');
        test_cbrt_004('-99720206756351473857877956382713150380254708747259063563139776823977600150709529793618374286723970525922071298906643096473046848495659004519869163757701760515093579766384020476650579781490788310361655846842647878265152413279324940775571807902246099745918912445535151332', 222, 0, '-463725583930338667619983284372725899222416698496535412229926661119869463138884485967116667.268764679696065784024043219821875298578444546083384238930673115329612447425356818168403301703207667321878308803543383110193582598871');
        test_cbrt_004('-7500005000000.0400000000000300010000000000000000000000000000000005000080000000000000000000000000000000000000000000000000000000000002', 148, 3, '-19574.34255569632077437589146736430354513462358173952556661853843109637110903043841920141950812963359142265525718451865996670282229623898813004424264');
        test_cbrt_004('-0.448468', 65, 3, '-0.76543882436933301547484358146042454236821782800684597996385314496');
        test_cbrt_004('4456480839.850118829380687717773702938945780108504222', 186, 0, '1645.62426023819366824168925970611179098042486858393864888187997539499903266584393283173483354076296462532577165369465744086271078047145002431391610101290550337528381582739390745330190718');
        test_cbrt_004('-96609.9150016783612444151212219171469160528', 240, 2, '-45.8853342870476892493411403085005845531506513402973065908688567063670288324040964632169186092910604211131726914840870130664139857417136966852726525679016120128473243314724524836298854193278510304781073613018919609658048462067078117541267917');
        test_cbrt_004('4685555525555555055595555555555555555555545555555555557555555.5555555555555555155555555555555', 248, 1, '167335093070845212053.23568655992334896377737501807442809961373434087576897330216500135950283334739701735651884253417447515894217902592534791090429673074268316351070024795424585615393609483094797289624124159380909320002173012536209191509994668942513');
        test_cbrt_004('-166.616666666', 209, 4, '-5.5026617052342616148242191958679981633756294691968284245117501906609287423436017722548887408126098326860453334063765780606472030703630175042357147586923686464448738079927220693696480524411130124852775767369759');
        test_cbrt_004('90000000000000990188336751810563895553131772327584661674356934574327131997430235171176535358829942834766892027903586810380716666666666.13894530889067032955500919787773607496418660983547640753478416765344978700918917680179444881557185725915289743352494311111111111', 154, 6, '448140474655718114369086092178601538485288241.3695491088028300586188927081853222791393481056106217377422579723430885965770967892400223712781827123169146742');
        test_cbrt_004('-85690377176662769530000000', 172, 6, '-440870139.6162986343668488373525420672013683234193107109561329235272890252923129958712015571449424496445764927227011775235765025343956947502249567673085220140428475752341634');
        test_cbrt_004('-770000', 315, 4, '-91.6565645433022286626092137070830558694163526764780961804072197329043071216124465836059153674866409019818795567376022473570999553232243320951491034642924310116859135403989828713296248110330728429307978818049273063638547762257276709121136983687240301319624468569985024000817994013321153096111049926913537599622929478');
        test_cbrt_004('-751306536843521448000318938740388', 22, 5, '-90908757590.86052782049');
    });
    /**
     * @tc.number    : DECIMAL_TEST_008
     * @tc.name      : Decimal_cbrt_Func_008
     * @tc.desc      : Test cbrt
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    it("Decimal_cbrt_Func_008", TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL1, () => {
        Decimal.set ({
            precision: 40,
            rounding: 4,
            toExpNeg: -9e15,
            toExpPos: 9e15,
            minE: -9e15,
            maxE: 9e15
        });
        try {
            test_cbrt_004('e', 40, 4, 'NaN');
            expect(true).assertEqual(false);
        } catch (err) {
            expect(err.name).assertEqual(`BusinessError`);
            expect(err.code).assertEqual(401);
            expect(err.message).assertEqual(`The type of "test(str)" must be Hex/Binary/Octal. Received value is: e`);
        }
    });
    /**
     * @tc.number    : DECIMAL_TEST_009
     * @tc.name      : Decimal_ceil_Func_009
     * @tc.desc      : Test ceil
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    it("Decimal_ceil_Func_009", TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL1, () => {
        Decimal.set ({
            precision: 20,
            rounding: 4,
            toExpNeg: -100,
            toExpPos: 100,
            minE: -9e15,
            maxE: 9e15
        });
        test_ceil_005('0', 0);
        test_ceil_005('-0', -0);
        test_ceil_005('Infinity', Infinity);
        test_ceil_005('-Infinity', -Infinity);
        test_ceil_005('NaN', NaN);
        test_ceil_005('1', 0.1);
        test_ceil_006('1', '0.4999999999999999');
        test_ceil_005('1', 0.5);
        test_ceil_005('1', 0.7);
        test_ceil_005('-0', -0.1);
        test_ceil_006('-0', '-0.4999999999999999');
        test_ceil_005('-0', -0.5);
        test_ceil_005('-0', -0.7);
        test_ceil_005('1', 1);
        test_ceil_005('2', 1.1);
        test_ceil_005('2', 1.5);
        test_ceil_005('2', 1.7);
        test_ceil_005('-1', -1);
        test_ceil_005('-1', -1.1);
        test_ceil_005('-1', -1.5);
        test_ceil_005('-1', -1.7);
        test_ceil_006('-0', '-0.999');
        test_ceil_006('2', '1.0000000000000000001');
        test_ceil_006('2', '1.0000000000000000000000000000000000000000000000000000000000000000000000000000001');
        test_ceil_006('1', '1e-9000000000000000');
        test_ceil_006('-0', '-1e-9000000000000000');
        test_ceil_006('-0', '-9.9e-9000000000000001');
        test_ceil_006('9.999999e+9000000000000000', '9.999999e+9000000000000000');
        test_ceil_006('-9.999999e+9000000000000000', '-9.999999e+9000000000000000');
        test_ceil_006('-Infinity', '-1e+9000000000000001');
        test_ceil_006('5.5879983320336874473209567979e+287894365', '5.5879983320336874473209567979e+287894365');
        test_ceil_006('-5.5879983320336874473209567979e+287894365', '-5.5879983320336874473209567979e+287894365');
        test_ceil_006('-2075364', '-2075364.364286541923');
        test_ceil_006('60593539780450631', '60593539780450631');
        test_ceil_006('65937898671515', '65937898671515');
        test_ceil_006('-39719494751819198566798', '-39719494751819198566798.578');
        test_ceil_006('92627382695288166557', '92627382695288166556.8683774524284866028260448205069');
        test_ceil_006('-881574', '-881574');
        test_ceil_006('-3633239209', '-3633239209.654526163275621746013315304191073405508491056');
        test_ceil_006('321978830777554620127500540', '321978830777554620127500539.339278568133088682532238002577');
        test_ceil_006('2074', '2073.532654804291079327244387978249477171032485250998396');
        test_ceil_006('677676305592', '677676305591.2');
        test_ceil_006('1', '0.0000000000006');
        test_ceil_006('39181479479778357', '39181479479778357');
        test_ceil_006('1', '0.00000000000000000087964700066672916651');
        test_ceil_006('896', '896');
        test_ceil_006('115083055948552475', '115083055948552475');
        test_ceil_006('9105942082143427451223', '9105942082143427451223');
        test_ceil_006('276312604693909858428', '276312604693909858427.21965306055697011390137926559');
        test_ceil_006('1', '0.0000252');
    });
    /**
     * @tc.number    : DECIMAL_TEST_010
     * @tc.name      : Decimal_ceil_Func_010
     * @tc.desc      : Test ceil
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    it("Decimal_ceil_Func_010", TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL1, () => {
        Decimal.set ({
            precision: 20,
            rounding: 4,
            toExpNeg: -100,
            toExpPos: 100,
            minE: -9e15,
            maxE: 9e15
        });
        try {
            test_ceil_006('e', 'e');
            expect(true).assertEqual(false);
        } catch (err) {
            expect(err.name).assertEqual(`BusinessError`);
            expect(err.code).assertEqual(401);
            expect(err.message).assertEqual(`The type of "test(str)" must be Hex/Binary/Octal. Received value is: e`);
        }
    });
    /**
     * @tc.number    : DECIMAL_TEST_011
     * @tc.name      : Decimal_clamp_Func_011
     * @tc.desc      : Test clamp
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    it("Decimal_clamp_Func_011", TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL1, () => {
        test_clamp_007('-0', '0', '0', '-0');
        test_clamp_007('-0', '-0', '0', '-0');
        test_clamp_007('-0', '0', '-0', '-0');
        test_clamp_007('-0', '-0', '-0', '-0');
        test_clamp_007('0', '0', '0', '0');
        test_clamp_007('0', '-0', '0', '0');
        test_clamp_007('0', '0', '-0', '0');
        test_clamp_007('0', '-0', '-0', '0');
        test_clamp_008(0, 0, 1, '0');
        test_clamp_008(-1, 0, 1, '0');
        test_clamp_008(-2, 0, 1, '0');
        test_clamp_008(1, 0, 1, '1');
        test_clamp_008(2, 0, 1, '1');
        test_clamp_008(1, 1, 1, '1');
        test_clamp_008(-1, 1, 1, '1');
        test_clamp_008(-1, -1, 1, '-1');
        test_clamp_008(2, 1, 2, '2');
        test_clamp_008(3, 1, 2, '2');
        test_clamp_008(1, 0, 1, '1');
        test_clamp_008(2, 0, 1, '1');
        test_clamp_008(Infinity, 0, 1, '1');
        test_clamp_008(0, -Infinity, 0, '0');
        test_clamp_008(-Infinity, 0, 1, '0');
        test_clamp_008(-Infinity, -Infinity, Infinity, '-Infinity');
        test_clamp_008(Infinity, -Infinity, Infinity, 'Infinity');
        test_clamp_008(0, 1, Infinity, '1');
        test_clamp_008(0, NaN, 1, 'NaN');
        test_clamp_008(0, 0, NaN, 'NaN');
        test_clamp_008(NaN, 0, 1, 'NaN');
    });
    /**
     * @tc.number    : DECIMAL_TEST_012
     * @tc.name      : Decimal_clamp_Func_012
     * @tc.desc      : Test clamp
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    it("Decimal_clamp_Func_012", TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL1, () => {
        try {
            test_clamp_007('e', 'e', 'e', 'e');
            expect(true).assertEqual(false);
        } catch (err) {
            expect(err.name).assertEqual(`BusinessError`);
            expect(err.code).assertEqual(401);
            expect(err.message).assertEqual(`The type of "test(str)" must be Hex/Binary/Octal. Received value is: e`);
        }
    });
    /**
     * @tc.number    : DECIMAL_TEST_013
     * @tc.name      : Decimal_clamp_Func_013
     * @tc.desc      : Test clamp
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    it("Decimal_clamp_Func_013", TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL1, () => {
        try {
            test_clamp_008(0, 1, 0, '0');
            expect(true).assertEqual(false);
        } catch (err) {
            expect(err.name).assertEqual(`BusinessError`);
            expect(err.code).assertEqual(10200001);
            expect(err.message).assertEqual(`The value of min is out of range. It must be <= 0. Received value is: 1`);
        }
    });
    /**
    * @tc.number    : DECIMAL_TEST_014
    * @tc.name      : Decimal_comparedTo_Func_014
    * @tc.desc      : Test comparedTo
    * @tc.size      : MediumTest
    * @tc.type      : Function
    * @tc.level     : Level 0
    */
    it("Decimal_comparedTo_Func_014", TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL1, () => {
        let N = NaN, I = Infinity;
        Decimal.set ({
            precision: 20,
            rounding: 4,
            toExpNeg: -9e15,
            toExpPos: 9e15,
            minE: -9e15,
            maxE: 9e15
        });
        test_comparedTo_009(1, 0, 1);
        test_comparedTo_009(1, -0, 1);
        test_comparedTo_009(-1, 0, -1);
        test_comparedTo_009(-1, -0, -1);
        test_comparedTo_009(0, 1, -1);
        test_comparedTo_009(0, -1, 1);
        test_comparedTo_009(-0, 1, -1);
        test_comparedTo_009(-0, -1, 1);
        test_comparedTo_009(0, 0, 0);
        test_comparedTo_009(0, -0, 0);
        test_comparedTo_009(-0, 0, 0);
        test_comparedTo_009(-0, -0, 0);
        test_comparedTo_010(0, '0.1', -1);
        test_comparedTo_010(0, '-0.1', 1);
        test_comparedTo_010(-0, '0.1', -1);
        test_comparedTo_010(-0, '-0.1', 1);
        test_comparedTo_011('0.1', 0, 1);
        test_comparedTo_011('0.1', -0, 1);
        test_comparedTo_011('-0.1', 0, -1);
        test_comparedTo_011('-0.1', -0, -1);
        test_comparedTo_009(N, 1, N);
        test_comparedTo_009(N, -1, N);
        test_comparedTo_009(N, 0, N);
        test_comparedTo_009(N, -0, N);
        test_comparedTo_009(N, 4, N);
        test_comparedTo_009(N, N, N);
        test_comparedTo_009(N, I, N);
        test_comparedTo_009(N, -I, N);
        test_comparedTo_010(N, '4534534.45435435', N);
        test_comparedTo_009(N, 99999.999, N);
        test_comparedTo_009(1, N, N);
        test_comparedTo_009(-1, N, N);
        test_comparedTo_009(0, N, N);
        test_comparedTo_009(-0, N, N);
        test_comparedTo_009(I, N, N);
        test_comparedTo_009(-I, N, N);
        test_comparedTo_009(I, 1, 1);
        test_comparedTo_009(I, -1, 1);
        test_comparedTo_009(-I, 1, -1);
        test_comparedTo_009(-I, -1, -1);
        test_comparedTo_009(I, 0, 1);
        test_comparedTo_009(I, -0, 1);
        test_comparedTo_009(-I, 0, -1);
        test_comparedTo_009(-I, -0, -1);
        test_comparedTo_010(I, '354.345341', 1);
        test_comparedTo_010(I, '-999e999', 1);
        test_comparedTo_009(I, -I, 1);
        test_comparedTo_009(-I, I, -1);
        test_comparedTo_009(-I, -I, 0);
        test_comparedTo_009(I, 123, 1);
        test_comparedTo_009(3, -I, 1);
        test_comparedTo_009(1, I, -1);
        test_comparedTo_009(1, -I, 1);
        test_comparedTo_009(-1, I, -1);
        test_comparedTo_009(-1, -I, 1);
        test_comparedTo_009(0, I, -1);
        test_comparedTo_009(0, -I, 1);
        test_comparedTo_009(-0, I, -1);
        test_comparedTo_009(-0, -I, 1);
        test_comparedTo_009(1.21123e43, -I, 1);
        test_comparedTo_011('-999.0', I, -1);
        test_comparedTo_011('657.342e-45', -I, 1);
        test_comparedTo_009(-0, I, -1);
        test_comparedTo_010(0, '0.000000009', -1);
        test_comparedTo_010(0, '-0.000000009', 1);
        test_comparedTo_010(-0, '0.000000009', -1);
        test_comparedTo_010(-0, '-0.000000009', 1);
        test_comparedTo_011('0.000000009', 0, 1);
        test_comparedTo_011('0.000000009', -0, 1);
        test_comparedTo_011('-0.000000009', 0, -1);
        test_comparedTo_011('-0.000000009', -0, -1);
        test_comparedTo_010(0, '5.5', -1);
        test_comparedTo_010(0, '-5.5', 1);
        test_comparedTo_010(-0, '5.5', -1);
        test_comparedTo_010(-0, '-5.5', 1);
        test_comparedTo_011('5.5', 0, 1);
        test_comparedTo_011('5.5', -0, 1);
        test_comparedTo_011('-5.5', 0, -1);
        test_comparedTo_011('-5.5', -0, -1);
        test_comparedTo_010(1, '0', 1);
        test_comparedTo_010(1, '1', 0);
        test_comparedTo_010(1, '-45', 1);
        test_comparedTo_010(1, '22', -1);
        test_comparedTo_009(1, 0o144, -1);
        test_comparedTo_010(1, '0144', -1);
        test_comparedTo_010(1, '6.1915', -1);
        test_comparedTo_010(1, '-1.02', 1);
        test_comparedTo_010(1, '0.09', 1);
        test_comparedTo_010(1, '-0.0001', 1);
        test_comparedTo_010(1, '8e5', -1);
        test_comparedTo_010(1, '9E12', -1);
        test_comparedTo_010(1, '1e-14', 1);
    });
    /**
    * @tc.number    : DECIMAL_TEST_015
    * @tc.name      : Decimal_comparedTo_Func_015
    * @tc.desc      : Test comparedTo
    * @tc.size      : MediumTest
    * @tc.type      : Function
    * @tc.level     : Level 0
    */
    it("Decimal_comparedTo_Func_015", TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL1, () => {
        let N = NaN, I = Infinity;
        Decimal.set ({
            precision: 20,
            rounding: 4,
            toExpNeg: -9e15,
            toExpPos: 9e15,
            minE: -9e15,
            maxE: 9e15
        });
        test_comparedTo_010(1, '3.345E-9', 1);
        test_comparedTo_010(1, '-345.43e+4', 1);
        test_comparedTo_010(1, '-94.12E+0', 1);
        test_comparedTo_012('0', '0', 0);
        test_comparedTo_009(3, -0, 1);
        test_comparedTo_009(9.654, 0, 1);
        test_comparedTo_010(0, '111.1111111110000', -1);
        test_comparedTo_009(-1, 1, -1);
        test_comparedTo_009(-0.01, 0.01, -1);
        test_comparedTo_009(54, -54, 1);
        test_comparedTo_010(9.99, '-9.99', 1);
        test_comparedTo_012('0.0000023432495704937', '-0.0000023432495704937', 1);
        test_comparedTo_009(100, 100, 0);
        test_comparedTo_010(-999.99, '0.01', -1);
        test_comparedTo_011('03.333', -4, 1);
        test_comparedTo_009(-1, -0.1, -1);
        test_comparedTo_010(43534.5435, '0.054645', 1);
        test_comparedTo_012('99999', '1', 1);
        test_comparedTo_009(0.04, 0.079393068, -1);
        test_comparedTo_009(0.023, 0.04840192819, -1);
        test_comparedTo_009(0.021879, 0.02, 1);
        test_comparedTo_012('0', '-7502', 1);
        test_comparedTo_012('-1', '-0.000000000000000000295176', -1);
        test_comparedTo_012('2.9', '3.23360', -1);
        test_comparedTo_012('1.14', '4289', -1);
        test_comparedTo_012('-3', '0', -1);
        test_comparedTo_012('0.00000000000000551', '-3958.43', 1);
        test_comparedTo_012('-13', '0', -1);
        test_comparedTo_012('-23.382', '-16.1', -1);
        test_comparedTo_012('-176.85', '0', -1);
        test_comparedTo_012('1.38497', '-0.0000000561', 1);
        test_comparedTo_012('3.90', '18.124', -1);
        test_comparedTo_012('-239.52', '-0.00000000000066862', -1);
        test_comparedTo_012('5.7', '2248.28', -1);
        test_comparedTo_012('-0.00000000012', '0', -1);
        test_comparedTo_012('29', '-5', 1);
        test_comparedTo_012('0', '-54', 1);
        test_comparedTo_012('3', '-1.1', 1);
        test_comparedTo_012('-461.9', '-13803', 1);
        test_comparedTo_012('-1', '0.00054428', -1);
        test_comparedTo_012('-0.000000000000000683', '7', -1);
        test_comparedTo_012('2', '1', 1);
        test_comparedTo_012('118.608', '-4.8', 1);
        test_comparedTo_012('3', '0', 1);
        test_comparedTo_012('83.5', '44.9', 1);
        test_comparedTo_012('-3', '-2.86', -1);
        test_comparedTo_012('1138.06', '47.08', 1);
        test_comparedTo_012('-2.3', '3', -1);
        test_comparedTo_012('-848', '0', -1);
        test_comparedTo_012('5', '2', 1);
        test_comparedTo_012('11.3', '-176.3', 1);
        test_comparedTo_012('-302142', '3.8', -1);
        test_comparedTo_012('-9', '-38', 1);
        test_comparedTo_012('0', '-1', 1);
        test_comparedTo_012('6161', '-3', 1);
        test_comparedTo_012('8', '0', 1);
        test_comparedTo_012('-1334', '-14', -1);
        test_comparedTo_012('3.593', '0.000000000000059975', 1);
        test_comparedTo_012('0.0000000000000000847', '-1186.11', 1);
        test_comparedTo_012('4.62', '14.47', -1);
        test_comparedTo_012('0', '-319', 1);
        test_comparedTo_012('23168', '8.3485', 1);
        test_comparedTo_012('-16', '-1.6', -1);
        test_comparedTo_012('64.3', '2108.4', -1);
        test_comparedTo_012('4', '-1', 1);
        test_comparedTo_012('-0.50346', '-319.6', 1);
        test_comparedTo_012('10910.0', '-0.00000000000000000314208', 1);
        test_comparedTo_012('1', '0', 1);
        test_comparedTo_012('-0.0000000000000552', '0.00000000015', -1);
        test_comparedTo_012('0', '16', -1);
        test_comparedTo_012('38.4', '35.83', 1);
        test_comparedTo_012('-1.1', '-0.000002850', -1);
        test_comparedTo_012('0.000000000000011', '1.2', -1);
        test_comparedTo_012('-50.66', '2.2', -1);
        test_comparedTo_012('-1187', '5', -1);
        test_comparedTo_012('174', '-1.8175', 1);
        test_comparedTo_012('651.1', '-11.332', 1);
        test_comparedTo_012('-1', '-0.000000000000000011', -1);
        test_comparedTo_012('7156', '4.84', 1);
        test_comparedTo_012('1', '3', -1);
        test_comparedTo_012('0', '77487', -1);
        test_comparedTo_012('51.7181', '17', 1);
        test_comparedTo_012('13.132', '0.000000000000029446', 1);
        test_comparedTo_012('5.4', '0.000000000000000006325', 1);
        test_comparedTo_012('4.1', '-2.42', 1);
        test_comparedTo_012('-5.2', '-44.1', 1);
        test_comparedTo_012('-6', '15.018', -1);
        test_comparedTo_012('-27.949', '-1170.9', 1);
        test_comparedTo_012('0', '0.0000000000000000120', -1);
        test_comparedTo_012('-3.7', '-52.1', 1);
        test_comparedTo_012('-17.43', '0', -1);
        test_comparedTo_012('-1.4', '-11737', 1);
        test_comparedTo_012('-7.17', '615.40', -1);
        test_comparedTo_012('-1', '-0.000000000000000389', -1);
        test_comparedTo_012('0', '-11.7', 1);
        test_comparedTo_012('0', '-0.0000039894', 1);
        test_comparedTo_012('-14.15', '-0.0000011139', -1);
        test_comparedTo_012('-16260', '-3.97', -1);
        test_comparedTo_012('-0.00000066', '-1.3', 1);
        test_comparedTo_012('-818', '0', -1);
        test_comparedTo_012('-3', '-30020.5', 1);
        test_comparedTo_012('-3.328', '-28.16', 1);
        test_comparedTo_012('-74', '2', -1);
        test_comparedTo_012('-30332', '-1.61', -1);
        test_comparedTo_012('-0.00000000000000494', '0', -1);
        test_comparedTo_012('-2.1', '11.6037', -1);
        test_comparedTo_012('-0.0000000000000013762', '-5273', 1);
        test_comparedTo_012('-0.00000000000000000002353', '1188', -1);
        test_comparedTo_012('-0.00000000000000033619', '-4', 1);
        test_comparedTo_012('3.2', '-597.81', 1);
        test_comparedTo_012('14265', '0', 1);
        test_comparedTo_012('-18.8703', '1', -1);
        test_comparedTo_012('-4.5', '-146.5', 1);
        test_comparedTo_012('-259.7', '0', -1);
        test_comparedTo_012('-72.57', '4.3', -1);
        test_comparedTo_012('0.0000015', '9.06', -1);
        test_comparedTo_012('490815', '0.0000000000000000000385', 1);
        test_comparedTo_012('0.614', '-0.000000000000000001154', 1);
        test_comparedTo_012('1.2', '0', 1);
        test_comparedTo_012('-1.8', '-436269', 1);
        test_comparedTo_012('0', '-7', 1);
        test_comparedTo_012('-3.18290', '-453.85', 1);
        test_comparedTo_012('5.645', '1', 1);
        test_comparedTo_012('8.426', '1.0', 1);
        test_comparedTo_012('-6702', '-0.000003053', -1);
        test_comparedTo_012('0', '-0.0000000472', 1);
        test_comparedTo_012('-13.789', '0.12167', -1);
        test_comparedTo_012('0', '-22472', 1);
        test_comparedTo_012('769.0', '0.00000019970', 1);
        test_comparedTo_012('0', '-145.1', 1);
        test_comparedTo_012('-307', '-1', -1);
        test_comparedTo_012('1', '-0.000015', 1);
        test_comparedTo_012('3', '-4', 1);
        test_comparedTo_012('7', '3.791', 1);
        test_comparedTo_012('-0.0000000000000021', '0.00000414', -1);
        test_comparedTo_012('-2', '0.0486', -1);
        test_comparedTo_012('-4', '-0.00268', -1);
    });
    /**
    * @tc.number    : DECIMAL_TEST_016
    * @tc.name      : Decimal_comparedTo_Func_016
    * @tc.desc      : Test comparedTo
    * @tc.size      : MediumTest
    * @tc.type      : Function
    * @tc.level     : Level 0
    */
    it("Decimal_comparedTo_Func_016", TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL1, () => {
        let N = NaN, I = Infinity;
        Decimal.set ({
            precision: 20,
            rounding: 4,
            toExpNeg: -9e15,
            toExpPos: 9e15,
            minE: -9e15,
            maxE: 9e15
        });
        test_comparedTo_012('0.0000000000791', '-4.97', 1);
        test_comparedTo_012('-13795', '3', -1);
        test_comparedTo_012('-13.197', '0', -1);
        test_comparedTo_012('0', '-4.7', 1);
        test_comparedTo_012('3.7', '0', 1);
        test_comparedTo_012('10.3925', '7.312', 1);
        test_comparedTo_012('2.263', '7.388', -1);
        test_comparedTo_012('-6.0', '-2', -1);
        test_comparedTo_012('1', '-1', 1);
        test_comparedTo_012('1.987', '32454', -1);
        test_comparedTo_012('-0.361', '-200.6', 1);
        test_comparedTo_012('5.0', '-7', 1);
        test_comparedTo_012('-6.2', '-0.0056', -1);
        test_comparedTo_012('-3.8', '1', -1);
        test_comparedTo_012('-9.3', '-7.64', -1);
        test_comparedTo_012('38364', '-127.311', 1);
        test_comparedTo_012('-1.6', '-3.06', 1);
        test_comparedTo_012('1', '-2', 1);
        test_comparedTo_012('3.952', '5', -1);
        test_comparedTo_012('566', '125.359', 1);
        test_comparedTo_012('1078.97', '496', 1);
        test_comparedTo_012('0.000000000097586', '-0.000000000000000000027457', 1);
        test_comparedTo_012('-37.5', '-28572', 1);
        test_comparedTo_012('412', '-0.0000000000000001572', 1);
        test_comparedTo_012('0.00000024221', '-35.8881', 1);
        test_comparedTo_012('25.8', '0.0000000000000000000242', 1);
        test_comparedTo_012('0.30', '0', 1);
        test_comparedTo_012('-26.440', '-3.64', -1);
        test_comparedTo_012('1.15', '-3229', 1);
        test_comparedTo_012('-137.1', '2', -1);
        test_comparedTo_012('0.00000000077', '53558', -1);
        test_comparedTo_012('0', '2.6', -1);
        test_comparedTo_012('-3', '-6', 1);
        test_comparedTo_012('-0.0000000000000000139', '-0.0005289', 1);
        test_comparedTo_012('-0.00000000000000000697', '-1.309', 1);
        test_comparedTo_012('-0.0000045', '-8.3', 1);
        test_comparedTo_012('-2', '-1.3', -1);
        test_comparedTo_012('-1.42209', '-1.74', 1);
        test_comparedTo_012('-608.88', '25.3', -1);
        test_comparedTo_012('0', '-1', 1);
        test_comparedTo_012('5.6', '-4', 1);
        test_comparedTo_012('7.17', '-4', 1);
        test_comparedTo_012('56.6', '8218.4', -1);
        test_comparedTo_012('68.33', '0', 1);
        test_comparedTo_012('5.0', '1', 1);
        test_comparedTo_012('32.734', '-9', 1);
        test_comparedTo_012('0', '20837.0', -1);
        test_comparedTo_012('-0.0000000000000000013950', '-3364.72', 1);
        test_comparedTo_012('3.66', '-0.0000000000000000536', 1);
        test_comparedTo_012('-1471.14', '6', -1);
        test_comparedTo_012('0', '-0.0000013', 1);
        test_comparedTo_012('1', '-5', 1);
        test_comparedTo_012('-10449.8', '-58.424', -1);
        test_comparedTo_012('0', '0.0000000000000000017122', -1);
        test_comparedTo_012('0.000000000000026585', '4.1', -1);
        test_comparedTo_012('-7', '0.00000000000000000920', -1);
        test_comparedTo_012('0.00000000489', '0.00000000000000000036325', 1);
        test_comparedTo_012('0', '104674', -1);
        test_comparedTo_012('-1.30063', '0.000000004051', -1);
        test_comparedTo_012('0', '2', -1);
        test_comparedTo_012('-3', '0.00150', -1);
        test_comparedTo_012('-407.95', '495.290', -1);
        test_comparedTo_012('24533.8', '-2539', 1);
        test_comparedTo_012('1', '0', 1);
        test_comparedTo_012('-43.4', '0', -1);
        test_comparedTo_012('-1399', '16.89', -1);
        test_comparedTo_012('-232480', '0', -1);
        test_comparedTo_012('3', '-1', 1);
        test_comparedTo_012('6.2', '12.2', -1);
        test_comparedTo_012('-23.38', '0.0853', -1);
        test_comparedTo_012('-18.2', '1', -1);
        test_comparedTo_012('0.002118', '-16.9821', 1);
        test_comparedTo_012('8819.2', '28.744', 1);
        test_comparedTo_012('-2', '-5', 1);
        test_comparedTo_012('-2.10', '9.2620', -1);
        test_comparedTo_012('0', '-5', 1);
        test_comparedTo_012('23963.9', '0', 1);
        test_comparedTo_012('-0.00000045', '0', -1);
        test_comparedTo_012('2', '2', 0);
        test_comparedTo_012('-3.444', '3', -1);
        test_comparedTo_012('0.0000016140', '1.5132', -1);
        test_comparedTo_012('0', '-1', 1);
        test_comparedTo_012('-1', '-7', 1);
        test_comparedTo_012('1', '-869.7', 1);
        test_comparedTo_012('0.000000000000016', '-1609.8', 1);
        test_comparedTo_012('651.3', '2.923', 1);
        test_comparedTo_012('270.901', '5.2', 1);
        test_comparedTo_012('0', '-2.6', 1);
        test_comparedTo_012('0.000000000020617', '0.0000000096018', -1);
        test_comparedTo_012('4.32', '-7', 1);
        test_comparedTo_012('-1.5', '-23.7', 1);
        test_comparedTo_012('1.2497', '-58.42', 1);
        test_comparedTo_012('-6.4', '2.24', -1);
        test_comparedTo_012('0', '1002.3', -1);
        test_comparedTo_012('265.64', '26.7', 1);
        test_comparedTo_012('387.4', '757.85', -1);
        test_comparedTo_012('0', '6.525', -1);
        test_comparedTo_012('1120.24', '-0.000000000000000000232098', 1);
        test_comparedTo_012('67.22', '0', 1);
        test_comparedTo_012('67', '-3.1', 1);
        test_comparedTo_012('-1.01', '0.00059917', -1);
        test_comparedTo_012('-0.000000000000091884', '2.7', -1);
        test_comparedTo_012('171', '4', 1);
        test_comparedTo_012('0', '-367347', 1);
        test_comparedTo_012('95.1', '-0.000000114267', 1);
        test_comparedTo_012('62.4', '-5', 1);
        test_comparedTo_012('11627.8', '9.844', 1);
        test_comparedTo_012('-1', '2.33', -1);
        test_comparedTo_012('-14', '0', -1);
        test_comparedTo_012('-55', '7', -1);
        test_comparedTo_012('-22.460', '872.15', -1);
        test_comparedTo_012('-0.00000000027029', '2.05', -1);
        test_comparedTo_012('-0.0000000000000004846', '17.73', -1);
        test_comparedTo_012('3.6', '0', 1);
        test_comparedTo_012('-3.233', '0', -1);
        test_comparedTo_012('-3.878', '-383', 1);
        test_comparedTo_012('-0.0000000000174', '20.7', -1);
        test_comparedTo_012('0.0000000000000000000126', '-2.229', 1);
        test_comparedTo_012('-2.307', '14.8000', -1);
        test_comparedTo_012('-563.79', '0.000000000000000069934', -1);
        test_comparedTo_012('-315.71', '-0.00832', -1);
        test_comparedTo_012('7', '0', 1);
        test_comparedTo_012('188.9', '-2.883', 1);
        test_comparedTo_012('0', '14.5720', -1);
        test_comparedTo_012('2', '5389.3', -1);
        test_comparedTo_012('-2413.1', '-28', -1);
        test_comparedTo_012('0', '-98.587', 1);
        test_comparedTo_012('3', '0', 1);
        test_comparedTo_012('17930.7', '1880.31', 1);
        test_comparedTo_012('-1', '-0.00000000000000000272', -1);
        test_comparedTo_012('0.00000000000000000002288', '51.0841', -1);
        test_comparedTo_012('-1.004', '-14799', 1);
        test_comparedTo_012('-0.0024973', '-6', 1);
        test_comparedTo_012('-0.00000000000054', '6', -1);
        test_comparedTo_012('0.0009288', '-5.2', 1);
        test_comparedTo_012('-45.4', '-0.000042102', -1);
        test_comparedTo_012('-56.1', '1793.86', -1);
        test_comparedTo_012('-68.425', '0.0000000000000068415', -1);
        test_comparedTo_012('-2.20', '0', -1);
        test_comparedTo_012('136.51', '0', 1);
        test_comparedTo_012('-5.9773', '45', -1);
        test_comparedTo_012('-6996', '60.60', -1);
        test_comparedTo_012('0.00000000773', '-2.6', 1);
        test_comparedTo_012('-3827', '-42.150', -1);
        test_comparedTo_012('-4', '3277', -1);
        test_comparedTo_012('0.0000000000000201', '-0.00000000000000094', 1);
        test_comparedTo_012('7497.2', '-45738', 1);
        test_comparedTo_012('5.20', '2', 1);
        test_comparedTo_012('139673', '0.000013', 1);
        test_comparedTo_012('258285', '0.00000000000338', 1);
        test_comparedTo_012('20.6', '0', 1);
        test_comparedTo_012('5', '45.3', -1);
        test_comparedTo_012('0', '0.00000000000000000010937', -1);
        test_comparedTo_012('2', '-392.465', 1);
        test_comparedTo_012('-0.00000000000004475220262613', '390046.9220288808', -1);
        test_comparedTo_012('-52', '-7', -1);
        test_comparedTo_012('-7137400653786386', '-1220454', -1);
        test_comparedTo_012('19.76074721670306', '39433637.5', -1);
        test_comparedTo_012('495810.901671347', '-201199464.42718987', 1);
        test_comparedTo_012('2180987378927.828', '28150984.022786039', 1);
        test_comparedTo_012('364.263', '1334', -1);
        test_comparedTo_012('-4.541827796913', '0.000000000720283699415669', -1);
        test_comparedTo_012('0.000000000000533031300116917190', '-733584.206', 1);
        test_comparedTo_012('-0.0000000000000019761199', '-6724.9979821490', 1);
        test_comparedTo_012('0.00000000012335234299864', '56.021423640836509', -1);
        test_comparedTo_012('17752.992435030', '513735.52129558557', -1);
        test_comparedTo_012('-341665592090.67519', '895755.23903', -1);
        test_comparedTo_012('-0.01174948256069749', '38841.427732372', -1);
        test_comparedTo_012('2067269955.10633', '-215483633', 1);
        test_comparedTo_012('58373', '-0.000000000000000208432238083784077', 1);
        test_comparedTo_012('2821.0921360930698', '-0.0019370832810573843', 1);
        test_comparedTo_012('-1', '-6987341307332550', 1);
        test_comparedTo_012('-0.000000000000000135940520450', '-7', 1);
        test_comparedTo_012('368879186519841.03', '3.86407044811851', 1);
        test_comparedTo_012('54.8552188726690', '-17618.8325331', 1);
        test_comparedTo_012('0.00000000719285162', '3.0', -1);
        test_comparedTo_012('-24541949382.5', '12000388993272705.7', -1);
        test_comparedTo_012('-0.00000000000000016019271145', '-5010014644.83398', 1);
        test_comparedTo_012('0.00000342615147619', '38.8937553143', -1);
        test_comparedTo_012('0.000000000000030', '698637', -1);
        test_comparedTo_012('-940562183996', '-9538.76857523965', -1);
        test_comparedTo_012('0.7992283723', '-301.642', 1);
        test_comparedTo_012('-943394092028892', '0.00000000000249028944', -1);
        test_comparedTo_012('0.0000000065', '19.8', -1);
        test_comparedTo_012('-0.00000024892', '1.081095088', -1);
        test_comparedTo_012('4693767.27', '0', 1);
        test_comparedTo_012('241.51552', '-0.000000000029998424146', 1);
        test_comparedTo_012('4.70', '-3889836.808618', 1);
        test_comparedTo_012('-31', '22.1677904', -1);
        test_comparedTo_012('-8', '0.0000000000000018564862859', -1);
        test_comparedTo_012('-2.82', '-0.1308117625', -1);
        test_comparedTo_012('-0.000000000000000490813322', '9628302045.4', -1);
        test_comparedTo_012('14', '-1', 1);
        test_comparedTo_012('-21665490839.0', '-308.104922674', -1);
        test_comparedTo_012('-5', '-6.6', 1);
        test_comparedTo_012('20.356245251', '-2629.4181', 1);
        test_comparedTo_012('-1.39', '24102492360.03791', -1);
        test_comparedTo_012('26.56', '-81.84491435616642', 1);
        test_comparedTo_012('12733804882', '3.16734', 1);
        test_comparedTo_012('0.0000000000001331522614064615', '-62.298429591', 1);
        test_comparedTo_012('4.5417', '-0.0000000000000000000906964635852953', 1);
        test_comparedTo_012('5.0', '3.99206', 1);
        test_comparedTo_012('28282932454425', '20112043684.32', 1);
        test_comparedTo_012('-119.144720881', '-129.74436439545', 1);
        test_comparedTo_012('740279.3975', '18685368847070828', -1);
        test_comparedTo_012('-194303.7', '0.000000000000006199756267389375', -1);
        test_comparedTo_012('0.000000000000000002405090', '-0.00000000979604845', 1);
        test_comparedTo_012('-0.0001603124275271', '0.000000006060544102736781', -1);
        test_comparedTo_012('-179.52', '-76.6', -1);
        test_comparedTo_012('9736.4996007851800', '99.6', 1);
        test_comparedTo_012('-0.0000000000000000000126060214789203821', '6748323899.81', -1);
        test_comparedTo_012('-0.0000076569074016550', '0.000000000525779058', -1);
        test_comparedTo_012('0.0000000000000000047090003506832525', '0.00000000000000011759', -1);
        test_comparedTo_012('-286334697213252', '8557782748357', -1);
        test_comparedTo_012('-0.000000025274118612780187', '-127000540', 1);
        test_comparedTo_012('0.00000000610055019436568', '-87.3', 1);
        test_comparedTo_012('-1560822.78', '360857.435', -1);
        test_comparedTo_012('243209397988565176', '-2171.0', 1);
        test_comparedTo_012('1089364.8', '-7', 1);
        test_comparedTo_012('5', '-195.43311519499808', 1);
        test_comparedTo_012('0', '-12.6', 1);
        test_comparedTo_012('-8917436.7369', '-2412090', -1);
        test_comparedTo_012('0.0000000000258', '-0.000000000000000001137187844109', 1);
        test_comparedTo_012('65611', '-0.00000000000527362056737', 1);
        test_comparedTo_012('0.0000000000000000000113412508151534071', '-4.9964', 1);
        test_comparedTo_012('20156417.0', '0.0000000000000253800552009', 1);
        test_comparedTo_012('32.967316', '-176195213.7000883', 1);
        test_comparedTo_012('-542212737079077800', '-593.88569405080', -1);
        test_comparedTo_012('-0.000000000000000004199278271388794', '57186245414.80793', -1);
        test_comparedTo_012('0.00000004507194567013278', '1.0', -1);
        test_comparedTo_012('43551631176247', '-2195', 1);
        test_comparedTo_012('-4.6', '0.00008016', -1);
        test_comparedTo_012('-0.000013384535', '3437784.58', -1);
        test_comparedTo_012('0.00000000000000002007911523', '-1.34', 1);
        test_comparedTo_012('2.5', '-39.06', 1);
        test_comparedTo_012('0.0000000000000000051', '2', -1);
        test_comparedTo_012('0.00012813936789257785', '1021.0303931', -1);
    });
    /**
    * @tc.number    : DECIMAL_TEST_017
    * @tc.name      : Decimal_comparedTo_Func_017
    * @tc.desc      : Test comparedTo
    * @tc.size      : MediumTest
    * @tc.type      : Function
    * @tc.level     : Level 0
    */
    it("Decimal_comparedTo_Func_017", TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL1, () => {
        let N = NaN, I = Infinity;
        Decimal.set ({
            precision: 20,
            rounding: 4,
            toExpNeg: -9e15,
            toExpPos: 9e15,
            minE: -9e15,
            maxE: 9e15
        });
        test_comparedTo_012('0.00000000000000000132229', '47.1', -1);
        test_comparedTo_012('-0.00002120044', '0.0000000000000000064902789323', -1);
        test_comparedTo_012('9', '379472788024622.729', -1);
        test_comparedTo_012('20.510820935587124', '0.0000000000028179781', 1);
        test_comparedTo_012('-0.0000000000000000000336381763977', '1.17539', -1);
        test_comparedTo_012('0', '-335.0', 1);
        test_comparedTo_012('2.4', '-0.00000000000023', 1);
        test_comparedTo_012('379.690496326', '-0.000000000000000003740124432080006', 1);
        test_comparedTo_012('9612.15057327', '7', 1);
        test_comparedTo_012('64.55819568', '103', -1);
        test_comparedTo_012('306554.22', '-21168.82471', 1);
        test_comparedTo_012('0', '0.00000000000000378671778', -1);
        test_comparedTo_012('-4869994212.02', '-82.3249644', -1);
        test_comparedTo_012('-28281314', '0.00023', -1);
        test_comparedTo_012('-272266413010184382', '-21443895.1', -1);
        test_comparedTo_012('0', '256.5', -1);
        test_comparedTo_012('-0.0000000000000000059504', '-393', 1);
        test_comparedTo_012('-85483356.741520', '-0.135106007572', -1);
        test_comparedTo_012('1256398743581', '-0.00000000000000113', 1);
        test_comparedTo_012('9265.8054085790753', '1101.60', 1);
        test_comparedTo_012('21755297.7418484298', '-1961304', 1);
        test_comparedTo_012('-4.24', '-20364.5241763', 1);
        test_comparedTo_012('-0.00000163743621', '-15716423.93', 1);
        test_comparedTo_012('0.0000000020933557160', '-8448055.64162653', 1);
        test_comparedTo_012('193', '1919.381696195', -1);
        test_comparedTo_012('-39007.0872890', '58659197064.3566', -1);
        test_comparedTo_012('1.224', '-82293358.63', 1);
        test_comparedTo_012('0.0000000000000001573421585953', '0.00000000159648', -1);
        test_comparedTo_012('0', '-91.479627934421', 1);
        test_comparedTo_012('-186.247902631', '-0.00000000000000008879', -1);
        test_comparedTo_012('34342532998345', '0.000000000000000001681734691290559', 1);
        test_comparedTo_012('-4020.8878086173', '1.08', -1);
        test_comparedTo_012('-0.1630447778870097', '8176.334', -1);
        test_comparedTo_012('-0.0000000000000000582491728505043', '0.00000000000000808314', -1);
        test_comparedTo_012('-0.00000031', '3137213.71057', -1);
        test_comparedTo_012('-28.21073575152', '8530334210.39291', -1);
        test_comparedTo_012('-0.00000041292', '-66921.7723433', 1);
        test_comparedTo_012('-261247.289569419', '-0.0000022547224', -1);
        test_comparedTo_012('-4.07', '-6.1', 1);
        test_comparedTo_012('688.144527235', '45986414948', -1);
        test_comparedTo_012('-1', '-0.0231932902995', -1);
        test_comparedTo_012('0.0000000000000016241364087636498', '3', -1);
        test_comparedTo_012('64634.877977', '-39803483', 1);
        test_comparedTo_012('93.85', '-27.012', 1);
        test_comparedTo_012('-1804.8479', '-2720034', 1);
        test_comparedTo_012('-31207.70845', '-0.05392720639355', -1);
        test_comparedTo_012('-7479301046098815', '37.3', -1);
        test_comparedTo_012('50515.653686861597', '-0.00000000000000204399360', 1);
        test_comparedTo_012('-0.0000000000000000055012280316826870', '149.91618262', -1);
        test_comparedTo_012('2216863.9954067', '0.000000000000000775121457372458', 1);
        test_comparedTo_012('-3.1', '2', -1);
        test_comparedTo_012('-4.67', '0.000000018732162086', -1);
        test_comparedTo_012('-0.00002189591', '-0.000000000255830068339', -1);
        test_comparedTo_012('410611332258005.0', '-2840.2819', 1);
        test_comparedTo_012('-7397921366979', '-0.00000000000053', -1);
        test_comparedTo_012('-0.12413104038561', '-0.00000000000255343979', -1);
        test_comparedTo_012('10521370.1', '-55871447.8', 1);
        test_comparedTo_012('129500.264553199', '-3811409369958.95', 1);
        test_comparedTo_012('0.00000240712277094094', '1354108422.5', -1);
        test_comparedTo_012('-0.000000000000000005719028368733990', '540474.19019760', -1);
        test_comparedTo_012('977162.7422', '-0.000000000001402550', 1);
        test_comparedTo_012('1.54339295432', '-0.000001596789', 1);
        test_comparedTo_012('53798507.25', '-0.00129745384800', 1);
        test_comparedTo_012('-0.00418268966509248', '0.0000324984627', -1);
        test_comparedTo_012('118092.9308827', '-0.0000000000091', 1);
        test_comparedTo_012('0', '-93.6', 1);
        test_comparedTo_012('0', '152.55335', -1);
        test_comparedTo_012('-3405109.0892217', '0', -1);
        test_comparedTo_012('445424.679402140', '85.3554', 1);
        test_comparedTo_012('5036.98', '22371.6657', -1);
        test_comparedTo_012('-1.9', '0.000000102345283335839', -1);
        test_comparedTo_012('-42.2659', '3.721', -1);
        test_comparedTo_012('0.0000016709189598', '6.170585', -1);
        test_comparedTo_012('-3', '0', -1);
        test_comparedTo_012('-0.0000000061', '5497334338493.62', -1);
        test_comparedTo_012('-124932073873228', '0.000000000370', -1);
        test_comparedTo_012('-0.007149648796120', '-0.00000001269559959', -1);
        test_comparedTo_012('1675530.7719', '-1065461.6469931248', 1);
        test_comparedTo_012('1053.3', '10097922.4048112434', -1);
        test_comparedTo_012('-92523142643508', '-4', -1);
        test_comparedTo_012('200.8', '-36.675816237421759', 1);
        test_comparedTo_012('2.0', '34282969.24101', -1);
        test_comparedTo_012('-0.120192312259366', '-99423384.4155', 1);
        test_comparedTo_012('0.00000000000000000746964', '-4.50907217', 1);
        test_comparedTo_012('2521.848164', '-16771705.710', 1);
        test_comparedTo_012('0.00002756245400', '0.0032449553261', -1);
        test_comparedTo_012('-0.00000001332527923', '574.55219962424', -1);
        test_comparedTo_012('-0.000000000000000179221403668', '57235.797', -1);
        test_comparedTo_012('0.000000057866988749115', '0.00000000014', 1);
        test_comparedTo_012('3', '1.2', 1);
        test_comparedTo_012('56.30058910190568', '-1680170716816089', 1);
        test_comparedTo_012('-2', '-24381767.5', 1);
        test_comparedTo_012('11799.81119', '-0.0000092161582', 1);
        test_comparedTo_012('1.13', '-1', 1);
        test_comparedTo_012('1', '-802.5013810814', 1);
        test_comparedTo_012('54624549209148.7', '-0.000002846161', 1);
        test_comparedTo_012('138301402', '-0.00011', 1);
        test_comparedTo_012('5', '-2.4', 1);
        test_comparedTo_012('-4604424', '1.28478944', -1);
        test_comparedTo_012('-146100841048.0', '92.57', -1);
        test_comparedTo_012('-0.0000000000000000020786339367465', '0.0000000517784775175150122', -1);
        test_comparedTo_012('94366206024220.8', '-147.3818299', 1);
        test_comparedTo_012('-3.30342757', '-2.8', -1);
        test_comparedTo_012('1458645603.7314952', '-0.00000000000000071', 1);
        test_comparedTo_012('-22352269.3857581', '1.133', -1);
        test_comparedTo_012('0.00000000000203016463277398240', '11.54042', -1);
        test_comparedTo_012('119.31', '0.0000000000005419744970291', 1);
        test_comparedTo_012('-479.458846', '-61007894', 1);
        test_comparedTo_012('-12.748', '-42.6', 1);
        test_comparedTo_012('-4', '-2102161', 1);
        test_comparedTo_012('-0.0000892951', '-0.00000000700082036664', -1);
        test_comparedTo_012('-78249536473266824330849.66777355094653206196949807187125', '-0.0000000000000003657205364898565', -1);
        test_comparedTo_012('-794146002335392753453.706827563775514677616', '-0.000000000000002003697772718678199294529887857336117611280517515976', -1);
        test_comparedTo_012('-415', '392495171560354735.54', -1);
        test_comparedTo_012('-0.00000000003641527559883410541221', '118893973463454526683808886319100407749', -1);
        test_comparedTo_012('-246230199620.751986', '-60621558.218545419613692429476293547415222080017643997', -1);
        test_comparedTo_012('1135.2381823', '-7025657983677893287919132587754823076851573889.74685', 1);
        test_comparedTo_012('-1225393854304.583672953386', '3712805076014395323562.4542406246', -1);
        test_comparedTo_012('0.0000000000002805023524281798', '-1195739.55713460927706968721363067', 1);
        test_comparedTo_012('386896730804748668115534580.29201499', '737595739534741234.44386299', 1);
        test_comparedTo_012('-160941276095561769012497288743700757276588036', '194.232174807028239974132449968549146279604', -1);
        test_comparedTo_012('0.0000000000000009760', '-112424977227983.369213445871607530779963339', 1);
        test_comparedTo_012('-120493.3535480159461699138868088193226718499846079', '-963938726344338862591656029356573.2356831292145', 1);
        test_comparedTo_012('1.731842697869349182975403693663977472678249978539', '-0.0000000000018342058226450839410208095980857226', 1);
        test_comparedTo_012('0.000000000000000000186044372917454007190404393463337172211654339256226', '38603.328332936580263680889352090136846643070031691', -1);
        test_comparedTo_012('2.24833678840107152900324', '-0.000000000000535013632333188', 1);
        test_comparedTo_012('-0.000000000001014445297159531', '-182225871.4', 1);
        test_comparedTo_012('-110739', '39245367522721683497924493692756130948391370303714834', -1);
        test_comparedTo_012('0.000000000000000000011109996302235', '0.00000021747567330836261997878389805423396667433455', -1);
        test_comparedTo_012('913805.7272137617667300113969454560', '12015557861856523.82185', -1);
        test_comparedTo_012('4.44', '17327761911331833939511.3229350', -1);
        test_comparedTo_012('3343815205898708797845323710139050310101815211790183', '0.000002944097410246031171887416698431193651848888', 1);
        test_comparedTo_012('32760398270494573303330410.50750229445655494486793110334706', '-9510914125.45789497493920290055', 1);
        test_comparedTo_012('0.00000031352646', '2982438266661362962075700689156408.44636939397', -1);
        test_comparedTo_012('77053023622996.111620117040477945', '-594', 1);
        test_comparedTo_012('28.651584435', '0.0000000000000517018230', 1);
        test_comparedTo_012('69454425323857571.298955', '0.00000003183', 1);
        test_comparedTo_012('8.585707061691', '27579495297994019790817050261359', -1);
        test_comparedTo_012('0.0000245072088767920273', '597422085664.8946200175189947965015981804000953540032149', -1);
        test_comparedTo_012('6395952035600311.145296483306709937475', '-7839682836938441873082358214760503680131094656590381429', 1);
        test_comparedTo_012('-878403860673101771781740794629505317750999165.91704111', '23574346417573958371843475532943.5863825875041348813273', -1);
        test_comparedTo_012('0.0000767302828677966418632441811470540764577', '-1276636.42385918072718338162162974143519652320393232805716411', 1);
        test_comparedTo_012('-15930445184474597597265919925606183581356435.4578944', '-0.00000000000114252044623272018125497556095987129012517542089248', -1);
        test_comparedTo_012('-48665285374684448074343674590620067.7', '1', -1);
        test_comparedTo_012('105930.422', '11113072169.652252071060557105162', -1);
        test_comparedTo_012('26564763', '-3', 1);
        test_comparedTo_012('4811244033166.822319661770849918367233504118713435759512811', '4.7', 1);
        test_comparedTo_012('-56.8', '4443507757632459.195553180343008573591954189736210531834', -1);
        test_comparedTo_012('612.72379387256827500110', '-452.196955446440438357', 1);
        test_comparedTo_012('-494127587184494770597966464398', '0.000000000000000505582034979983270144354985077988823279257757358354', -1);
        test_comparedTo_012('151593171537726736029059210', '3280207153334176964', 1);
        test_comparedTo_012('-0.0000000727423791233275798', '-33.983207203823', 1);
        test_comparedTo_012('-0.00000000000000000014088202399161', '967411649025173.3', -1);
        test_comparedTo_012('2.4', '-0.000000000001348198764946041705529604570289570284', 1);
        test_comparedTo_012('-1458694234293.393', '-0.0000000277889669157893917', -1);
        test_comparedTo_012('-1', '0', -1);
        test_comparedTo_012('-295498271141109248639464345535.73829013835409617653972', '-239733948637940687.4210093379196529044279897', -1);
        test_comparedTo_012('-114.668973584958627612325023154590', '0.00000000000000000204', -1);
        test_comparedTo_012('11086296933075691303', '61846609604939708809351700530350279982', -1);
        test_comparedTo_012('-199290.9539286389610', '0', -1);
        test_comparedTo_012('-0.00008470578761402', '77227954881772040530.19249809987494428807714982', -1);
        test_comparedTo_012('1675393978448', '-218061932.345257837058901', 1);
        test_comparedTo_012('-148234164778648.90057404374761057399794220096395194121763477', '-1807153054383052.16291022958635252906429', 1);
        test_comparedTo_012('0.00000107324116068524713963632866732786846249794493141690777', '-8697413954500148992019717571067182408306067052176.48379', 1);
        test_comparedTo_012('-3504475807101437909894549201613284414285', '0.00000180507680656754700593791722943439535831913116826463442277', -1);
        test_comparedTo_012('137188855.912293557682373', '-84390113782876.78301756825303169680317158020741023212586877', 1);
        test_comparedTo_012('-8.04', '48917396714819601257978143.0', -1);
        test_comparedTo_012('19441.23908', '-3621875953293954379164.80898', 1);
        test_comparedTo_012('-488683915776821.54128571136', '-2764.655', -1);
        test_comparedTo_012('-497.39163093', '456272554.910083158313064', -1);
        test_comparedTo_012('3888553456.187038805', '1.79351971', 1);
        test_comparedTo_012('-0.09665505758418475963567867363097339048321797943170880174', '42.26560746275599', -1);
        test_comparedTo_012('18902797728391145440494082949463571569467603044', '-160840513303121014911814965287069764.329850142', 1);
        test_comparedTo_012('-0.00000000000363783296932', '-229510691003150718410894.798513190', 1);
        test_comparedTo_012('-0.019578513996', '-0.0000068012586581839285561', -1);
        test_comparedTo_012('-0.00000000000000003337257672564450192788237207780262977502390656214', '-576.230537914969490642', 1);
        test_comparedTo_012('0.0002071041857705517964418488527910814283948842252102023', '4965', -1);
        test_comparedTo_012('-762578569061554379901567768164.24708334695367', '-2902150555266343625933468.2', -1);
        test_comparedTo_012('366547461068.82113690', '473567955790856323671.7615303868255685632986068926885', -1);
        test_comparedTo_012('2212.60505074', '54.4399284220426917738', 1);
        test_comparedTo_012('24229481820388119475112679.2869744056638142529094915709331146', '-39663594276.8672343304', 1);
        test_comparedTo_012('204581808810007220059753337566285703.0558403249497', '0.14724245060761654341919', 1);
        test_comparedTo_012('186.26481926730311740748275435747257', '3169339033932711835137078410077027045.6405', -1);
        test_comparedTo_012('147438798802.4222641736117', '-30953.68649', 1);
        test_comparedTo_012('0.0000000000000000036665066712498278880448755082419497041867983779348', '49969977335002848872793397', -1);
        test_comparedTo_012('-15', '-1610335165763678418286838402407661955', 1);
        test_comparedTo_012('2689653843679875122027095562540366.2198041476017623', '1680374149507467199865152885259.7294203852546004613867', 1);
        test_comparedTo_012('-0.11', '-0.00000000000000000043896646420939540095966', -1);
        test_comparedTo_012('2080671699743.511238240714127', '-0.000036842318404340179848907', 1);
        test_comparedTo_012('568000304', '-90592884500253731464906623327632577358591186.946837858889', 1);
        test_comparedTo_012('-0.000000000000002107518141285', '-3224876873708851754101647.818256157564', 1);
        test_comparedTo_012('2265098771', '0.00303612511166914586857128974318819782', 1);
        test_comparedTo_012('-5664007822465.98050400197979616740857', '4318641.351415884425470426852575673963981647030782942', -1);
        test_comparedTo_012('-2548615100934958409898695557521334.971165846219072', '-554798.735556810907', -1);
        test_comparedTo_012('-0.000008820826897431443', '-1685288868236928715034057139645.0670918901230', 1);
        test_comparedTo_012('0.2773641914039966806939077833931526594995617517107827', '-155510002669979906258854608426737730.80732922', 1);
        test_comparedTo_012('0.00000028631297293946002594331990323448420', '12.530358985140', -1);
        test_comparedTo_012('65.74', '0.000000180226526307592', 1);
        test_comparedTo_012('35366830254177.323', '-195533735162357391160682221146179916675364691505329.522594', 1);
        test_comparedTo_012('623190599276699090316221455590041049805679995441489316.522', '6153742899048073987312064712008701512451.12942', 1);
        test_comparedTo_012('0.001389654081957090114281716350682554539119289983031175', '0.0000000000000000004172245036048453978505043356031', 1);
        test_comparedTo_012('-0.000000000000065125596165975329468700878377195017853327025922232', '5010.27', -1);
        test_comparedTo_012('99858764586308080.815938383', '6906.98277', 1);
        test_comparedTo_012('-0.0000002120213841110365850583078206489619527666932442761000523841', '1560226.624828', -1);
        test_comparedTo_012('-0.00000011209616970611', '437120468783339721.8270432960', -1);
        test_comparedTo_012('39633522.28696180408828', '404609951713', -1);
        test_comparedTo_012('0.00000439899975727851857364404628011452819', '-295058799.554060774457769229721869795967861', 1);
        test_comparedTo_012('-0.00000000000000042342244818730713908050671583102154', '549754666663906751820116493890514432554613796763091771', -1);
        test_comparedTo_012('271354103.271534143867908347243952035', '-3.4348029165', 1);
        test_comparedTo_012('-18391137696458176.709403414422273535748', '-135526005724.36', -1);
        test_comparedTo_012('-16789648705436253610328466585451657189', '87790015500203097.67217621', -1);
        test_comparedTo_012('-0.1934527980285924234435139814', '0.000000044283070912014290453388249787033315196663317475885890', -1);
        test_comparedTo_012('175727618.7', '-4712524302.9633361502507795469472010873256880899968244213838', 1);
        test_comparedTo_012('86148708.7', '0.000000000043067763982519792325233598208451198', 1);
        test_comparedTo_012('-1676718.814', '-126027512979.7359979901775996', 1);
        test_comparedTo_012('204654162545474.954541730442039127578542771572577634608702', '1278262396819307952614391540746000135708145121661', -1);
        test_comparedTo_012('20599411052765018472280152629960269.784440835643761573', '382871.68', 1);
        test_comparedTo_012('9.1', '-0.000009868296529724402614472149967657', 1);
        test_comparedTo_012('-51.7', '-0.00004138549340599259177969843213431710067044689658507', -1);
        test_comparedTo_012('-0.00000000065519676351299476540767970', '-159950069281804382298.104882147944419487737768', 1);
        test_comparedTo_012('132937997125408.196564521', '0.0000000000000416671095818013123525013575750', 1);
        test_comparedTo_012('-1313393782.747301', '135189314585073603701567044403904503', -1);
        test_comparedTo_012('0.26345218007386345905841', '-0.0000000000000000131698402541203188119609481297941368650', 1);
        test_comparedTo_012('24462716218.22576508876165308669350154', '-175901840085494768716509058673018943.44105360844073496986', 1);
        test_comparedTo_012('-639051.389850068275663978184079330600736417788030565545', '-233130008509087611163354733950079542005785536290.28', 1);
        test_comparedTo_012('-2.5', '0', -1);
        test_comparedTo_012('-48', '-1.30483838443', -1);
        test_comparedTo_012('-0.0000007957592304983915492296920988493287302223429001', '222281838853.55743543126434998666514248954378468481403010', -1);
        test_comparedTo_012('-256924767625.92102529834889997062393414595239208331582', '-138645955.7309701679', -1);
        test_comparedTo_012('5825.6936168480383901079880', '-15454778381.1635817748532891601', 1);
        test_comparedTo_012('322234158068890727047790331925494003913674775559', '0.0000000000000001440104086097707578083604', 1);
        test_comparedTo_012('-0.0000000000284163905693832757026', '735321.796040692391355698638806984647971670552494930079886', -1);
        test_comparedTo_012('13.51354661049663', '60174586.03966439546', -1);
        test_comparedTo_012('-0.0000000563225262474012816830760397217', '-19259915510222671.51018', 1);
        test_comparedTo_012('58260242951538386451799849576838755846723438641458498.45', '81583418293233481447477355060230.5984042555029388', 1);
        test_comparedTo_012('15676086441613294586793.0600578779086373855887', '553785093898805279609967970.6227004730416155843290795860965', -1);
        test_comparedTo_012('-529215908', '0.000000000000001261696290245850445593226', -1);
        test_comparedTo_012('0.2765770305056755810402655395163548457323921993', '2485048778003226295.0487979661044', -1);
        test_comparedTo_012('3.106357', '-196188865060.96789451729283131151802962', 1);
        test_comparedTo_012('-3812721623392532238628.52058836531583261604602809206126', '0.000000000129949612553432181149516674241', -1);
        test_comparedTo_012('-725747.78308445614294711222169380088709733492626141', '0', -1);
        test_comparedTo_012('0.00005978057030838911749503353205688236750513118711', '-2301374753039922.5', 1);
        test_comparedTo_012('-21135.6', '0.0000000000000677319833766662844296', -1);
        test_comparedTo_012('-18592472738146.165033667092366', '-0.245177658870876212432221320582908107465202878031116163978799', -1);
        test_comparedTo_012('2.0853471559342294701189635489971894524307297590789015254659', '1820710163171110437504131672398834715.796647407', -1);
        test_comparedTo_012('3017.7628349701943687591214', '-2123676032175089021.800850462329', 1);
        test_comparedTo_012('2245516696370652079582811421413778879168242699149', '-0.000026865223', 1);
        test_comparedTo_012('396591381033578245290535623.59522101830916124323912171677', '-399632909396.27251691705488670319', 1);
    });
    /**
    * @tc.number    : DECIMAL_TEST_018
    * @tc.name      : Decimal_comparedTo_Func_018
    * @tc.desc      : Test comparedTo
    * @tc.size      : MediumTest
    * @tc.type      : Function
    * @tc.level     : Level 0
    */
    it("Decimal_comparedTo_Func_018", TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL1, () => {
        let N = NaN, I = Infinity;
        Decimal.set ({
            precision: 20,
            rounding: 4,
            toExpNeg: -9e15,
            toExpPos: 9e15,
            minE: -9e15,
            maxE: 9e15
        });
        test_comparedTo_012('25071395481877740931640606160951694567581843991.91250540', '0.000000129577260075209456379795979548520957596680350786352443111', 1);
        test_comparedTo_012('-10071840824462229810456841986062182478', '-0.000000000000036', -1);
        test_comparedTo_012('-378.382656390921442297', '2995.111135910', -1);
        test_comparedTo_012('-0.0000000000000011003920232607040692705', '0.00000000000000002355157685511431284976273511723771203290674587231328782173', -1);
        test_comparedTo_012('894.8158182999506884919347710660910', '-0.00000000000000000096323615121853367670285903274497581', 1);
        test_comparedTo_012('2319037.233322076813874258', '-32416.903557641', 1);
        test_comparedTo_012('23396460119.155847859729080972376305599746464844501598782869', '-23349855891702694333726330.5788991', 1);
        test_comparedTo_012('90907619612776583630058641475331.6', '834081.31401857878701092663973283388246447251015444', 1);
        test_comparedTo_012('-0.0000000000000000081501364451042879423837094013790187022253', '-0.00000001399490096609828204621353982853023593', 1);
        test_comparedTo_012('-420605.932784654921007625945921605929', '-0.001003986559391891122940439549512675', -1);
        test_comparedTo_012('29941819100256.1010903984648918366033290553065670117884535', '-1399273749558314.35414647141708136502314', 1);
        test_comparedTo_012('9.87428322502844153862497406397966790245714773688', '282378323960341447353633555973.60816609111820', -1);
        test_comparedTo_012('0.000000011571', '56.055239680', -1);
        test_comparedTo_012('57847056020509197.81010326363252948483107773', '-1.4444', 1);
        test_comparedTo_012('-51735520880178.3819992386025068250767281052153771374742233700', '-0.000000000000000001995850558903648471134005565207297729809954251013177868', -1);
        test_comparedTo_012('-252689605402394270719155.41734356951305987480624879', '-14.7', -1);
        test_comparedTo_012('-0.00000000001151229725364301025243181548204622943024492441630358', '26395005645801030069538169698242312.433651971508113804', -1);
        test_comparedTo_012('-0.00000000000091483130556462719', '2', -1);
        test_comparedTo_012('208.9827699741542594700570327748394160582183088044349', '-0.00000000000052759011609237039384483268124939035873403', 1);
        test_comparedTo_012('12412.9657547118', '4', 1);
        test_comparedTo_012('-2', '91580728825224739577263849484410121433204621.500780779690', -1);
        test_comparedTo_012('459526644.772925035397599290137226147632521530511862018', '-0.000000005846169451429981275734796656', 1);
        test_comparedTo_012('671926163021026323133951152902929830282.91041796493', '548498210972677.51442460018844632588617668956139310271612', 1);
        test_comparedTo_012('2422.5875291768881507425406922241585652688246', '19145241007530705409.9615104357443736565548963', -1);
        test_comparedTo_012('-0.00000078875216605898054012159', '-3150.0', 1);
        test_comparedTo_012('6244534680058004259589682789034535443037697', '-25351939981079.604012', 1);
        test_comparedTo_012('-180.203958489450', '39025034688578315815199.297787915576434930764', -1);
        test_comparedTo_012('-1361080637840651575481575485233.15286726682268248409468726', '-0.0000000000000039297884367828635174097881955958806085', -1);
        test_comparedTo_012('180278536333055.7355327506162313565598247413', '0.000000000005454620478830996984164588529474180472398020083723230733100', 1);
        test_comparedTo_012('-12521213.94690', '213.36136', -1);
        test_comparedTo_012('-0.0000000000000076966493627693824010017610386791', '-2.378265167488246191074961795033182605013037407884326', 1);
        test_comparedTo_012('-253.6948', '126006206', -1);
        test_comparedTo_012('-5.5239e+3', '-2.2807805e+1', -1);
        test_comparedTo_012('8.554e+2', '0e+0', 1);
        test_comparedTo_012('-2.1176736939e+5', '2.13526332e+2', -1);
        test_comparedTo_012('2.528e-2', '-1.5e-1', 1);
        test_comparedTo_012('-2.1536554e-2', '-3.93e-6', -1);
        test_comparedTo_012('4.853430802e-5', '-4.9e-11', 1);
        test_comparedTo_012('-6.9e-3', '1.9596e+1', -1);
        test_comparedTo_012('-9.93182949e+1', '-7.9983535342e-20', -1);
        test_comparedTo_012('1.629795e+5', '1.58117535423e+5', 1);
        test_comparedTo_012('-2.934333546e-15', '-2.093237829e-14', 1);
        test_comparedTo_012('2.2916931e+1', '7.88e+2', -1);
        test_comparedTo_012('7.656115e+0', '5.5885422e-10', 1);
        test_comparedTo_012('0e+0', '-3.3e+0', 1);
        test_comparedTo_012('-2.4327703616e+3', '1.1e+1', -1);
        test_comparedTo_012('1.61903621e+6', '-2.3444006423e+2', 1);
        test_comparedTo_012('4.5332e+4', '3.281123867e+1', 1);
        test_comparedTo_012('-7.9e-4', '0e+0', -1);
        test_comparedTo_012('-2.6e-19', '-5.4489933e+6', 1);
        test_comparedTo_012('5.877152e+1', '1.5125e-2', 1);
        test_comparedTo_012('6.293000381e-1', '7.2e+1', -1);
        test_comparedTo_012('1.072062222225e+10', '7.521052067e+0', 1);
        test_comparedTo_012('-2.9744557e+7', '0e+0', -1);
        test_comparedTo_012('-1.0235e-13', '-3.671886e+0', 1);
        test_comparedTo_012('-2.06364e-4', '6.2113337e-3', -1);
        test_comparedTo_012('-7.02e+0', '-1.1348644434e+3', 1);
        test_comparedTo_012('-3.57688146e+3', '3.81547e+2', -1);
        test_comparedTo_012('2.9527098536e+3', '1.32080504447e-4', 1);
        test_comparedTo_012('-2.6286e+1', '3.8e+0', -1);
        test_comparedTo_012('-3.45054603e+2', '-9.88229e-15', -1);
        test_comparedTo_012('-2.469e+0', '-3e+0', 1);
        test_comparedTo_012('-8.369800004e-4', '1.4e-17', -1);
        test_comparedTo_012('-1e+0', '4e+0', -1);
        test_comparedTo_012('-3.0829216081e+2', '-3.08e+1', -1);
        test_comparedTo_012('-1e+0', '-5.756e+1', 1);
        test_comparedTo_012('-8.511e+0', '3.126324e+6', -1);
        test_comparedTo_012('2.4474011949e+4', '1.12649e+2', 1);
        test_comparedTo_012('-2.57868e+4', '-1.03178e+1', -1);
        test_comparedTo_012('1e+0', '9.5177e+1', -1);
        test_comparedTo_012('-9.8069663157e-6', '1.4532689e+5', -1);
        test_comparedTo_012('3.721e+1', '-2e+0', 1);
        test_comparedTo_012('-9.7657879751e+10', '-5.67e+2', -1);
        test_comparedTo_012('-4.8657905e+6', '-2.17381281e+1', -1);
        test_comparedTo_012('-4.20131e+0', '-1.3179640655e-8', -1);
        test_comparedTo_012('1.6e+0', '0e+0', 1);
        test_comparedTo_012('5.16068325659e-4', '1.269e+1', -1);
        test_comparedTo_012('9.91969e+5', '0e+0', 1);
        test_comparedTo_012('2.32e+0', '3.69e+1', -1);
        test_comparedTo_012('5.685149e+2', '3.694e-13', 1);
        test_comparedTo_012('-9.0148e-5', '0e+0', -1);
        test_comparedTo_012('-3e+0', '-8.7855e-7', -1);
        test_comparedTo_012('1.3669489e+3', '1.33866e-4', 1);
        test_comparedTo_012('-2.6e+1', '1.36976797894e+3', -1);
        test_comparedTo_012('4.6e+0', '0e+0', 1);
        test_comparedTo_012('-7.2e-8', '1.971355e+2', -1);
        test_comparedTo_012('1.19755e-5', '7e+0', -1);
        test_comparedTo_012('-3.46e+0', '-3.7715361e-11', -1);
        test_comparedTo_012('3.25762245146e+6', '-4.02e+0', 1);
        test_comparedTo_012('1.3174225699e+7', '9.6222695655e+10', -1);
        test_comparedTo_012('6.6e-13', '-5.23193346205e+4', 1);
        test_comparedTo_012('-3.873e+3', '-1.23681175e+3', -1);
        test_comparedTo_012('-1.19869e+5', '-8e+2', -1);
        test_comparedTo_012('2.027381656e+3', '1.47629351439e+11', -1);
        test_comparedTo_012('-1.467418e-17', '9.0073930856e+5', -1);
        test_comparedTo_012('7.1e+0', '6.116301582e+2', -1);
        test_comparedTo_012('-1.7883916e+5', '3.533e-17', -1);
        test_comparedTo_012('8.8e-11', '-5.9707897e-1', 1);
        test_comparedTo_012('-5.337e+3', '4.6614e-13', -1);
        test_comparedTo_012('1e+0', '-3.1e+0', 1);
        test_comparedTo_012('-3.05920196e-6', '-4e+0', 1);
        test_comparedTo_012('-1.692375e-10', '2.29981330096e+6', -1);
        test_comparedTo_012('5.19341813e-1', '6.1e+0', -1);
        test_comparedTo_012('5.796e+3', '-9.386773281e-8', 1);
        test_comparedTo_012('9.117497e+0', '0e+0', 1);
        test_comparedTo_012('6.962934e-8', '1.413982e+2', -1);
        test_comparedTo_012('2e+0', '1.4e+1', -1);
        test_comparedTo_012('-2.04e+0', '-1.30300025e+9', 1);
        test_comparedTo_012('1.57647e+1', '3.0862783894e+0', 1);
        test_comparedTo_012('-4e+0', '7.1e+1', -1);
        test_comparedTo_012('1.21e-6', '-2.109584154e+10', 1);
        test_comparedTo_012('6.55669245e+3', '-8.15e-8', 1);
        test_comparedTo_012('-8.3307e+2', '-9.1476874e+7', 1);
        test_comparedTo_012('0e+0', '-3.64676e+5', 1);
        test_comparedTo_012('-1.2803e+2', '7.2908749e+3', -1);
        test_comparedTo_012('3.2263e+3', '-1.43355e+1', 1);
        test_comparedTo_012('4.92751482244e-18', '1.3747248256e+3', -1);
        test_comparedTo_012('8.20054755e-10', '6.2348e+2', -1);
        test_comparedTo_012('-1.06e+1', '-7.2569084631e+4', 1);
        test_comparedTo_012('1.86e+2', '3.76613527e-5', 1);
        test_comparedTo_012('3.33652e+3', '5.1e+1', 1);
        test_comparedTo_012('3.665307673e+8', '3.31344e+5', 1);
        test_comparedTo_012('-7.341261161e+2', '-2.98910916e+7', 1);
        test_comparedTo_012('6.24638573245e+5', '4.47893448327e+2', 1);
        test_comparedTo_012('1.23e-8', '-5e+0', 1);
        test_comparedTo_012('4.469176e+5', '-2.09863e+3', 1);
        test_comparedTo_012('-2.72624816161e+3', '0e+0', -1);
        test_comparedTo_012('-6.78251e-20', '-6.837e-1', 1);
        test_comparedTo_012('6.2456922e-6', '0e+0', 1);
        test_comparedTo_012('6.2e-4', '4.40516e+4', -1);
        test_comparedTo_012('-7.624e+2', '-3e+0', -1);
        test_comparedTo_012('-5.22549619458e+0', '-4.0866914233e+9', 1);
        test_comparedTo_012('-9.51999532e+7', '-2e+0', -1);
        test_comparedTo_012('-1.07321e+2', '-1.3e+0', -1);
        test_comparedTo_012('-5.405555671e-6', '8.0306e+1', -1);
        test_comparedTo_012('2.2e+0', '6.49e-17', 1);
        test_comparedTo_012('3e+0', '2.2e+0', 1);
        test_comparedTo_012('-1.12e+2', '3.4165375e+1', -1);
        test_comparedTo_012('-2.36978379e+4', '-4.2e+0', -1);
        test_comparedTo_012('-8e+0', '-6.42e+0', -1);
        test_comparedTo_012('-3.2e+1', '6.17231707e-19', -1);
        test_comparedTo_012('-4.8454741051e+1', '4.3339e-10', -1);
        test_comparedTo_012('4.29e+0', '3.28376306e+4', -1);
        test_comparedTo_012('-6.33089e+1', '-5.7065758354e-19', -1);
        test_comparedTo_012('0e+0', '-3.31e-7', 1);
        test_comparedTo_012('-2.18973e+2', '1.88333703659e+4', -1);
        test_comparedTo_012('-1.67e+2', '3e+0', -1);
        test_comparedTo_012('0e+0', '9.7605e-12', -1);
        test_comparedTo_012('1.294433816e+0', '-1.1e+1', 1);
        test_comparedTo_012('-1.4246177e+3', '-1.043532436e+8', 1);
        test_comparedTo_012('-1.0531e+1', '2.2268899e-6', -1);
        test_comparedTo_012('-1.5611e+3', '1.59757e+0', -1);
        test_comparedTo_012('3.3638160556e+11', '6.29136402e+6', 1);
        test_comparedTo_012('-7.7326244542e+2', '-9.6e+0', -1);
        test_comparedTo_012('-3.593606997e+8', '-4e+0', -1);
        test_comparedTo_012('9.4433e+2', '-1e+0', 1);
        test_comparedTo_012('-1.0131e-9', '-4.551632556e+9', 1);
        test_comparedTo_012('1.61735e+5', '-6.550194286e+9', 1);
        test_comparedTo_012('3e+0', '-8.14e+3', 1);
        test_comparedTo_012('-3.492e+0', '8.85393125e+2', -1);
        test_comparedTo_012('-9.3678169131e-19', '-1.98802069e+4', 1);
        test_comparedTo_012('-4.39338019e+7', '1.07850051e-15', -1);
        test_comparedTo_012('-1.1677e+0', '2.22825374e+8', -1);
        test_comparedTo_012('-3.476e+0', '6e+0', -1);
        test_comparedTo_012('1.453e+0', '-6.34599e-7', 1);
        test_comparedTo_012('1.789e-9', '0e+0', 1);
        test_comparedTo_012('-2.92933e+4', '5.802095e+4', -1);
        test_comparedTo_012('9e+0', '2.63702e-7', 1);
        test_comparedTo_012('-6.0696e+4', '9.46475e+5', -1);
        test_comparedTo_012('-1.508052e+6', '2.45600810354e+0', -1);
        test_comparedTo_012('6.83354e+1', '1.93e-12', 1);
        test_comparedTo_012('-1.6e+0', '-2e+0', 1);
        test_comparedTo_012('-7.4275644e+5', '-6.1587e-14', -1);
        test_comparedTo_012('0e+0', '3.540869872e-9', -1);
        test_comparedTo_012('-7.86e+0', '8.041734e+6', -1);
        test_comparedTo_012('-8e+0', '1.569e+1', -1);
        test_comparedTo_012('2.0839e-18', '1.2848955034e-14', -1);
        test_comparedTo_012('6.84909e+3', '2.19e+1', 1);
        test_comparedTo_012('5.556062e+3', '1.037e-12', 1);
        test_comparedTo_012('-1.011918e-9', '3.52315476249e+0', -1);
        test_comparedTo_012('-1.2e+2', '-5.8677085e+1', -1);
        test_comparedTo_012('1.5e+0', '-8.2951e-8', 1);
        test_comparedTo_012('5.254e+0', '-2.08338e+3', 1);
        test_comparedTo_012('8.272e+0', '0e+0', 1);
        test_comparedTo_012('-2.3496e+3', '-1.74217696625e-1', -1);
        test_comparedTo_012('2.33e+0', '-6e+0', 1);
        test_comparedTo_012('8.138135061e-6', '1.52e+1', -1);
        test_comparedTo_012('-2.691357e+5', '1e+0', -1);
        test_comparedTo_012('4.277011e-13', '2.1978e+4', -1);
        test_comparedTo_012('-4.164225e+0', '3.94601989492e-6', -1);
        test_comparedTo_012('-1.32e-18', '-3.94e-3', 1);
        test_comparedTo_012('-2.443211e-11', '2.02e-8', -1);
        test_comparedTo_012('-1.2e+0', '-3.2e+1', 1);
        test_comparedTo_012('4.7652754554e+7', '-2.1e-11', 1);
        test_comparedTo_012('2.02136500541e+9', '-2.77170882e+2', 1);
        test_comparedTo_012('-1.65e-2', '-2.4039e+3', 1);
        test_comparedTo_012('1.8172e+1', '-6.3e-5', 1);
        test_comparedTo_012('1.8703827209e-10', '-1.46184e+4', 1);
        test_comparedTo_012('-1.11606903e+6', '-2.8e-6', -1);
        test_comparedTo_012('-7.84180535e+0', '-6.9715e+2', 1);
        test_comparedTo_012('-1.6095371e-5', '-4.007e+2', 1);
        test_comparedTo_012('2e+0', '2.7730114619e+0', -1);
        test_comparedTo_012('1.3694403e+7', '-3.14014263471e-3', 1);
        test_comparedTo_012('3e+0', '2.4553237278e+3', -1);
        test_comparedTo_012('-3e+0', '-2.78756184842e+11', 1);
        test_comparedTo_012('-1.2522e+2', '-7.7e+1', -1);
        test_comparedTo_012('4.491e-18', '-1.196e+3', 1);
        test_comparedTo_012('-3e+0', '-2.78811358e+4', 1);
        test_comparedTo_012('-3.5481789e+3', '1.6004994927e+5', -1);
        test_comparedTo_012('1.9963146e+6', '-6.923e-1', 1);
        test_comparedTo_012('-1.37573e-12', '2.072e+2', -1);
        test_comparedTo_012('6.570067306e-1', '3.73554490286e-16', 1);
        test_comparedTo_012('3.0659071736e-15', '6.946525e+1', -1);
        test_comparedTo_012('-5.346e+0', '1e+0', -1);
        test_comparedTo_012('8.55e-9', '7.9e-11', 1);
        test_comparedTo_012('-7.5096624e+2', '3.40622424e+5', -1);
        test_comparedTo_012('2.219404561e-14', '5.47749e+0', -1);
        test_comparedTo_012('3.000476e+2', '-1.754092582e+1', 1);
        test_comparedTo_012('0e+0', '-1.69774e+3', 1);
        test_comparedTo_012('2.993e+0', '-1e+0', 1);
        test_comparedTo_012('2.7528038851e+1', '-3.945799123e+4', 1);
        test_comparedTo_012('-6.6266e+2', '-4.5e-19', -1);
        test_comparedTo_012('9.204609e-14', '1.25862e+5', -1);
        test_comparedTo_012('-7.0237408e+5', '-4.56413483775e+3', -1);
        test_comparedTo_012('4.8481576e+2', '-6.53713e+3', 1);
        test_comparedTo_012('1e+0', '1.103e+2', -1);
        test_comparedTo_012('6.57977e+2', '-3.852e-16', 1);
        test_comparedTo_012('3.861e+2', '-6.2072117462e+5', 1);
        test_comparedTo_012('-6e+0', '1.3494901111e+6', -1);
        test_comparedTo_012('-5.870696e-1', '-3.801808e+1', 1);
        test_comparedTo_012('-3.83761721e+8', '8.081107501e-5', -1);
        test_comparedTo_012('6.50057174e+5', '2.0206519e-12', 1);
        test_comparedTo_012('5.5207e+4', '-2.48e+2', 1);
        test_comparedTo_012('0e+0', '1.05116516384e+11', -1);
        test_comparedTo_012('-1.75279284e+4', '3.899762267e-1', -1);
        test_comparedTo_012('-1.6197e+0', '4.3274e+4', -1);
        test_comparedTo_012('1.256294e+6', '-5.58921e-15', 1);
        test_comparedTo_012('3e+0', '2.0586937916e-17', 1);
        test_comparedTo_012('-3.28553e-13', '-1.18e+1', 1);
        test_comparedTo_012('-2.81418e+5', '1.72529458e-12', -1);
        test_comparedTo_012('7.8666421e+3', '5.9153e+0', 1);
        test_comparedTo_012('4.84347589e-8', '2e+0', -1);
        test_comparedTo_012('3e+0', '-2.6655512e+2', 1);
        test_comparedTo_012('6.2696e-10', '-2.054382974e+1', 1);
        test_comparedTo_012('6.1413274e-2', '0e+0', 1);
        test_comparedTo_012('-2.9095e-18', '-6.9975956783e+8', 1);
        test_comparedTo_012('4.01e-20', '-7.5588e-6', 1);
        test_comparedTo_012('9.490622e-18', '-2.77e+0', 1);
        test_comparedTo_012('-1.0267e-14', '-8.790091e-9', 1);
        test_comparedTo_012('-4.077591e-14', '-3.0259558246e+0', 1);
        test_comparedTo_012('-2.8261e+2', '-4.99857e+0', -1);
        test_comparedTo_012('9.899113e+1', '1e+0', 1);
        test_comparedTo_012('5.5e+0', '-7.0265e+0', 1);
        test_comparedTo_012('5.286e-7', '-4.3972682e+2', 1);
        test_comparedTo_012('1.5520187e+6', '1.150018e+2', 1);
        test_comparedTo_012('-2.04e-10', '-4.0474e+2', 1);
        test_comparedTo_012('-2.32245517e+7', '-4.96976e+4', -1);
        test_comparedTo_012('-3.6487688611e-10', '-1.1763503e+2', 1);
        test_comparedTo_012('8.3414625e+0', '0e+0', 1);
        test_comparedTo_012('9.905071e+6', '-5.9541e-4', 1);
        test_comparedTo_012('1.984307e+4', '-2.4291e-7', 1);
        test_comparedTo_012('-1e+0', '-1e+0', 0);
        test_comparedTo_012('2.060415969e+9', '-2.03455e+2', 1);
        test_comparedTo_012('3.1982e-19', '-1.993945e+3', 1);
        test_comparedTo_012('3.093739e+1', '-1.99128676855e+0', 1);
        test_comparedTo_012('1.881e+1', '-1.09028754e+5', 1);
        test_comparedTo_012('0e+0', '-4.7092316e-14', 1);
        test_comparedTo_012('-9.455374693e-10', '-9.45812534991e+6', 1);
        test_comparedTo_012('-1.67881e+4', '-2.1683630866e+3', -1);
        test_comparedTo_012('6.3514013642e-17', '-4.5e+0', 1);
        test_comparedTo_012('1.20179765e-20', '4.9098e+3', -1);
        test_comparedTo_012('0e+0', '-7.476983768e+1', 1);
        test_comparedTo_012('-8.5797e+2', '2.1e+0', -1);
        test_comparedTo_012('-2.75e+1', '-1.749e-18', -1);
        test_comparedTo_012('-1e+0', '8.4e+1', -1);
        test_comparedTo_012('7.110682e+4', '8.5646556e+2', 1);
        test_comparedTo_012('-3.1875423048e+6', '7.216e+1', -1);
        test_comparedTo_012('-1.41969e+0', '0e+0', -1);
        test_comparedTo_012('-3.707432e+6', '1.5048071e+2', -1);
        test_comparedTo_012('-2.65447780189e+11', '2e+0', -1);
        test_comparedTo_012('3.808865e+6', '-7.22140745e-10', 1);
        test_comparedTo_012('2.972544e+3', '0e+0', 1);
        test_comparedTo_012('1.142002886e-2', '-3.063e+0', 1);
        test_comparedTo_012('-3.292e-15', '-2.2e-1', 1);
        test_comparedTo_012('-9.29480350675e-6', '9.4830355594e+4', -1);
        test_comparedTo_012('-2.49267401e-19', '3.3296905e+4', -1);
    });
    /**
    * @tc.number    : DECIMAL_TEST_019
    * @tc.name      : Decimal_comparedTo_Func_019
    * @tc.desc      : Test comparedTo
    * @tc.size      : MediumTest
    * @tc.type      : Function
    * @tc.level     : Level 0
    */
    it("Decimal_comparedTo_Func_019", TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL1, () => {
        let N = NaN, I = Infinity;
        Decimal.set ({
            precision: 20,
            rounding: 4,
            toExpNeg: -9e15,
            toExpPos: 9e15,
            minE: -9e15,
            maxE: 9e15
        });
        try {
            test_comparedTo_012('e', 'e', -1);
            expect(true).assertEqual(false);
        } catch (err) {
            expect(err.name).assertEqual(`BusinessError`);
            expect(err.code).assertEqual(401);
            expect(err.message).assertEqual(`The type of "test(str)" must be Hex/Binary/Octal. Received value is: e`);
        }
    });
    /**
     * @tc.number    : DECIMAL_TEST_020
     * @tc.name      : Decimal_cos_Func_020
     * @tc.desc      : Test cos
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    it("Decimal_cos_Func_020", TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL1, () => {
        Decimal.set ({
            precision: 40,
            rounding: 4,
            toExpNeg: -9e15,
            toExpPos: 9e15,
            minE: -9e15,
            maxE: 9e15
        });
        test_cos_013('NaN', 40, 4, 'NaN');
        test_cos_013('0', 20, 4, '1');
        test_cos_013('-0', 20, 4, '1');
        test_cos_013('Infinity', 40, 4, 'NaN');
        test_cos_013('-Infinity', 40, 4, 'NaN');
        test_cos_013('0.00006', 10, 2, '0.9999999983');
        test_cos_013('0.000000065', 18, 4, '0.999999999999997888');
        test_cos_013('14044.44444444444', 10, 4, '0.04549771706');
        test_cos_013('-14044.44444444444', 10, 4, '0.04549771706');
        test_cos_013('5', 8, 5, '0.28366219');
        test_cos_013('6723', 3, 3, '0.999');
        test_cos_013('2.04964', 8, 2, '-0.46075321');
        test_cos_013('476', 6, 1, '0.0486937');
        test_cos_013('5298612.00024', 2, 3, '-0.26');
        test_cos_013('12.5703596425462281326763791506392117455', 8, 4, '0.99999204');
        test_cos_013('2797', 8, 1, '0.55491269');
        test_cos_013('0.3834777777', 3, 4, '0.927');
        test_cos_013('16355.3334', 9, 4, '0.979658167');
        test_cos_013('0.997737586545708065463833973312637902054356957830033', 5, 5, '0.5422');
        test_cos_013('7803700', 4, 2, '-0.9032');
        test_cos_013('841822094288189413002174891207354317', 5, 2, '-0.86017');
        test_cos_013('67942', 8, 3, '-0.33958641');
        test_cos_013('899999929799999999999919999999999999999999999999999999999999999999999999.99999', 7, 5, '-0.8773558');
        test_cos_013('0.00058849862302952064864312588263928354414752285369272291803582192021298679', 10, 6, '0.9999998268');
        test_cos_013('20000000923980793370370313003363533778888888888.7777777777777777', 9, 4, '-0.801329944');
        test_cos_013('49.73807738608', 3, 1, '0.864');
        test_cos_013('88000', 5, 3, '-0.66135');
        test_cos_013('75465048517642702658117738264729233565816440737178306250850477902340698', 7, 2, '0.4233356');
        test_cos_013('0.704', 10, 2, '0.7622592047');
        test_cos_013('0.94828132184399998008581', 6, 5, '0.58308');
        test_cos_013('0.8', 8, 3, '0.6967067');
        test_cos_013('0.002', 6, 2, '0.999999');
        test_cos_013('61688.77777079779777777777777797777777777777777', 1, 4, '0.9');
        test_cos_013('8111', 7, 2, '0.8296971');
        test_cos_013('22.1513', 10, 6, '-0.9872031473');
        test_cos_013('800000000', 8, 2, '-0.98618707');
        test_cos_013('7332769805669601096865534', 4, 0, '0.8803');
        test_cos_013('2116627523999999999999999999', 2, 5, '0.58');
        test_cos_013('16967658790', 8, 4, '0.70645039');
        test_cos_013('2539668340778777961946252621835163455556224034680348035809827426444170650792306', 8, 2, '-0.49939729');
        test_cos_013('36', 7, 1, '-0.1279636');
        test_cos_013('61999992993999.999999999999999999949999999999999994999929999999999992999999999999999999999', 2, 6, '0.99');
        test_cos_013('0.218944155186302719769455371933055277727070161042429', 10, 4, '0.9761273219');
        test_cos_013('20', 2, 3, '0.4');
        test_cos_013('173215504685358227465651988', 10, 4, '-0.671213895');
        test_cos_013('5769000000000.2222222222222222', 10, 3, '0.4282801932');
        test_cos_013('0.5', 3, 1, '0.877');
        test_cos_013('5000000000053', 5, 6, '0.85063');
        test_cos_013('281084', 5, 6, '0.83761');
        test_cos_013('80.6', 9, 2, '0.470085225');
        test_cos_013('447162', 7, 4, '0.9642869');
        test_cos_013('6856.6636666666626606066666', 6, 6, '-0.137265');
        test_cos_013('7.37514', 7, 4, '0.4607514');
        test_cos_013('1.29', 3, 4, '0.277');
        test_cos_013('9', 10, 5, '-0.9111302619');
        test_cos_013('5067', 4, 0, '-0.9254');
        test_cos_013('482222222222.62217863079410578', 3, 1, '-0.997');
        test_cos_013('4.2202926299999999999959999999999999999999999999999999990999999999999999999999', 10, 6, '-0.4724745315');
        test_cos_013('24714170816959', 8, 1, '-0.99806747');
        test_cos_013('31365220956895733422', 5, 3, '0.99149');
        test_cos_013('377469441384376095492196870000863.83493122', 1, 0, '0.8');
        test_cos_013('0.1175', 1, 1, '0.9');
        test_cos_013('223953406565183766798339942076619761', 5, 4, '0.77106');
        test_cos_013('9.4', 7, 0, '-0.9996931');
        test_cos_013('67777777777777733221519976680533200000000000', 7, 4, '0.883886');
        test_cos_013('3', 7, 0, '-0.9899925');
        test_cos_013('99127.77777', 8, 3, '-0.44933878');
        test_cos_013('95555555550.5555555515555555555555555555550055555555555560555555559', 3, 0, '0.0823');
        test_cos_013('1.3830713', 3, 5, '0.187');
        test_cos_013('59', 9, 5, '-0.771080223');
        test_cos_013('1.1', 7, 1, '0.4535961');
        test_cos_013('1090000000000000000000000000000000000050000000.00004', 4, 1, '0.9972');
        test_cos_013('8', 1, 6, '-0.1');
        test_cos_013('43019456219304869332859776', 8, 1, '-0.99906433');
        test_cos_013('0.0000003104573823727508545651739730202238202717472186710001424', 7, 4, '1');
        test_cos_013('81888888888.5555555555555555511111111111111111114304', 8, 6, '0.86581506');
        test_cos_013('848765718488021014558633685913717744363956181398886593', 5, 0, '-0.97123');
        test_cos_013('0.4338', 69, 3, '0.907375081713258312704647471639381401468307894324094984616218937905432');
        test_cos_013('6647167168310148646127', 41, 1, '-0.67876552621688089570465682794229097436017');
        test_cos_013('14', 44, 5, '0.13673721820783359424892887667173824055164518');
        test_cos_013('0.815', 74, 3, '0.68586839345673735262969403373783813324713582642679411838288343756307680681');
        test_cos_013('52666376666220.66', 8, 2, '-0.46217165');
        test_cos_013('0.1', 58, 6, '0.9950041652780257660955619878038702948385762254150840359594');
        test_cos_013('5.481638560270924097', 46, 5, '0.6955963080641265200604938991229596548878269881');
        test_cos_013('616019185645542611168895104511361.514', 73, 0, '-0.9897418432019178091874564214082330932214823767149588163455308944210649199');
        test_cos_013('58872.6729', 27, 5, '0.71551991401684231627099417');
        test_cos_013('0.00000000986995340365791470449236832278868084019660524206930178008', 33, 1, '0.999999999999999951292009904810772');
        test_cos_013('200000000000000000000', 24, 1, '0.167301557725715824849981');
        test_cos_013('8712357290413741268816184846819797318515482698552148280140735653', 57, 0, '-0.279047254515165435013067136950333012052507338721363544685');
        test_cos_013('0.0177165009539797142337288907', 37, 1, '0.9998430669018118198896427823538202954');
        test_cos_013('255555555555555775027123062979747796598651156132669853568621902', 14, 2, '-0.99883756464211');
        test_cos_013('3741565840746605.71876151239588', 15, 0, '-0.930123581114026');
        test_cos_013('3050000000000000000000200000000000000000000.0000000000000000000000008', 41, 3, '-0.33127228153577434134804953378906485886176');
        test_cos_013('0.33482', 27, 4, '0.944469472783453774254728912');
        test_cos_013('0.1979574070039662', 30, 0, '0.980470333633282159348863278164');
        test_cos_013('960492.3601219999999', 74, 6, '0.78272168046024997208016985369610426247753755795663609587331768113997535495');
        test_cos_013('0.1145342', 57, 0, '0.993448125551484394628225244895937689399175688856818869855');
        test_cos_013('99999999999999999999999.99', 70, 0, '-0.7059760628345569635155393670172360201795320597371430862306924466086157');
        test_cos_013('0.10859933721171128209598967066', 80, 4, '0.99410888528803407646108267824473898405842663808987770888683180574685964084716924');
        test_cos_013('2813920.875088303362819', 33, 2, '-0.866254989781355498995879756871368');
        test_cos_013('35999999999999999999999999999999999999999.999999999999999999999999919', 38, 3, '-0.9562598584240982386154988349219959087');
    });
    /**
     * @tc.number    : DECIMAL_TEST_021
     * @tc.name      : Decimal_cos_Func_021
     * @tc.desc      : Test cos
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    it("Decimal_cos_Func_021", TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL1, () => {
        Decimal.set ({
            precision: 40,
            rounding: 4,
            toExpNeg: -9e15,
            toExpPos: 9e15,
            minE: -9e15,
            maxE: 9e15
        });
        try {
            test_cos_013('e', 40, 4, 'NaN');
            expect(true).assertEqual(false);
        } catch (err) {
            expect(err.name).assertEqual(`BusinessError`);
            expect(err.code).assertEqual(401);
            expect(err.message).assertEqual(`The type of "test(str)" must be Hex/Binary/Octal. Received value is: e`);
        }
        });
    /**
     * @tc.number    : DECIMAL_TEST_022
     * @tc.name      : Decimal_cosh_Func_022
     * @tc.desc      : Test cosh
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    it("Decimal_cosh_Func_022", TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL1, () => {
        Decimal.set ({
            precision: 40,
            rounding: 4,
            toExpNeg: -9e15,
            toExpPos: 9e15,
            minE: -9e15,
            maxE: 9e15
        });
        test_cosh_014('NaN', 40, 4, 'NaN');
        test_cosh_014('0', 20, 4, '1');
        test_cosh_014('-0', 20, 4, '1');
        test_cosh_014('Infinity', 40, 4, 'Infinity');
        test_cosh_014('-Infinity', 40, 4, 'Infinity');
        test_cosh_014('0.7356369431260767888795717715533948998814', 4, 2, '1.284');
        test_cosh_014('0.32350325607614', 8, 2, '1.0527852');
        test_cosh_014('0.39', 10, 3, '1.077018834');
        test_cosh_014('-0.4085', 1, 3, '1');
        test_cosh_014('-0.8353225329554414512103907831003554564', 10, 1, '1.369646055');
        test_cosh_014('0.822765764301886756212368544717371789849053470184', 1, 2, '2');
        test_cosh_014('-0.608417', 2, 3, '1.1');
        test_cosh_014('-0.3135167132332845', 4, 1, '1.049');
        test_cosh_014('-0.3872949', 5, 6, '1.0759');
        test_cosh_014('-0.69', 5, 2, '1.2477');
        test_cosh_014('-0.6767082617749', 8, 6, '1.2378392');
        test_cosh_014('-0.8808', 8, 5, '1.4136402');
        test_cosh_014('0.49600945701356094984359748395247735156888479861846043140472804537060894678', 6, 5, '1.12556');
        test_cosh_014('0.046', 8, 6, '1.0010582');
        test_cosh_014('0.9873815', 5, 3, '1.5283');
        test_cosh_014('0.8784', 10, 5, '1.411246223');
        test_cosh_014('0.7', 7, 3, '1.255169');
        test_cosh_014('-0.503676971304', 2, 4, '1.1');
        test_cosh_014('-0.52', 9, 0, '1.1382741');
        test_cosh_014('0.335', 5, 3, '1.0566');
        test_cosh_014('0.54503134222707683066822814099005615624557424312284166822346112986570184867578297341372133058', 8, 4, '1.152243');
        test_cosh_014('0.140170026295214447428649742547694034916', 3, 3, '1');
        test_cosh_014('0.9749', 8, 1, '1.514066');
        test_cosh_014('0.45175', 1, 6, '1');
        test_cosh_014('-0.519253467128781061573541633704', 2, 4, '1.1');
        test_cosh_014('-0.406127947', 8, 4, '1.0836098');
        test_cosh_014('0.9879237062663941347586862695316948803970665245072293680153692819868', 1, 6, '2');
        test_cosh_014('0.93872862', 6, 2, '1.47393');
        test_cosh_014('-0.3444', 2, 1, '1');
        test_cosh_014('0.08916117467145186539045806046188938916876705938558151882', 3, 4, '1');
        test_cosh_014('-0.416', 5, 0, '1.0878');
        test_cosh_014('0.96395116729510741473428', 7, 2, '1.50171');
        test_cosh_014('0.99122709843935', 6, 6, '1.53283');
        test_cosh_014('-0.982458257490853554631770530367962387675296749498661808', 4, 2, '1.523');
        test_cosh_014('-0.499', 9, 1, '1.12710543');
        test_cosh_014('0.2', 10, 4, '1.020066756');
        test_cosh_014('0.32898510410686170443107121609290058087988034054', 1, 2, '2');
        test_cosh_014('-0.5054805141', 4, 0, '1.131');
        test_cosh_014('0.905453421072444252766729099661770268735489121', 5, 2, '1.4388');
        test_cosh_014('0.8', 8, 4, '1.3374349');
        test_cosh_014('-0.92256', 9, 6, '1.45661127');
        test_cosh_014('-0.3', 3, 1, '1.04');
        test_cosh_014('-0.8022', 6, 0, '1.3394');
        test_cosh_014('0.280279125313444767164013539810445145153395088331', 9, 6, '1.039536');
        test_cosh_014('0.922', 9, 0, '1.4560184');
        test_cosh_014('-0.3831639', 2, 3, '1');
        test_cosh_014('-0.116822455409380771652804478024770757014', 9, 2, '1.00683151');
        test_cosh_014('-0.6271139128871161107740496', 6, 6, '1.20317');
        test_cosh_014('-0.365006', 6, 4, '1.06736');
        test_cosh_014('0.2851921', 4, 0, '1.041');
        test_cosh_014('0.8341406563142720368', 9, 6, '1.36854088');
        test_cosh_014('0.91', 4, 3, '1.443');
        test_cosh_014('-0.578095765576', 3, 2, '1.18');
        test_cosh_014('-0.5523113', 1, 2, '2');
        test_cosh_014('0.8820775602347211771265107133401152251168847255764663', 3, 1, '1.41');
        test_cosh_014('0.6', 6, 6, '1.18547');
        test_cosh_014('0.9519214874557153045994771268316705218216663716829234702503703405', 4, 4, '1.488');
        test_cosh_014('-0.3218817', 3, 2, '1.06');
        test_cosh_014('0.44351821336668159678862896314345092', 3, 4, '1.1');
        test_cosh_014('0.3049381299213785', 53, 1, '1.0468550263953477301259281776879206575932575051887101');
        test_cosh_014('0.26099', 10, 5, '1.034251653');
        test_cosh_014('-0.144401442746890126', 19, 4, '1.010444017455030066');
        test_cosh_014('-0.5714572371177476181814955346898484074259146899385956872902543373645059', 73, 5, '1.167773824213016730263000463935976580681778400516250742892039174797873742');
        test_cosh_014('-0.86979236712642165283', 49, 1, '1.402726925102945094675128817370785304534247058512');
        test_cosh_014('-0.9152145856049272208', 69, 0, '1.44887088581511840041990778954419353285403899090899859306282037305997');
        test_cosh_014('0.387335806024227799329046192853758455983606', 5, 2, '1.076');
        test_cosh_014('0.388975556466', 66, 5, '1.07660966083264696675091150003451244766269524553188412387790834976');
        test_cosh_014('0.33160669064983873525', 31, 6, '1.055487176550956129534144973298');
        test_cosh_014('-0.28019', 70, 5, '1.039510693535834131464819444254660971197184738177259681537805828091364');
        test_cosh_014('0.0343866155482285230161896002936333091757205795137', 120, 5, '1.0005912779235089895769422420654318600732389756527372429232171774523704748559241986434711131587505267979139253999862614');
        test_cosh_014('-0.75527206899549804249272338314789674457252085843936589751993516463961504230583153756146668708760395655590486810061', 106, 2, '1.29903660802276993760774110068399331119553878155671711944963582837840404664230951744751300716828764841588');
        test_cosh_014('-0.83084942449681844413114311598350904971957', 93, 6, '1.36547331079818409968059488018604532655176218338970363279898668882713647242007579671435739185');
        test_cosh_014('-0.98844124605395210760378949114', 131, 2, '1.5295995535325468391822464280546813045893064120694053640627522765165675183539459515034055077956555297594529493277522750037125717944');
        test_cosh_014('-0.229408429422973', 52, 2, '1.026429721818672220645820449684681483193384767884207');
        test_cosh_014('-0.8795273546479571', 109, 6, '1.412369739179125250038557346407853960447139468646550916478036613726909366980231455652343138412407973670167567');
        test_cosh_014('0.08734', 48, 3, '1.00381656302446278617584212015393654314148839114');
        test_cosh_014('-0.62885554240228925749059660488815716811800585603869', 110, 5, '1.2043323206984141503358874585487300913633309056345327254563876032684247394072689488447245272709777045418471248');
        test_cosh_014('0.736352757166802915869146657898488678037', 144, 5, '1.28358114765511064759744597771942942566178143747193954192893000446178314298730052934993653082205769261457701471805410675980773447720532092970925');
        test_cosh_014('-0.03585', 71, 4, '1.000642680077818347803829459573033542748786958454887675462988399590914');
        test_cosh_014('-0.0688528', 140, 6, '1.0023712906116182102872252559253654170023868298415419690478795554725602053890197559688480320707763057478441774639116768661635006893735054584');
        test_cosh_014('0.0168267352', 5, 2, '1.0002');
        test_cosh_014('-0.29337986744607176495268228205202618529507623296114708105478490669140318050037567584175308798414405821808486964207338344736952978297599188171', 6, 0, '1.04335');
        test_cosh_014('0.86878215121864496587492106526718403062818412998115479876941611922436896770420563647660680761', 75, 0, '1.40173390305230312316107861896321531639504128694271018346467019916830918736');
        test_cosh_014('0.2', 13, 5, '1.020066755619');
        test_cosh_014('0.7186693973416109381775823439368505900019443708610142063266365964635806721', 64, 2, '1.269550877565823873829899249395373137692396168326956113337601496');
        test_cosh_014('-0.6081', 33, 3, '1.19066105804760103593649377284751');
        test_cosh_014('0.33638979922638509091106475953810395641998150066065089020973699789581749159274904445966819915958672238151012655263653519891140163', 56, 0, '1.0571145964853011640156635194135243640222120068086141542');
        test_cosh_014('-0.528693621225218634808351766034027', 14, 0, '1.1430443609004');
        test_cosh_014('-0.143173097658174034133478578859895', 139, 6, '1.01026678782935959075629127133465981817550372382865818357596044596268912805753877412874535411755367732759740274249043367842083642626220661');
        test_cosh_014('0.2', 26, 6, '1.0200667556190758462955038');
        test_cosh_014('-0.888665339961', 143, 6, '1.4215429767257970529790075871798024719315334083688503048535857341028009449476701044589860625229223409387411810670578448660839797632491579578644');
        test_cosh_014('-0.8927373765563130228171556137613812', 76, 4, '1.425668910210701385640797102156834965294078876259114606262240531040574444596');
        test_cosh_014('0.9', 103, 1, '1.433086385448774387841790401624048341627737841305230594247417192533449635356864305114609711796244033432');
        test_cosh_014('-0.833291445811118155331699076307265315671094768698998', 48, 2, '1.36774796193155903463660933986762434999452033326');
        test_cosh_014('-0.7', 66, 6, '1.25516900563094301816467474099029711586260477992884178681185039895');
    });
    /**
     * @tc.number    : DECIMAL_TEST_023
     * @tc.name      : Decimal_cosh_Func_023
     * @tc.desc      : Test cosh
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    it("Decimal_cosh_Func_023", TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL1, () => {
        Decimal.set ({
            precision: 40,
            rounding: 4,
            toExpNeg: -9e15,
            toExpPos: 9e15,
            minE: -9e15,
            maxE: 9e15
        });
        try {
            test_cosh_014('e1', 66, 6, '1.25516900563094301816467474099029711586260477992884178681185039895');
            expect(true).assertEqual(false);
        } catch (err) {
            expect(err.name).assertEqual(`BusinessError`);
            expect(err.code).assertEqual(401);
            expect(err.message).assertEqual(`The type of "test(str)" must be Hex/Binary/Octal. Received value is: e1`);
        }
    });
    /**
     * @tc.number    : DECIMAL_TEST_024
     * @tc.name      : Decimal_constructor_Func_024
     * @tc.desc      : Test constructor
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    it("Decimal_constructor_Func_024", TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL1, () => {
        Decimal.set ({
            precision: 40,
            rounding: 4,
            toExpNeg: -9e15,
            toExpPos: 9e15,
            maxE: 9e15,
            minE: -9e15,
            crypto: false,
            modulo: 1
        });
        test_constructor_015('0', '0b0');
        test_constructor_015('0', '0B0');
        test_constructor_015('-5', '-0b101');
        test_constructor_015('5', '+0b101');
        test_constructor_015('1.5', '0b1.1');
        test_constructor_015('-1.5', '-0b1.1');
        test_constructor_015('18181', '0b100011100000101.00');
        test_constructor_015('-12.5', '-0b1100.10');
        test_constructor_015('343872.5', '0b1010011111101000000.10');
        test_constructor_015('-328.28125', '-0b101001000.010010');
        test_constructor_015('-341919.144535064697265625', '-0b1010011011110011111.0010010100000000010');
        test_constructor_015('97.10482025146484375', '0b1100001.000110101101010110000');
        test_constructor_015('-120914.40625', '-0b11101100001010010.01101');
        test_constructor_015('8080777260861123367657', '0b1101101100000111101001111111010001111010111011001010100101001001011101001');
        test_constructor_015('8', '0o10');
        test_constructor_015('-8.5', '-0O010.4');
        test_constructor_015('8.5', '+0O010.4');
        test_constructor_015('-262144.000000059604644775390625', '-0o1000000.00000001');
        test_constructor_015('572315667420.390625', '0o10250053005734.31');
        test_constructor_015('1', '0x00001');
        test_constructor_015('255', '0xff');
        test_constructor_015('-15.5', '-0Xf.8');
        test_constructor_015('15.5', '+0Xf.8');
        test_constructor_015('-16777216.00000000023283064365386962890625', '-0x1000000.00000001');
        test_constructor_015('325927753012307620476767402981591827744994693483231017778102969592507', '0xc16de7aa5bf90c3755ef4dea45e982b351b6e00cd25a82dcfe0646abb');
        test_constructor_016('NaN', NaN);
        test_constructor_016('NaN', -NaN);
        test_constructor_015('NaN', 'NaN');
        test_constructor_015('NaN', '-NaN');
        test_constructor_015('NaN', '+NaN');
        test_constructor_016('Infinity', Infinity);
        test_constructor_016('-Infinity', -Infinity);
        test_constructor_015('Infinity', 'Infinity');
        test_constructor_015('-Infinity', '-Infinity');
        test_constructor_015('Infinity', '+Infinity');
        test_constructor_016('0', 0);
        test_constructor_016('-0', -0);
        test_constructor_015('0', '0');
        test_constructor_015('-0', '-0');
        test_constructor_015('0', '0.');
        test_constructor_015('-0', '-0.');
        test_constructor_015('0', '0.0');
        test_constructor_015('-0', '-0.0');
        test_constructor_015('0', '0.00000000');
        test_constructor_015('-0', '-0.0000000000000000000000');
        test_constructor_016('1', 1);
        test_constructor_016('-1', -1);
        test_constructor_015('1', '1');
        test_constructor_015('-1', '-1');
        test_constructor_015('0.1', '.1');
        test_constructor_015('0.1', '.1');
        test_constructor_015('-0.1', '-.1');
        test_constructor_015('0.1', '+.1');
        test_constructor_015('1', '1.');
        test_constructor_015('1', '1.0');
        test_constructor_015('-1', '-1.');
        test_constructor_015('1', '+1.');
        test_constructor_015('-1', '-1.0000');
        test_constructor_015('1', '1.0000');
        test_constructor_015('1', '1.00000000');
        test_constructor_015('-1', '-1.000000000000000000000000');
        test_constructor_015('1', '+1.000000000000000000000000');
        test_constructor_016('123.456789', 123.456789);
        test_constructor_016('-123.456789', -123.456789);
        test_constructor_015('-123.456789', '-123.456789');
        test_constructor_015('123.456789', '123.456789');
        test_constructor_015('123.456789', '+123.456789');
    });
    /**
     * @tc.number    : DECIMAL_TEST_025
     * @tc.name      : Decimal_constructor_Func_025
     * @tc.desc      : Test constructor
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    it("Decimal_constructor_Func_025", TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL1, () => {
        Decimal.set ({
            precision: 40,
            rounding: 4,
            toExpNeg: -9e15,
            toExpPos: 9e15,
            maxE: 9e15,
            minE: -9e15,
            crypto: false,
            modulo: 1
        });
        try {
            test_constructor_015('0', 'e1');
            expect(true).assertEqual(false);
        } catch (err) {
            expect(err.name).assertEqual(`BusinessError`);
            expect(err.code).assertEqual(401);
            expect(err.message).assertEqual(`The type of "test(str)" must be Hex/Binary/Octal. Received value is: e1`);
        }
    });
    /**
     * @tc.number    : DECIMAL_TEST_026
     * @tc.name      : Decimal_div_Func_026
     * @tc.desc      : Test div
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    it("Decimal_div_Func_026", TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL1, () => {
        Decimal.set ({
            precision: 40,
            rounding: 4,
            toExpNeg: -7,
            toExpPos: 21,
            minE: -9e15,
            maxE: 9e15
        });
        test_div_017(false, 1, Infinity);
        test_div_017(true, 1, -Infinity);
        test_div_017(true, -1, Infinity);
        test_div_017(false, -1, -Infinity);
        test_div_017(false, 0, 1);
        test_div_017(true, 0, -1);
        test_div_017(true, -0, 1);
        test_div_017(false, -0, -1);
        test_div_017(false, 0, Infinity);
        test_div_017(true, 0, -Infinity);
        test_div_017(true, -0, Infinity);
        test_div_017(false, -0, -Infinity);
    });
    /**
     * @tc.number    : DECIMAL_TEST_027
     * @tc.name      : Decimal_dpSd_Func_027
     * @tc.desc      : Test dpSd
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    it("Decimal_dpSd_Func_027", TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL1, () => {
        Decimal.set ({
            precision: 20,
            rounding: 4,
            toExpNeg: -7,
            toExpPos: 21,
            minE: -9e15,
            maxE: 9e15
        });
        test_dpSd_019(100, 0, 1, 0);
        test_dpSd_020(100, 0, 1, false);
        test_dpSd_019(100, 0, 3, 1);
        test_dpSd_020(100, 0, 3, true);
        test_dpSd_018('0.0012345689', 10, 8, 0);
        test_dpSd_021('0.0012345689', 10, 8, false);
        test_dpSd_018('0.0012345689', 10, 8, 1);
        test_dpSd_021('0.0012345689', 10, 8, true);
        test_dpSd_018('987654321000000.0012345689000001', 16, 31, 0);
        test_dpSd_018('987654321000000.0012345689000001', 16, 31, 1);
        test_dpSd_018('1e+123', 0, 124, 1);
        test_dpSd_018('1e-123', 123, 1, 1);
        test_dpSd_021('9.9999e+9000000000000000', 0, 5, false);
        test_dpSd_021('9.9999e+9000000000000000', 0, 9000000000000001, true);
        test_dpSd_021('-9.9999e+9000000000000000', 0, 5, false);
        test_dpSd_021('-9.9999e+9000000000000000', 0, 9000000000000001, true);
        test_dpSd_021('1e-9000000000000000', 9e15, 1, false);
        test_dpSd_021('1e-9000000000000000', 9e15, 1, true);
        test_dpSd_021('-1e-9000000000000000', 9e15, 1, false);
        test_dpSd_021('-1e-9000000000000000', 9e15, 1, true);
    });
  });
}
