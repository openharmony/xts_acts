/*
 * Copyright (c) 2023 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import { beforeEach, describe, expect, it } from '@ohos/hypium'
import Utils from './Utils'
import uio from 'libuiondk.so'
import AbilityDelegatorRegistry from '@ohos.app.ability.abilityDelegatorRegistry';
import fs from '@ohos.file.fs'

export default function uioNdkTest() {
  describe('MuslUioTest', () => {

    beforeEach(async () => {
      await Utils.sleep(50)
    })

    /**
     * @tc.number     : SUB_THIRDPARTY_MUSL_UIO_READV_0100
     * @tc.name       : testMuslUioReadv001
     * @tc.desc       : test readv
     * @tc.size       : MediumTest
     * @tc.type       : Function
     * @tc.level      : Level 1
     */
    it('testMuslUioReadv001', 0, async (done: Function) => {
      let param = -1;
      let result: number = uio.readv(param);
      console.info("Test result = " + JSON.stringify(result));
      expect(result).assertEqual(-1);
      done()
    });

    /**
     * @tc.number     : SUB_THIRDPARTY_MUSL_UIO_READV_0200
     * @tc.name       : testMuslUioReadv002
     * @tc.desc       : test readv
     * @tc.size       : MediumTest
     * @tc.type       : Function
     * @tc.level      : Level 1
     */
    it('testMuslUioReadv002', 0, async (done: Function) => {
      let param = 0;
      let result: number = uio.readv(param);
      console.info("Test result = " + JSON.stringify(result));
      expect(result).assertEqual(0);
      done()
    });

    /**
     * @tc.number     : SUB_THIRDPARTY_MUSL_UIO_WRITEV_0100
     * @tc.name       : testMuslUioWritev001
     * @tc.desc       : test writev
     * @tc.size       : MediumTest
     * @tc.type       : Function
     * @tc.level      : Level 1
     */
    it('testMuslUioWritev001', 0, async (done: Function) => {
      let param = -1;
      let result: number = uio.writev(param);
      console.info("Test result = " + JSON.stringify(result));
      expect(result).assertEqual(-1);
      done()
    });
    /**
     * @tc.number     : SUB_THIRDPARTY_MUSL_UIO_PREADV_0100
     * @tc.name       : testMuslUioPReadV001
     * @tc.desc       : test preadv
     * @tc.size       : MediumTest
     * @tc.type       : Function
     * @tc.level      : Level 2
     */
    it('testMuslUioPReadV001', 0, async (done: Function) => {
      let data: number = uio.pReadV();
      console.info("Test NAPI data= " + JSON.stringify(data));
      expect(data).assertEqual(0);
      done()
    });
    /**
     * @tc.number     : SUB_THIRDPARTY_MUSL_UIO_PREADV64_0100
     * @tc.name       : testMuslUioPReadV64001
     * @tc.desc       : test preadv64
     * @tc.size       : MediumTest
     * @tc.type       : Function
     * @tc.level      : Level 2
     */
    it('testMuslUioPReadV64001', 0, async (done: Function) => {
      let data: number = uio.pReadV64();
      console.info("Test NAPI data= " + JSON.stringify(data));
      expect(data).assertEqual(0);
      done()
    });
    /**
     * @tc.number     : SUB_THIRDPARTY_MUSL_UIO_PWRITEV_0100
     * @tc.name       : testMuslUioPWriteV001
     * @tc.desc       : test pwritev
     * @tc.size       : MediumTest
     * @tc.type       : Function
     * @tc.level      : Level 2
     */
    it('testMuslUioPWriteV001', 0, async (done: Function) => {
      let data: number = uio.pWriteV();
      console.info("Test NAPI data= " + JSON.stringify(data));
      expect(data).assertEqual(0);
      done()
    });
    /**
     * @tc.number     : SUB_THIRDPARTY_MUSL_UIO_PWRITEV64_0100
     * @tc.name       : testMuslUioPWriteV64001
     * @tc.desc       : test pwritev64
     * @tc.size       : MediumTest
     * @tc.type       : Function
     * @tc.level      : Level 2
     */
    it('testMuslUioPWriteV64001', 0, async (done: Function) => {
      let data: number = uio.pWriteV64();
      console.info("Test NAPI data= " + JSON.stringify(data));
      expect(data).assertEqual(0);
      done()
    });
    /**
     * @tc.number     : SUB_THIRDPARTY_MUSL_UIO_PROCESSVMREADV_0100
     * @tc.name       : testMuslUioProcessVmReadV001
     * @tc.desc       : test process_vm_readv
     * @tc.size       : MediumTest
     * @tc.type       : Function
     * @tc.level      : Level 2
     */
    it('testMuslUioProcessVmReadV001', 0, async (done: Function) => {
      let data: number = uio.processVmReadV();
      console.info("Test NAPI data= " + JSON.stringify(data));
      expect(data).assertEqual(0);
      done()
    });
    /**
     * @tc.number     : SUB_THIRDPARTY_MUSL_UIO_PROCESSVMWRITEV_0100
     * @tc.name       : testMuslUioProcessVmWriteV001
     * @tc.desc       : test process_vm_writev
     * @tc.size       : MediumTest
     * @tc.type       : Function
     * @tc.level      : Level 2
     */
    it('testMuslUioProcessVmWriteV001', 0, async (done: Function) => {
      let data: number = uio.processVmWriteV();
      console.info("Test NAPI data= " + JSON.stringify(data));
      expect(data).assertEqual(0);
      done()
    });
  })

}