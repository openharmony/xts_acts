/*
 * Copyright (c) 2023 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import { beforeEach, describe, expect, it } from '@ohos/hypium'
import Utils from './Utils'
import statfs from 'libstatfsndk.so'

export default function statfsNdkTest() {
  describe('MuslStatfsTest', () => {

    beforeEach(async () => {
      await Utils.sleep(50)
    })

    /**
     * @tc.number     : SUB_THIRDPARTY_MUSL_STATFS_STATFS_0100
     * @tc.name       : testMuslStatfsStatfs001
     * @tc.desc       : test statfs
     * @tc.size       : MediumTest
     * @tc.type       : Function
     * @tc.level      : Level 0
     */
    it('testMuslStatfsStatfs001', 0, async (done: Function) => {
      let a = 1
      let c: number = statfs.statfs(a);
      expect(c).assertEqual(0);
      done()
    });

    /**
     * @tc.number     : SUB_THIRDPARTY_MUSL_STATFS_STATFS_0200
     * @tc.name       : testMuslStatfsStatfs002
     * @tc.desc       : test statfs
     * @tc.size       : MediumTest
     * @tc.type       : Function
     * @tc.level      : Level 0
     */
    it('testMuslStatfsStatfs002', 0, async (done: Function) => {
      let a = 2
      let c: number = statfs.statfs(a);
      expect(c).assertEqual(-1);
      done()
    });

    /**
     * @tc.number     : SUB_THIRDPARTY_MUSL_STATFS_STATFS64_0100
     * @tc.name       : testMuslStatfsStatfs64001
     * @tc.desc       : test statfs64
     * @tc.size       : MediumTest
     * @tc.type       : Function
     * @tc.level      : Level 0
     */
    it('testMuslStatfsStatfs64001', 0, async (done: Function) => {
      let a = 1
      let c: number = statfs.statfs64(a);
      expect(c).assertEqual(0);
      done()
    });

    /**
     * @tc.number     : SUB_THIRDPARTY_MUSL_STATFS_STATFS64_0200
     * @tc.name       : testMuslStatfsStatfs64002
     * @tc.desc       : test statfs64
     * @tc.size       : MediumTest
     * @tc.type       : Function
     * @tc.level      : Level 0
     */
    it('testMuslStatfsStatfs64002', 0, async (done: Function) => {
      let a = 2
      let c: number = statfs.statfs64(a);
      expect(c).assertEqual(-1);
      done()
    });

    /**
     * @tc.number     : SUB_THIRDPARTY_MUSL_STATS_FSTATFS_0100
     * @tc.name       : testMuslStatfsFstatfs001
     * @tc.desc       : test fstatfs
     * @tc.size       : MediumTest
     * @tc.type       : Function
     * @tc.level      : Level 1
     */
    it('testMuslStatfsFstatfs001', 0, async (done: Function) => {
      let resultTrue = 0;
      let result: boolean = statfs.fstatfs();
      expect(result).assertEqual(resultTrue);
      done()
    });

    /**
     * @tc.number     : SUB_THIRDPARTY_MUSL_STATS_FSTATFS64_0100
     * @tc.name       : testMuslStatfsFstatfs64001
     * @tc.desc       : test fstatfs64
     * @tc.size       : MediumTest
     * @tc.type       : Function
     * @tc.level      : Level 1
     */
    it('testMuslStatfsFstatfs64001', 0, async (done: Function) => {
      let resultTrue = 0;
      let result: boolean = statfs.fstatfs64();
      expect(result).assertEqual(resultTrue);
      done()
    });

    /**
     * @tc.number     : SUB_THIRDPARTY_MUSL_STATS_FSTATVFS_0100
     * @tc.name       : testMuslStatfsFstatvfs001
     * @tc.desc       : test fstatvfs
     * @tc.size       : MediumTest
     * @tc.type       : Function
     * @tc.level      : Level 1
     */
    it('testMuslStatfsFstatvfs001', 0, async (done: Function) => {
      let resultTrue = 0;
      let result: boolean = statfs.fstatvfs();
      expect(result).assertEqual(resultTrue);
      done()
    });

    /**
     * @tc.number     : SUB_THIRDPARTY_MUSL_STATS_FSTATVFS64_0100
     * @tc.name       : testMuslStatfsFstatvfs64001
     * @tc.desc       : test fstatvfs64
     * @tc.size       : MediumTest
     * @tc.type       : Function
     * @tc.level      : Level 1
     */
    it('testMuslStatfsFstatvfs64001', 0, async (done: Function) => {
      let resultTrue = 0;
      let result: boolean = statfs.fstatvfs64();
      expect(result).assertEqual(resultTrue);
      done()
    });
  })
}