/*
 * Copyright (c) 2023 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import { beforeEach, describe, expect, it } from '@ohos/hypium'
import Utils from './Utils'
import ftw from 'libftw1ndk.so'

export default function ftwNdk1Test() {
  describe('MuslFtw1Test', () => {

    beforeEach(async () => {
      await Utils.sleep(50)
    })

    /**
     * @tc.number     : SUB_THIRDPARTY_MUSL_FTW_FTW_0200
     * @tc.name       : testMuslFtwFtw002
     * @tc.desc       : test ftw
     * @tc.size       : MediumTest
     * @tc.type       : Function
     * @tc.level      : Level 1
     */
    it('testMuslFtwFtw002', 0, async (done: Function) => {
      let result: number = ftw.ftw(-1);
      expect(result).assertEqual(-1);
      done()
    });

    /**
     * @tc.number     : SUB_THIRDPARTY_MUSL_FTW_FTW64_0200
     * @tc.name       : testMuslFtwFtw64002
     * @tc.desc       : test ftw64
     * @tc.size       : MediumTest
     * @tc.type       : Function
     * @tc.level      : Level 1
     */
    it('testMuslFtwFtw64002', 0, async (done: Function) => {
      let result: number = ftw.ftw64(-1);
      expect(result).assertEqual(-1);
      done()
    });

    /**
     * @tc.number     : SUB_THIRDPARTY_MUSL_FTW_NFTW_0200
     * @tc.name       : testMuslFtwNftw002
     * @tc.desc       : nftw
     * @tc.size       : MediumTest
     * @tc.type       : Function
     * @tc.level      : Level 1
     */
    it('testMuslFtwNftw002', 0, async (done: Function) => {
      let result: number = ftw.nftw(-1);
      expect(result).assertEqual(-1);
      done()
    });

    /**
     * @tc.number     : SUB_THIRDPARTY_MUSL_FTW_NFTW64_0200
     * @tc.name       : testMuslFtwNftw64002
     * @tc.desc       : nftw64
     * @tc.size       : MediumTest
     * @tc.type       : Function
     * @tc.level      : Level 1
     */
    it('testMuslFtwNftw64002', 0, async (done: Function) => {
      let result: number = ftw.nftw64(-1);
      expect(result).assertEqual(-1);
      done()
    });
  })
}