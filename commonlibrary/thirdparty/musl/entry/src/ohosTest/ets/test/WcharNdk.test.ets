/*
 * Copyright (c) 2023 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import { beforeEach, describe, expect, it } from '@ohos/hypium'
import Utils from './Utils'
import wchar from 'libwcharndk.so'

export default function wcharNdkTest() {
  describe('MuslWcharTest', () => {

    beforeEach(async () => {
      await Utils.sleep(50)
    })

    /**
     * @tc.number   : SUB_THIRDPARTY_MUSL_WCHAR_GETWC_0100
     * @tc.name     : testMuslWcharGetwc001
     * @tc.desc     : test getwc
     * @tc.size     : MediumTest
     * @tc.type     : Function
     * @tc.level    : Level 1
     */
    it('testMuslWcharGetwc001', 0, async (done: Function) => {
      let result: number = wchar.getwc();
      expect(result).assertEqual(0);
      done()
    });

    /**
     * @tc.number     : SUB_THIRDPARTY_MUSL_WCHAR_MBRLEN_0100
     * @tc.name       : testMuslWcharMbrlen001
     * @tc.desc       : test mbrlen
     * @tc.size       : MediumTest
     * @tc.type       : Function
     * @tc.level      : Level 1
     */
    it('testMuslWcharMbrlen001', 0, async (done: Function) => {
      let data: number = wchar.mbrlen();
      console.info("Test NAPI data = \"" + data + "\"");
      expect(data).assertEqual(1);
      done();
    });

    /**
     * @tc.number     : SUB_THIRDPARTY_MUSL_WCHAR_FGETWS_0100
     * @tc.name       : testMuslWcharFGetWs001
     * @tc.desc       : test fgetws
     * @tc.size       : MediumTest
     * @tc.type       : Function
     * @tc.level      : Level 0
     */
    it('testMuslWcharFGetWs001', 0, async (done: Function) => {
      let result: number = wchar.fgetws();
      expect(result).assertEqual(0);
      done()
    });

    /**
     * @tc.number     : SUB_THIRDPARTY_MUSL_WCHAR_FGETWC_0100
     * @tc.name       : testMuslWcharFGetWc001
     * @tc.desc       : test fgetwc
     * @tc.size       : MediumTest
     * @tc.type       : Function
     * @tc.level      : Level 0
     */
    it('testMuslWcharFGetWc001', 0, async (done: Function) => {
      let result: number = wchar.fgetwc();
      expect(result).assertEqual(0);
      done()
    });

  })
}