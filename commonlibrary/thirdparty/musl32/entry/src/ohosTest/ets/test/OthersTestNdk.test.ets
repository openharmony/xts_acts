/*
 * Copyright (c) 2022 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import { beforeEach, describe, expect, it } from '@ohos/hypium'
import Utils from './Utils'
import otherstestndk from 'libotherstestndk32.so'
import fs from '@ohos.file.fs';
import AbilityDelegatorRegistry from '@ohos.app.ability.abilityDelegatorRegistry';

export default function otherstestNdkTest() {
  describe('OthersTestNdkTest', () => {

    beforeEach(async () => {
      await Utils.sleep(50)
    })

    /**
     * @tc.number     : SUB_THIRDPARTY_MUSL_STAT_FSTATAT_TIME64_0100
     * @tc.name       : testMuslStatFstatatTime64001
     * @tc.desc       : test __fstatat_time64
     * @tc.size       : MediumTest
     * @tc.type       : Function
     * @tc.level      : Level 0
     */
    it('testMuslStatFstatatTime64001', 0, async (done: Function) => {
      let abilityDelegator = AbilityDelegatorRegistry.getAbilityDelegator();
      let context = abilityDelegator.getAppContext();
      let filesDir = context.filesDir;
      let filetext = filesDir + 'test.txt';
      let file = fs.openSync(filetext, fs.OpenMode.READ_WRITE | fs.OpenMode.CREATE);
      fs.closeSync(file);
      expect(otherstestndk.__fstatat_time64(filetext)).assertEqual(0);
      done()
    });

    /**
     * @tc.number     : SUB_THIRDPARTY_MUSL_OTHER_AEABIATEXIT_0100
     * @tc.name       : testAeabiatexit001
     * @tc.desc       : test __aeabi_atexit
     * @tc.size       : MediumTest
     * @tc.type       : Function
     * @tc.level      : Level 1
     */
    it('testAeabiatexit001', 0, async (done: Function) => {
      let result: number = otherstestndk.aeabiatexit();
      expect(result).assertEqual(0);
      done();
    });

    /**
     * @tc.number     : SUB_THIRDPARTY_MUSL_OTHER_GNUUNWINDFINDEXIDX_0100
     * @tc.name       : testGnuunwindfindexidx001
     * @tc.desc       : test __gnu_Unwind_Find_exidx
     * @tc.size       : MediumTest
     * @tc.type       : Function
     * @tc.level      : Level 1
     */
    it('testGnuunwindfindexidx001', 0, async (done: Function) => {
      let result: number = otherstestndk.gnuunwindfindexidx();
      expect(result).assertEqual(0);
      done();
    });
  });
}
