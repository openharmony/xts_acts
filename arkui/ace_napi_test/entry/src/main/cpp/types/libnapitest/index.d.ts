/*
 * Copyright (c) 2024 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

export const External: () => Int8Array;
export const DetachTest: (para: Int8Array) => void;
export const IsDetachedTest: (para: ArrayBuffer) => number;
export const stopEventLoop: (para: number) => number;
export const NapiDefineSendableClass: () => object | number;
export const napiRunScriptPath: () => object | number;
export const BufferCopy: () => string;
export const testStr:string;
export const createAsyncResource: (para1, para2?:boolean) => object;
export const destroyAsyncResource: (para: object) => object;
export const runInCallbackScope: (para1: object, para2: string, para3: Function) => number;
export const testResolveAsync: () => Promise<string>;
export const napiSetInstanceData: () => number;
export const runEventLoop: (para: number) => number | string;
export const asyncWorkCallback: (para: object) => object;
export const napiAsyncCleanUpHook: () => object;
export const napiEnvCleanUpHook: () => object;
export const getModuleFileName: () => string;
export const NapiIsSendable: (para: object | number) => boolean;
export const NapiCreateSendableObject: () => object;
export const NapiCreateSendableArray: () => Array<string>;
export const NapiCreateSendableArrayWithLength: () => Array<string>;
export const NapiCreateSendableArrayBuffer: () => ArrayBuffer;
export const NapiCreateSendableTypedArray: () => ArrayBuffer;
export const NapiWrapSendable: (para1:object, para2:string) => void;
export const NapiUnwrapSendable: (para:object) => string;
export const NapiRemoveWrapSendable: (para:object) => string;
export const NapiWrapSendableWithSize: (para1:object, para2:string) => void;
export const TestLatin1: (para) => string;
export const napCreateArrayBuffer: () => ArrayBuffer;
export const naiGetArrayBufferInfo: () => number;
export const napiCreateFunction: () => Function;
export const napiDefineClass: () => number;
export const napiCancelAsyncWork: () => number;
export const napiCallThreadsafeFunction: () => number;
export const napiCreateThreadsafeFunction: () => number;
export const napiRefthreadSafeFunction: () => number;
export const napiCreateDate: () => number;
export const napiCreateBigintUint64: () => number;
export const napiCreateBigintInt64: () => number;
export const napiCreateBigintWords: () => number;
export const napiGetCbInfo: (number) => number;
export const referenceRefAndUnref: () => number;
export const createSymbol: (para:string) => number;
export const createAndGetInt64: (para:number) => number;
export const getTypedArrayInfo: () => number;
export const getDataViewInfo: (para:void) => number;
export const openAndCloseHandleScope: () => void;
export const openAndCloseEscapableHandleScope: () => object;
export const createReference: () => number;
export const createArrayAndGetLength: (para:Array<number>) => Array<number>;
export const getArrayWithLength: (para:Array<number>) => Array<number>;
export const createExternal: () => number;
export const createExternalArraybuffer: () => ArrayBuffer;
export const createObject: () => object;
export const createTypeArray: () => Int32Array;
export const createDataView: () => DataView;
export const createAndGetInt32: (para:number) => number;
export const createAndGetUInt32: (para:number) => number;
export const createDouble: (para:number) => number;
export const createAndGetStringLatin1: (para:string) => string;
export const createAndGetStringUtf8: (para:string) => string;
export const CreateBuffer: () => object;
export const getPrototype: () => object;
export const getPrototype2: (para: Function) => object;
export const getValueBool: (para: boolean) => boolean;
export const getValueDouble: (para:number) => number;
export const getValueExternal: () => number;
export const getNull: () => number;
export const getUndefined: () => number;
export const coerceToBool: (para: number) => boolean;
export const coerceToNumber: (para:string) => number;
export const coerceToObject: (para:Array<number>) => string;
export const coerceToString: (para) => string;
export const instanceOf: () => boolean;
export const isArray: () => number;
export const isDate: (para:Date) => boolean;
export const strictEquals: () => number;
export const getPropertyNames: () => number;
export const setProperty: () => object;
export const getProperty: () => object;
export const hasProperty: () => number;
export const setAndDeleteProperty: (object, string) => number;
export const hasOwnProperty: (object, string) => boolean;
export const setNamedProperty: (Array, string, boolean) => boolean;
export const getNamedProperty: (object, string) => number;
export const hasNamedProperty: (object, string) => boolean;
export const setElement: () => object;
export const getElement: () => object;
export const hasElement: () => object;
export const deleteElement: () => object;
export const defineProperties: () => object;
export const wrap: () => number;
export const unwrap: () => number;
export const removeWrap: () => number;
export const getVersion: () => number;
export const napiGetNodeVersion: () => number;
export const createPromise: () => number;
export const resolveAndRejectDeferred: () => number;
export const isPromise: () => number;
export const runScript: (string) => object;
export const callFunction: (Function) => number;
export const getUvEventLoop: () => object;
export class myClass {
  sayHello();
}
export const getGlobal: () => object;
export const testAsyncWork: (time: number, callback: (input: number) => number) => number;
export const testPromise: (number) => Promise<number>;
export const ThreadSafeTest: (callback: () => number) => number;
export const ThreadSafeTestNull: (callback: () => number) => number;
export const getAndClearLastException: () => number;
export const getLastErrorInfo: () => number;
export const cleanUpErrorInfo: () => boolean;
export const throwExistingError: () => number;
export const throwError: () => number;
export const throwTypeError: () => number;
export const throwRangeError: () => number;
export const isError: (boolean) => boolean;
export const createError: () => number;
export const createTypeError: () => number;
export const createRangeError: () => number;
export const isExceptionPending: () => number;
export const createAndGetStringUtf16: (string) => string;
export const stringUtf16OfCase: (string) => string;
export const typeTaggedInstance: (number) => object;
export const checkTypeTag: (number, object) => boolean;
export const stringUtf16OfLengthLeZero: (string) => string;
export const stringUtf16OfLengthEqOne: (string) => string;
export const stringUtf8OfLengthLeZero: (string) => string;
export const TestUtf8: (boolean) => void;
export const TestUtf16: (number) => void;
export const NapiCreateFunctionTwo: () => Function;
export const NewTargetTest: () => void;
export const napiLoadModule: () => number;
export const asyncWorkWithQos: (time: number, callback: (input: number) => number) => number;
export const createObjectWithProperties: () => number;
export const createObjectWithNamedProperties: () => number;
export const makeCallback: (para1, para2, para3) => void;
export const makeCallbackOne: (para1, para2, para3: (...args:number[]) => number, ...args:number[]) => number;
export const napiSerialize: () => number;
export const napiDeSerialize: () => number;
export const napiDeleteSerializationData: () => number;
export const napiSerializeDate: () => number;
export const napiSerializeString: () => number;
export const napiSerializeArray: () => number;
export const napiSerializeObject: () => number;
export const napiSerializeArraybuffer: () => number;
export const napiSerializeTypearray: () => number;
export const napiSerializeSharedarraybuffer: (para) => number;
export const napiSerializeMap: (para) => number;
export const napiSerializeSet: (para) => number;
export const napiSerializeRegExp: (para) => number;
export const napiSetNamedProperty: () => number;
export const napiGetNamedProperty: () => number;
export const callAddNumFunction: (para1, para2) => number;
export const napiNewInstance: () => boolean;
export const napiCrateAndGetValueString: (para) => string;
export const exceptionalSetNamedProperty: () => string;
export const exceptionalGetNamedProperty: () => string;
export const exceptionalCallAddNumFunction: (para1, para2) => string;
export const exceptionalNapiNewInstance: () => string;
export const exceptionalNapiCrateAndGetValueString: (para) => string;
export const threadSafePriorityWithInvalidParam: () => number;
export const checkUnwrapFunc: (para) => number;
export const createSendableArrayTest: (para) => ArrayBuffer;
export const createSendableArrayWithLengthTest: (para) => ArrayBuffer;
export const createSendableObjectWithProperties: () => number;
export const napiWrapSendableTest: () => number;
export const napiWrapSendableWithSizeTest: () => number;
export const napiUnWrapSendableTest: () => number;
export const napiRemoveWrapSendableTest: () => number;
export const CreateExternalBuffer: () => ArrayBuffer;
export const IsBuffer: (buffer) => boolean;
export const GetBufferInfo: (buffer) => boolean;
export const getLastErrorInfoNull: () => number;
export const throwFunc: () => number;
export const throwFuncNull: () => number;
export const isErrorValueNull: (boolean) => boolean;
export const isErrorRstNull: (boolean) => boolean;
export const createStringUtf8: (para:string) => string;
export const createErrorMsgNull: () => number;
export const createErrorRstNull: () => number;
export const createTypeErrorMsgNull: () => number;
export const createTypeErrorRstNull: () => number;
export const createRangeErrorRstNull: () => number;
export const getAndClearLastExceptionNull: () => number;
export const isExceptionPendingNull: () => number;
export const openAndCloseHandleScopeNull: () => void;
export const openAndCloseEscapableHandleScopeNull: () => object;
export const escapeHandle: () => object;
export const escapeHandleScopeNull: () => object;
export const escapeHandleOutputNull: () => object;
export const escapeHandleRstNull: () => object;
export const createReferenceValueNull: () => number;
export const getReferenceValue: () => number;
export const getReferenceValueRefNull: () => number;
export const getReferenceValueRstNull: () => number;
export const getAndDeleteReference: () => number;
export const deleteReferenceNull: () => number;
export const referenceRef: () => number;
export const referenceRefNull: () => number;
export const referenceRefAndUnrefNull: () => number;
export const createArrayNull: (para:Array<number>) => Array<number>;
export const napCreateArrayBufferNull: () => ArrayBuffer;
export const createExternalNull: () => number;
export const createExternalArraybufferDataNull: () => ArrayBuffer;
export const createObjectNull: () => object;
export const createSymbolNull: (para:string) => number;
export const createSymbolDescriptionNull: (para:string) => number;
export const createSymbolDescriptionNotString: (para:string) => number;
export const createTypeArrayBufferNull: () => Int32Array;
export const createTypeArrayResultNull: () => Int32Array;
export const createTypeArrayNotBufferObj: () => Int32Array;
export const createTypeArrayNotEnumValue: () => Int32Array;
export const createDataViewBufferNull: () => DataView;
export const createDataViewResultNull: () => DataView;
export const createDataViewBufferNotObj: () => DataView;
export const createInt32Null: (para:number) => number;
export const getValueInt32: (para:number) => number;
export const getValueInt32ValueNull: (para:number) => number;
export const getValueInt32RstNull: (para:number) => number;
export const getValueInt32NotNum: (para:number) => number;
export const getValueInt64: (para:number) => number;
export const getValueInt64ValueNull: (para:number) => number;
export const getValueInt64RstNull: (para:number) => number;
export const getValueInt64NotNum: (para:number) => number;
export const createUInt32Null: (para:number) => number;
export const createInt64Null: (para:number) => number;
export const createDoubleNull: (para:number) => number;
export const createAndGetStringLatin1BufferNull: (para:string) => string;
export const createAndGetStringLatin1ResultNull: (para:string) => string;
export const createAndGetStringUtf16BufferNull: (string) => string;
export const createAndGetStringUtf16ResultNull: (string) => string;
export const createAndGetStringUtf16Exceed: (string) => string;
export const getArrayLengthResultNull: (para:Array<number>) => Array<number>;
export const getArrayLengthValueNull: (para:Array<number>) => Array<number>;
export const getArrayLengthNotArray: (para:Array<number>) => Array<number>;
export const getArrayBufferInfoBufferNull: () => number;
export const getArrayBufferInfoLengthNull: () => number;
export const getArrayBufferInfoNotObj: () => number;
export const getPrototypeObjectNull: () => object;
export const getPrototypeResultNull: () => object;
export const getPrototypeNotObj: () => object;
export const getTypedArrayInfoNull: () => number;
export const getDataViewInfoNull: (para:void) => number;
export const getDataViewInfoNotObj: (para:void) => number;
export const getValueBoolValueNull: (para: boolean) => boolean;
export const getValueBoolResultNull: (para: boolean) => boolean;
export const getBoolean: (para: boolean) => boolean;
export const getBooleanNull: (para: boolean) => boolean;
export const getValueNotBool: (para: boolean) => boolean;
export const getValueDoubleValueNull: (para:number) => number;
export const getValueDoubleResultNull: (para:number) => number;
export const getValueDoubleNotNum: (para:number) => number;
export const getValueExternalValueNull: () => number;
export const getValueExternalResultNull: () => number;
export const getValueExternalNotPtr: () => number;
export const getValueStringLatin1: (string) => string;
export const getValueStringLatin1Null: (string) => string;
export const getValueStringUtf8: (string) => string;
export const getValueStringUtf8Null: (string) => string;
export const getValueStringUtf8NotStr: (string) => string;
export const getValueStringUtf16: (string) => string;
export const getValueStringUtf16Null: (string) => string;
export const getValueStringUtf16NotStr: (string) => string;
export const getValueUint32: (para:number) => number;
export const getValueUint32Null: (para:number) => number;
export const getValueUint32NotNum: (para:number) => number;
export const coerceToBoolValueNull: (para: number) => boolean;
export const coerceToBoolResultNull: (para: number) => boolean;
export const coerceToNumberValueNull: (para:string) => number;
export const coerceToNumberRstNull: (para:string) => number;
export const typeOf: (para:string) => number;
export const typeOfValueNull: (para:string) => number;
export const typeOfRstNull: (para:string) => number;
export const instanceOfObjectNull: () => object;
export const instanceOfConstructorNull: () => object;
export const instanceOfResultNull: () => object;
export const isArrayValueNull: (para:Array<number>) => Array<number>;
export const isArrayResultNull: (para:Array<number>) => Array<number>;
export const isDataView: () => DataView;
export const isDataViewValueNull: () => DataView;
export const isDataViewRstNull: () => DataView;
export const isArrayBuffer: () => ArrayBuffer;
export const isArrayBufferValueNull: () => ArrayBuffer;
export const isArrayBufferRstNull: () => ArrayBuffer;
export const isTypedArray: (para:Array<number>) => Array<number>;
export const isTypedArrayValueNull: (para:Array<number>) => Array<number>;
export const isTypedArrayRstNull: (para:Array<number>) => Array<number>;
export const isDateValueNull: () => number;
export const isDateResultNull: () => number;
export const strictEqualsFirstValueNull: () => number;
export const strictEqualsSecondValueNull: () => number;
export const strictEqualsResultNull: () => number;
export const strictEqualsNaN: () => number;
export const getPropertyNamesObjectNull: () => number;
export const getPropertyNamesResultNull: () => number;
export const getPropertyNamesNotObject: () => number;
export const setPropertyValueNull: () => number;
export const setPropertyResultNull: () => number;
export const setPropertyNoObject: () => number;
export const getPropertyObjectNull: () => number;
export const getPropertyKeyNull: () => number;
export const getPropertyResultNull: () => number;
export const getPropertyNotObject: () => number;
export const hasPropertyObjectNull: () => number;
export const hasPropertyKeyNull: () => number;
export const hasPropertyResultNull: () => number;
export const deletePropertyObjectNull: (object, string) => number;
export const deletePropertyKeyNull: (object, string) => number;
export const deletePropertyResultNull: (object, string) => number;
export const hasOwnPropertyObjectNull: (object, string) => boolean;
export const hasOwnPropertyKeytNull: (object, string) => boolean;
export const hasOwnPropertyResultNull: (object, string) => boolean;
export const setNamedPropertyObjectNull: (Array, string, boolean) => boolean;
export const setNamedPropertyKeyNull: (Array, string, boolean) => boolean;
export const setNamedPropertyResultNull: (Array, string, boolean) => boolean;
export const getNamedPropertyObjectNull: (object, string) => number;
export const getNamedPropertyKeyNull: (object, string) => number;
export const getNamedPropertyResultNull: (object, string) => number;
export const hasNamedPropertyObjectNull: (object, string) => boolean;
export const hasNamedPropertyKeyNull: (object, string) => boolean;
export const hasNamedPropertyResultNull: (object, string) => boolean;
export const setElementObjectNull: () => object;
export const setElementRstNull: () => object;
export const setElementNotObj: () => object;
export const getElementObjNull: () => object;
export const getElementRstNull: () => object;
export const getElementNotObj: () => object;
export const hasElementObjNull: () => object;
export const hasElementRstNull: () => object;
export const deleteElementObjNull: () => object;
export const deleteElementRstNull: () => object;
export const definePropertiesObjNull: () => object;
export const typeTaggedObjNull: () => object;
export const typeTaggedTagNull: (number) => object;
export const CheckTypeTagObjNull: (number, object) => boolean;
export const CheckTypeTagRstNull: (number, object) => boolean;
export const CheckTypeTagTagNull: (number, object) => boolean;
export const callFunctionNull: (Function) => number;
export const napiCreateFunctionFuncNull: () => Function;
export const napiCreateFunctionRstNull: () => Function;
export const napiGetCbInfoNull: (number) => number;
export const newTargetInfoNull: () => void;
export const newTargetRstNull: () => void;
export const newInstanceNull: () => boolean;
export const newInstanceNotFunc: () => boolean;
export const defineClassUTFNull: () => number;
export const defineClassConstructorNull: () => number;
export const defineClassRstNull: () => number;
export const defineClassLengthExceed: () => number;
export const unwrapObjNull: () => number;
export const unwrapRstNull: () => number;
export const removeWrapObjNull: (para:object) => string;
export const removeWrapRstNull: (para:object) => string;
export const cancelAsyncWorkNull: () => number;
export const queueAsyncWork: () => number;
export const queueAsyncWorkNull: () => number;
export const deleteAsyncWorkNull: () => number;
export const deleteAsyncWork: () => number;
export const defineSendableClassEnvNull: () => object | number;
export const defineSendableClassNameNull: () => object | number;
export const defineSendableClassConstructorNull: () => object | number;
export const defineSendableClassRstNull: () => object | number;
export const createSendableObjectWithPropertiesEnvNull: () => object;
export const createSendableObjectWithPropertiesRstNull: () => object;
export const createSendableArrayEnvNull: () => Array<string>;
export const createSendableArrayRstNull: () => Array<string>;
export const createSendableArrayWithLengthEnvNull: () => Array<string>;
export const createSendableArrayWithLengthRstNull: () => Array<string>;
export const createSendableArrayBufferEnvNull: () => Array<string>;
export const createSendableArrayBufferDataNull: () => Array<string>;
export const createSendableArrayBufferRstNull: () => Array<string>;
export const createSendableTypedArrayEnvNull: () => Array<string>;
export const createSendableTypedArraRstNull: () => Array<string>;
export const createSendableTypedArraBufferNull: () => Array<string>;
export const createSendableTypedArrayNotType: () => Array<string>;
export const createSendableTypedArrayNotBuffer: () => Array<string>;
export const createSendableFloat64ArrayTest: () => number;
export const createSendableBigInt64ArrayTest: () => number;
export const createSendableBigUint64ArrayTest: () => number;
export const wrapSendableEnvNull: (para1:object, para2:string) => void;
export const NapiWrapSendableObj1Null: (para1:object, para2:string) => void;
export const NapiWrapSendableObj2Null: (para1:object, para2:string) => void;
export const wrapSendableWithSizeEnvNull: (para1:object, para2:string) => void;
export const wrapSendableWithSizeObj1Null: (para1:object, para2:string) => void;
export const wrapSendableWithSizeObj2Null: (para1:object, para2:string) => void;
export const removeWrapSendableEnvNull: (para:object) => string;
export const removeWrapSendableObjNull: (para:object) => string;
export const removeWrapSendableRstNull: (para:object) => string;
export const getNodeVersion: () => number;
export const getNodeVersionEnvNull: () => number;
export const getNodeVersionRstNull: () => number;
export const releaseThreadsafeFunction: () => number;
export const releaseThreadsafeFunctionNull: () => number;
export const createThreadsafeFunctionInitialThreadCountNegative: () => number;
export const getVersionRstNull: () => number;
export const getVersionEnvNull: () => number;
export const createPromiseEnvNull: () => number;
export const createPromiseDeferredNull: () => number;
export const createPromisePromiseNull: () => number;
export const resolveDeferredEnvNull: () => number;
export const resolveDeferredNull: () => number;
export const isPromiseEnvNull: () => number;
export const isPromiseValueNull: () => number;
export const isPromiseRstNull: () => number;
export const getUvEventLoopEnvNull: () => object;
export const getUvEventLoopRstNull: () => object;
export const createThreadsafeFunctionEnvNull: () => number;
export const createThreadsafeFunctionNameNull: () => number;
export const napiCallThreadsafeFunctionNull: () => number;
export const refThreadSafeFunctionEnvNull: () => number;
export const refThreadSafeFunctionFuncNull: () => number;
export const createDateEnvNull: () => number;
export const createDateRstNull: () => number;
export const getValueBigintUint64: () => number;
export const getValueBigintUint64EnvNull: () => number;
export const getValueBigintUint64ValueNull: () => number;
export const getValueBigintUint64RstNull: () => number;
export const getValueBigintUint64LossNull: () => number;
export const getValueBigintInt64: () => number;
export const getValueBigintInt64ValueNull: () => number;
export const getValueBigintInt64LossNull: () => number;
export const getValueBigintInt64EnvNull: () => number;
export const getValueBigintInt64RstNull: () => number;
export const getValueBigintWords: () => number;
export const getValueBigintWordsEnvNull: () => number;
export const getValueBigintWordsValueNull: () => number;
export const getValueBigintWordsSignNull: () => number;
export const getValueBigintWordsCountNull: () => number;
export const getValueBigintWordsWordsNull: () => number;
export const createBigintInt64EnvNull: () => number;
export const createBigintInt64RstNull: () => number;
export const createBigintUint64EnvNull: () => number;
export const createBigintUint64RstNull: () => number;
export const createBigintWordsEnvNull: () => number;
export const createBigintWordsNull: () => number;
export const createBigintWordsRstNull: () => number;
export const createBufferEnvNull: () => object;
export const createBufferDataNull: () => object;
export const createBufferRstNull: () => object;
export const createBufferCopyEnvNull: () => object;
export const createBufferCopyDataNull: () => object;
export const createBufferCopyRstDataNull: () => object;
export const createBufferCopyRstNull: () => object;
export const createExternalBuffereEnvNull: () => object;
export const createExternalBuffereDataNull: () => object;
export const getBufferInfoEnvNull: (buffer) => boolean;
export const getBufferInfoValueNull: (buffer) => boolean;
export const IsBufferEnvNull: (buffer) => boolean;
export const IsBufferValueNull: (buffer) => boolean;
export const IsBufferRstNull: (buffer) => boolean;
export const FreezeTest: () => object;
export const objectFreezeEnvNull: () => object;
export const objectFreezeObjNull: () => object;
export const SealTest: () => object;
export const objectSealEnvNull: () => object;
export const objectSealObjNull: () => object;
export const GetAllPropertyNames: () => number;
export const GetAllPropertyNamesEnvNull: () => number;
export const GetAllPropertyNamesObjNull: () => number;
export const GetAllPropertyNamesResNull: () => number;
export const DetachEnvNull: (para: Int8Array) => void;
export const DetachArrNull: (para: Int8Array) => void;
export const IsDetachedEnvNull: (para: ArrayBuffer) => number;
export const IsDetachedArrNull: (para: ArrayBuffer) => number;
export const IsDetachedResNull: (para: ArrayBuffer) => number;
export const NapiSetInstanceDataEnvNull: () => number;
export const NapiGetInstanceDataDataNull: () => number;
export const NapiGetInstanceDataEnvNull: () => number;
export const NapiEnvCleanUpHookEnvNull: () => object;
export const NapiEnvCleanUpHookFuncNull: () => object;
export const NapiRemoveEnvCleanUpHookEnvNull: () => object;
export const NapiRemoveEnvCleanUpHookFuncNull: () => object;
export const GetModuleFileNameEnvNull: () => string;
export const GetModuleFileNameResNull: () => string;
export const createAsyncResourceEnvNull: (para1, para2?:boolean) => object;
export const createAsyncResourceObjNull: (para1, para2?:boolean) => object;
export const createAsyncResourceCbNull: (para1, para2?:boolean) => object;
export const asyncWorkWithQosEnvNull: (time: number, callback: (input: number) => number) => number;
export const asyncWorkWithQosWorkNull: (time: number, callback: (input: number) => number) => number;
export const napiRunScriptPathEnvNull: () => object | number;
export const napiRunScriptPathResNull: () => object | number;
export const napiLoadModuleEnvNull: () => number;
export const napiLoadModuleResNull: () => number;
export const createObjectWithPropertiesEnvNull: () => number;
export const createObjectWithPropertiesResNull: () => number;
export const createObjectWithPropertiesEnvResNull: () => number;
export const getDateValueNotDateObj: () => number;
export const getDateValueEnvNull: () => number;
export const getDateValueNull: () => number;
export const getDateValue: () => number;
export const getDateValueRstNull: () => number;
export const createBigintInt64ValueNotJS: () => number;
export const createBigintUint64ValueNotJS: () => number;
export const getValueBiginWordsNotBigInt: () => number;
export const createBufferSizeZero: () => object;
export const createBufferCopyLengthZero: () => object;
export const createExternalBufferLengthZero: () => object;
export const createExternalBufferLengthMax: () => object;
export const getBufferInfoValueNotBuffer: (buffer) => boolean;
export const objectSealNotObj: () => object;
export const objectFreezeNotObj: () => object;
export const detachArraybufferNotObj: (para: Int8Array) => void;
export const isSendableEnvNull: (para: object | number) => boolean;
export const isSendableValueNull: (para: object | number) => boolean;
export const isSendableRstNull: (para: object | number) => boolean;
export const deserializeEnvNull: () => number;
export const deserializeDataNull: () => number;
export const deserializeRstNull: () => number;
export const serializeEnvNull: () => number;
export const serializeObjNull: () => number;
export const serializeDataNull: () => number;
export const createObjectWithNamePropertiesEnvNull: () => number;
export const coerceToNativeBindingObject: (para:Array<number>) => string;
export const coerceToNativeBindingObjectEnvNull: (para:Array<number>) => string;
export const coerceToNativeBindingObjectObjNull: (para:Array<number>) => string;
export const coerceToNativeBindingObjectDetachNull: (para:Array<number>) => string;
export const coerceToNativeBindingObjectAttachNull: (para:Array<number>) => string;
export const coerceToNativeBindingObjectNativeNull: (para:Array<number>) => string;
export const deleteSerializationEnvNull: () => number;
export const deleteSerializationDataNull: () => number;
export const createBigintWordsCountIntMax: () => number;
export const makeCallbackTextNull: (para1, para2, para3) => void;
export const createThreadsafeFunctionMaxQueueSizeNegative: () => number;
export const hasOwnPropertyCheckpro: () =>boolean;
export const hasOwnPropertyCheckOwnpro: () =>boolean;
export const createTypeErrorRes:() => Error;
export const createRangeErrorRes:() => Error;
export const NapiModuleRegisterTest: () => boolean;
export const NapiGetLastErrorInfoTest: () => boolean;
export const NapiThrowTest: () => boolean;
export const NapiThrowErrorTest: () => boolean;
export const NapiThrowTypeErrorTest: () => boolean;
export const NapiThrowRangeErrorTest: () => boolean;
export const NapiIsErrorTest: () => boolean;
export const NapiCreateErrorTest: () => boolean;
export const NapiCreateTypeErrorTest: () => boolean;
export const NapiCreateRangeErrorTest: () => boolean;
export const NapiGetAndClearLastExceptionTest: () => boolean;
export const NapiIsExceptionPendingTest: () => boolean;
export const NapiFatalErrorTest: () => boolean;
export const NapiOpenHandleScopeTest: () => boolean;
export const NapiCloseHandleScopeTest: () => boolean;
export const NapiOpenEscapableHandleScopeTest: () => boolean;
export const NapiCloseEscapableHandleScopeTest: () => boolean;
export const NapiEscapeHandleTest: () => boolean;
export const NapiCreateReferenceTest: () => boolean;
export const NapiDeleteReferenceTest: () => boolean;
export const NapiReferenceRefTest: () => boolean;
export const NapiReferenceUnrefTest: () => boolean;
export const NapiGetReferenceValueTest: () => boolean;
export const NapiCreateArrayTest: () => boolean;
export const NapiCreateArrayWithLengthTest: () => boolean;
export const NapiCreateArrayBufferTest: () => boolean;
export const NapiCreateObjectTest: () => boolean;
export const NapiCreateSymbolTest: () => boolean;
export const NapiCreateTypedArrayTest: () => boolean;
export const NapiCreateDateViewTest: () => boolean;
export const NapiCreateInt32Test: () => boolean;
export const NapiCreateUint32Test: () => boolean;
export const NapiCreateInt64Test: () => boolean;
export const NapiCreateDoubleTest: () => boolean;
export const NapiCreateStringLatin1Test: () => boolean;
export const NapiCreateStringUtf8Test: () => boolean;
export const NapiCreateStringUtf16Test: () => boolean;
export const NapiGetArrayLengthTest: () => boolean;
export const NapiGetArrayBufferInfoTest: () => boolean;
export const NapiGetPrototypeTest: () => boolean;
export const NapiGetTypedArrayTest: () => boolean;
export const NapiGetDataViewInfoTest: () => boolean;
export const NapiGetValueBoolTest: () => boolean;
export const NapiGetValueDoubleTest: () => boolean;
export const NapiGetValueInt32Test: () => boolean;
export const NapiGetValueInt64Test: () => boolean;
export const NapiGetValueStringLatin1Test: () => boolean;
export const NapiGetValueStringUtf8Test: () => boolean;
export const NapiGetValueStringUtf16Test: () => boolean;
export const NapiGetValueUint32Test: () => boolean;
export const NapiGetBooleanTest: () => boolean;
export const NapiGetGlobalTest: () => boolean;
export const NapiGetNullTest: () => boolean;
export const NapiGetUndefinedTest: () => boolean;
export const NapiCoerceToBoolTest: () => boolean;
export const NapiCoerceToNumberTest: () => boolean;
export const NapiCoerceToObjectTest: () => boolean;
export const NapiCoerceToStringTest: () => boolean;
export const NapiTypeOfTest: () => boolean;
export const NapiInstanceOfTest: () => boolean;
export const NapiIsArrayTest: () => boolean;
export const NapiIsArrayBufferTest: () => boolean;
export const NapiIsTypedArrayTest: () => boolean;
export const NapiIsDataViewTest: () => boolean;
export const NapiIsDateTest: () => boolean;
export const NapiStrictEqualsTest: () => boolean;
export const NapiGetPropertyNamesTest: () => boolean;
export const NapiSetPropertyTest: () => boolean;
export const NapiGetPropertyTest: () => boolean;
export const NapiHasPropertyTest: () => boolean;
export const NapiDeletePropertyTest: () => boolean;
export const NapiDeletePropertyTest01: () => boolean;
export const NapiDeletePropertyTest02: () => boolean;
export const NapiDeletePropertyTest03: () => boolean;
export const NapiDeletePropertyTest04: () => boolean;
export const NapiDeletePropertyTest05: () => boolean;
export const NapiDeletePropertyTest06: () => boolean;
export const NapiDeletePropertyTest07: () => boolean;
export const NapiHasOwnPropertyTest: () => boolean;
export const NapiSetNamedPropertyTest: () => boolean;
export const NapiGetNamedPropertyTest: () => boolean;
export const NapiHasNamedPropertyTest: () => boolean;
export const NapiSetElementTest: () => boolean;
export const NapiGetElementTest: () => boolean;
export const NapiHasElementTest: () => boolean;
export const NapiDeleteElementTest01: () => boolean;
export const NapiDeleteElementTest02: () => boolean;
export const NapiDeleteElementTest03: () => boolean;
export const NapiDeleteElementTest04: () => boolean;
export const NapiDeleteElementTest05: () => boolean;
export const NapiDefinePropertiesTest: () => boolean;
export const NapiTypeTagObjectTest: () => boolean;
export const NapiRemoveWrapSendableTest1: () => boolean;
export const NapiUwrapSendableTest: () => boolean;
export const NapiWrapSendableWithSizeTest1: () => boolean;
export const NapiWrapSendableTest1: () => boolean;
export const NapiCreateSendableTypeArrayTest: () => boolean;
export const NapiCreateSendableArrayBufferTest: () => boolean;
export const NapiCreateSendableArrayWithLengthTest: () => boolean;
export const NapiCreateSendableArrayTest: () => boolean;
export const NapiCreateSendableObjectWithPropertiesTest: () => boolean;
export const NapiDefineSendableClassTest1: () => boolean;
export const NapiDefineSendableClassTest2: () => boolean;
export const NapiDefineSendableClassTest3: () => boolean;
export const NapiDefineSendableClassTest4: () => boolean;
export const NapiDefineSendableClassTest5: () => boolean;
export const NapiDefineSendableClassTest6: () => boolean;
export const NapiDefineSendableClassTest7: () => boolean;
export const NapiDefineSendableClassTest8: () => boolean;
export const NapiIsSendableTest: () => boolean;
export const NapiCallThreadsafeFunctionWithPriorityTest: () => boolean;
export const NapiDeleteSerializationDataTest: () => boolean;
export const NapiDeserializeTest: () => boolean;
export const NapiSerializeTest: () => boolean;
export const NapiLoadModuleWithInfoTest: () => boolean;
export const NapiStopEventLoopTest: () => boolean;
export const NapiRunEventLoopTest: () => boolean;
export const NapiDestroyArkRuntimeTest: () => boolean;
export const NapiCreateArkRuntimeTest: () => boolean;
export const NapiCoerceToNativeBindingObjectTest: () => boolean;
export const NapiCreateObjectWithNamedPropertiesTest: () => boolean;
export const NapiCreateObjectWithPropertiesTest: () => boolean;
export const NapiLoadModuleTest: () => boolean;
export const NapiRunScriptPathTest: () => boolean;
export const NapiQueueAsyncWorkWithQosTest: () => boolean;
export const NapiFatalExceptionTest: () => boolean;
export const NapiAddFinalizerTest: () => boolean;
export const NodeApiGetModuleFileNameTest: () => boolean;
export const NapiRemoveAsyncCleanupHookTest: () => boolean;
export const NapiAddAsyncCleanupHookTest: () => boolean;
export const NapiRemoveEnvCleanupHookTest: () => boolean;
export const NapiAddEnvCleanupHookTest: () => boolean;
export const NapiGetInstanceDataTest: () => boolean;
export const NapiSetInstanceDataTest: () => boolean;
export const NapiIsDetachedArrayBufferTest: () => boolean;
export const NapiDetachedArrayBufferTest: () => boolean;
export const NapiGetAllPropertyNamesTest: () => boolean;
export const NapiObjectSealTest: () => boolean;
export const NapiObjectFreezeTest: () => boolean;
export const NapiIsBufferTest: () => boolean;
export const NapiGetBufferInfoTest: () => boolean;
export const NapiCreateExternalBufferTest: () => boolean;
export const NapiCreateBufferCopyTest: () => boolean;
export const NapiCreateBufferTest: () => boolean;
export const NapiGetValueBigintWordsTest: () => boolean;
export const NapiGetValueBigintUint64Test: () => boolean;
export const NapiGetValueBigintInt64Test: () => boolean;
export const NapiCreateBigintWordsTest: () => boolean;
export const NapiCreateBigintUint64Test: () => boolean;
export const NapiCreateBigintInt64Test: () => boolean;
export const NapiGetDataValueTest: () => boolean;
export const NapiCreateDataTest: () => boolean;
export const NapiUnrefThreadsafeFunctionTest: () => boolean;
export const NapiRefThreadsafeFunctionTest: () => boolean;
export const NapiReleaseThreadsafeFunctionTest: () => boolean;
export const NapiAcquireThreadsafeFunctionTest: () => boolean;
export const NapiCallThreadsafeFunctionTest: () => boolean;
export const NapiGetThreadsafeFunctionContextTest: () => boolean;
export const NapiCreateThreadsafeFunctionTest1: () => boolean;
export const NapiCreateThreadsafeFunctionTest2: () => boolean;
export const NapiCreateThreadsafeFunctionTest3: () => boolean;
export const NapiGetUvEventLoopTest: () => boolean;
export const NapiIsPromiseTest: () => boolean;
export const NapiRejectDeferredTest: () => boolean;
export const NapiResolveDeferredTest: () => boolean;
export const NapiCreatePromiseTest: () => boolean;
export const NapiGetVersionTest: () => boolean;
export const NapiGetNodeVersionTest: () => boolean;
export const NapiCloseCallbackScopeTest: () => boolean;
export const NapiOpenCallbackScopeTest: () => boolean;
export const NapiAsyncDestroyTest: () => boolean;
export const NapiMakeCallback1Test: () => boolean;
export const NapiMakeCallback2Test: () => boolean;
export const NapiMakeCallback3Test: () => boolean;
export const NapiMakeCallback4Test: () => boolean;
export const NapiMakeCallback5Test: () => boolean;
export const NapiMakeCallback6Test: () => boolean;
export const NapiAsyncInitTest: () => boolean;
export const NapiCancelAsyncWorkTest: () => boolean;
export const NapiQueueAsyncWorkTest: () => boolean;
export const NapiDeleteAsyncWorkTest: () => boolean;
export const NapiCreateAsyncWorkTest: () => boolean;
export const NapiRemoveWrapTest: () => boolean;
export const NapiUnwrapTest: () => boolean;
export const NapiWrapTest: () => boolean;
export const NapiDefineClassTest: () => boolean;
export const NapiNewInstanceTest: () => boolean;
export const NapiGetNewTargetTest: () => boolean;
export const NapiGetCbInfoTest: () => boolean;
export const NapiCreateFunctionTest: () => boolean;
export const NapiCallFunctionTest: () => boolean;
export const NapiCheckObjectTypeTagTest: () => boolean;
export const NapiWrapEnhanceTest:() => number;