/**
 * Copyright (c) 2024 Shenzhen Kaihong Digital Industry Development Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import { describe, beforeAll, beforeEach, afterEach, afterAll, it, expect } from '@ohos/hypium';
import router from '@ohos.router';
import CommonFunc from '../../MainAbility/common/Common';
import {UiComponent, UiDriver, Component, Driver, UiWindow, ON, BY, MatchPattern, DisplayRotation, ResizeDirection, WindowMode, PointerMatrix} from '@ohos.UiTest';

export default function ImageAdvancedTest() {

  describe('ImageAdvancedTest', () => {

    const routerPush = async (target:string) => {
      let options:router.RouterOptions = {
        url: `MainAbility/pages/image/imageAdvanced/${target}`,
      }
      try {
        router.clear();
        let pages = router.getState();
        console.info(`get ${target} state pages:` + JSON.stringify(pages));
        console.info(`get ${target} pages.name:` + JSON.stringify(pages.name));
        if (!(target == pages.name)) {
          let result = router.pushUrl(options);
          console.info(`router options url is ${options.url}`);
          await CommonFunc.sleep(1000);
          console.info(`push ${target} page result:` + JSON.stringify(result));
          let pages = router.getState();
          console.info(`push page name is ${pages.name}`);
          expect(pages.name).assertEqual(target)
        }
      } catch (err) {
        console.error(`push ${target} page error:` + err);
      }
    }

    beforeAll(async () =>  {
      console.info("beforeAll called");
    })

    afterEach(async () =>  {
      await CommonFunc.sleep(1000);
      console.info("after each called");
    });

    /*
     * @tc.number : SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0050
     * @tc.name   : SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0050
     * @tc.desc   : src:base64,check onComplete
     * @tc.size   : MediumTest
     * @tc.type   : Function
     * @tc.level  : Level 3
     */
    it('SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0050', 3, async (done: Function) =>  {
      console.info('[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0050] START');
      await routerPush("imageAltBase64")
      let driver = Driver.create();
      await CommonFunc.sleep(1000);
      let strJson = getInspectorByKey('loadingResultAlt');
      let obj: ESObject = JSON.parse(strJson);
      console.info("[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0050] component obj is: " + JSON.stringify(obj));
      console.info("[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0050] obj.$attrs.content is: " + obj.$attrs.content);
      expect(obj.$attrs.content).assertContain('success');
      console.info('[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0050] END');
      done();
    });

    /*
     * @tc.number : SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0280
     * @tc.name   : SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0280
     * @tc.desc   : set aspectRatio 1.5,load 50*50 image and check onComplete
     * @tc.size   : MediumTest
     * @tc.type   : Function
     * @tc.level  : Level 3
     */
    it('SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0280', 3, async (done: Function) =>  {
      console.info('[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0280] START'); 
      await routerPush("image01")
      let driver = Driver.create();
      await CommonFunc.sleep(1000);
      let strJson1 = getInspectorByKey('contentOffsetX01');
      let obj1: ESObject = JSON.parse(strJson1);
      console.info("[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0280] component obj1 is: " + JSON.stringify(obj1));
      console.info("[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0280] obj1.$attrs.content is: " + obj1.$attrs.content);
      expect(obj1.$attrs.content).assertEqual('1.5');
      let strJson2 = getInspectorByKey('contentOffsetY01');
      let obj2: ESObject = JSON.parse(strJson2);
      console.info("[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0280] component obj2 is: " + JSON.stringify(obj2));
      console.info("[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0280] obj2.$attrs.content is: " + obj2.$attrs.content);
      expect(obj2.$attrs.content).assertEqual('1.5');
      let strJson3 = getInspectorByKey('contentHeight01');
      let obj3: ESObject = JSON.parse(strJson3);
      console.info("[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0280] component obj3 is: " + JSON.stringify(obj3));
      console.info("[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0280] obj3.$attrs.content is: " + obj3.$attrs.content);
      expect(obj3.$attrs.content).assertEqual('97');
      console.info('[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0280] END');
      done();
    });

    /*
     * @tc.number : SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0290
     * @tc.name   : SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0290
     * @tc.desc   : set aspectRatio 0.5,load 50*50 image and check onComplete
     * @tc.size   : MediumTest
     * @tc.type   : Function
     * @tc.level  : Level 3
     */
    it('SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0290', 3, async (done: Function) =>  {
      console.info('[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0290] START'); 
      await routerPush("image02")
      let driver = Driver.create();
      await CommonFunc.sleep(1000);
      let strJson1 = getInspectorByKey('contentHeight02');
      let obj1: ESObject = JSON.parse(strJson1);
      console.info("[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0290] component obj1 is: " + JSON.stringify(obj1));
      console.info("[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0290] obj1.$attrs.content is: " + obj1.$attrs.content);
      expect(obj1.$attrs.content).assertEqual('297');
      done();
    });

    /*
     * @tc.number : SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0300
     * @tc.name   : SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0300
     * @tc.desc   : set border width 10,load 80*80 image and check onComplete
     * @tc.size   : MediumTest
     * @tc.type   : Function
     * @tc.level  : Level 3
     */
    it('SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0300', 3, async (done: Function) =>  {
      console.info('[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0300] START'); 
      await routerPush("image03")
      let driver = Driver.create();
      await CommonFunc.sleep(1000);
      let strJson1 = getInspectorByKey('contentHeight03');
      let obj1: ESObject = JSON.parse(strJson1);
      console.info("[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0300] component obj1 is: " + JSON.stringify(obj1));
      console.info("[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0300] obj1.$attrs.content is: " + obj1.$attrs.content);
      expect(obj1.$attrs.content).assertEqual('120');
      let strJson2 = getInspectorByKey('contentOffsetX03');
      let obj2: ESObject = JSON.parse(strJson2);
      console.info("[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0280] component obj2 is: " + JSON.stringify(obj2));
      console.info("[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0280] obj2.$attrs.content is: " + obj2.$attrs.content);
      expect(obj2.$attrs.content).assertEqual('15');
      done();
    });

    /*
     * @tc.number : SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0310
     * @tc.name   : SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0310
     * @tc.desc   : set border width 20,load 80*80 image and check onComplete
     * @tc.size   : MediumTest
     * @tc.type   : Function
     * @tc.level  : Level 3
     */
    it('SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0310', 3, async (done: Function) =>  {
      console.info('[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0310] START'); 
      await routerPush("image04")
      let driver = Driver.create();
      await CommonFunc.sleep(1000);
      let strJson1 = getInspectorByKey('contentHeight04');
      let obj1: ESObject = JSON.parse(strJson1);
      console.info("[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0300] component obj1 is: " + JSON.stringify(obj1));
      console.info("[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0300] obj1.$attrs.content is: " + obj1.$attrs.content);
      expect(obj1.$attrs.content).assertEqual('90');
      let strJson2 = getInspectorByKey('contentOffsetX04');
      let obj2: ESObject = JSON.parse(strJson2);
      console.info("[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0280] component obj2 is: " + JSON.stringify(obj2));
      console.info("[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0280] obj2.$attrs.content is: " + obj2.$attrs.content);
      expect(obj2.$attrs.content).assertEqual('30');
      done();
    });

    /*
     * @tc.number : SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0320
     * @tc.name   : SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0320
     * @tc.desc   : set padding 10,load 80*80 image and check onComplete
     * @tc.size   : MediumTest
     * @tc.type   : Function
     * @tc.level  : Level 3
     */
    it('SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0320', 3, async (done: Function) =>  {
      console.info('[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0320] START'); 
      await routerPush("image05")
      let driver = Driver.create();
      await CommonFunc.sleep(2000);
      let strJson1 = getInspectorByKey('contentHeight05');
      let obj1: ESObject = JSON.parse(strJson1);
      console.info("[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0300] component obj1 is: " + JSON.stringify(obj1));
      console.info("[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0300] obj1.$attrs.content is: " + obj1.$attrs.content);
      expect(obj1.$attrs.content).assertEqual('120');
      let strJson2 = getInspectorByKey('contentOffsetX05');
      let obj2: ESObject = JSON.parse(strJson2);
      console.info("[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0280] component obj2 is: " + JSON.stringify(obj2));
      console.info("[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0280] obj2.$attrs.content is: " + obj2.$attrs.content);
      expect(obj2.$attrs.content).assertEqual('15');
      done();
    });

    /*
     * @tc.number : SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0330
     * @tc.name   : SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0330
     * @tc.desc   : set padding 20,load 80*80 image and check onComplete
     * @tc.size   : MediumTest
     * @tc.type   : Function
     * @tc.level  : Level 3
     */
    it('SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0330', 3, async (done: Function) =>  {
      console.info('[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0330] START'); 
      await routerPush("image06")
      let driver = Driver.create();
      await CommonFunc.sleep(2000);
      let strJson1 = getInspectorByKey('contentHeight06');
      let obj1: ESObject = JSON.parse(strJson1);
      console.info("[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0330] component obj1 is: " + JSON.stringify(obj1));
      console.info("[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0330] obj1.$attrs.content is: " + obj1.$attrs.content);
      expect(obj1.$attrs.content).assertEqual('90');
      let strJson2 = getInspectorByKey('contentOffsetX06');
      let obj2: ESObject = JSON.parse(strJson2);
      console.info("[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0330] component obj2 is: " + JSON.stringify(obj2));
      console.info("[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0330] obj2.$attrs.content is: " + obj2.$attrs.content);
      expect(obj2.$attrs.content).assertEqual('30');
      done();
    });

    /*
     * @tc.number : SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0340
     * @tc.name   : SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0340
     * @tc.desc   : set clip,load 50*50 image and check onComplete
     * @tc.size   : MediumTest
     * @tc.type   : Function
     * @tc.level  : Level 3
     */
    it('SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0340', 3, async (done: Function) =>  {
      console.info('[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0340] START'); 
      await routerPush("image07")
      let driver = Driver.create();
      await CommonFunc.sleep(2000);
      let strJson1 = getInspectorByKey('contentHeight07');
      let obj1: ESObject = JSON.parse(strJson1);
      console.info("[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0340] component obj1 is: " + JSON.stringify(obj1));
      console.info("[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0340] obj1.$attrs.content is: " + obj1.$attrs.content);
      expect(obj1.$attrs.content).assertEqual('150');
      let strJson2 = getInspectorByKey('contentOffsetX07');
      let obj2: ESObject = JSON.parse(strJson2);
      console.info("[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0340] component obj2 is: " + JSON.stringify(obj2));
      console.info("[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0340] obj2.$attrs.content is: " + obj2.$attrs.content);
      expect(obj2.$attrs.content).assertEqual('0');
      done();
    });

    /*
     * @tc.number : SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0350
     * @tc.name   : SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0350
     * @tc.desc   : set mask,load 50*50 image and check onComplete
     * @tc.size   : MediumTest
     * @tc.type   : Function
     * @tc.level  : Level 3
     */
    it('SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0350', 3, async (done: Function) =>  {
      console.info('[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0350] START'); 
      await routerPush("image08")
      let driver = Driver.create();
      await CommonFunc.sleep(2000);
      let strJson1 = getInspectorByKey('contentOffsetY08');
      let obj1: ESObject = JSON.parse(strJson1);
      console.info("[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0350] component obj1 is: " + JSON.stringify(obj1));
      console.info("[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0350] obj1.$attrs.content is: " + obj1.$attrs.content);
      expect(obj1.$attrs.content).assertEqual('0');
      let strJson2 = getInspectorByKey('contentOffsetX08');
      let obj2: ESObject = JSON.parse(strJson2);
      console.info("[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0350] component obj2 is: " + JSON.stringify(obj2));
      console.info("[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0350] obj2.$attrs.content is: " + obj2.$attrs.content);
      expect(obj2.$attrs.content).assertEqual('0');
      done();
    });

    /*
     * @tc.number : SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0360
     * @tc.name   : SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0360
     * @tc.desc   : citation rawfile
     * @tc.size   : MediumTest
     * @tc.type   : Function
     * @tc.level  : Level 3
     */
    it('SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0360', 3, async (done: Function) =>  {
      console.info('[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0360] START'); 
      await routerPush("image09")
      let driver = Driver.create();
      await CommonFunc.sleep(2000);
      let strJson1 = getInspectorByKey('loadingResult09');
      let obj1: ESObject = JSON.parse(strJson1);
      console.info("[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0360] component obj1 is: " + JSON.stringify(obj1));
      console.info("[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0360] obj1.$attrs.content is: " + obj1.$attrs.content);
      expect(obj1.$attrs.content).assertContain('success');
      done();
    });

    /*
     * @tc.number : SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0370
     * @tc.name   : SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0370
     * @tc.desc   : citation resource
     * @tc.size   : MediumTest
     * @tc.type   : Function
     * @tc.level  : Level 3
     */
    it('SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0370', 3, async (done: Function) =>  {
      console.info('[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0370] START'); 
      await routerPush("image10")
      let driver = Driver.create();
      await CommonFunc.sleep(2000);
      let strJson1 = getInspectorByKey('loadingResult10');
      let obj1: ESObject = JSON.parse(strJson1);
      console.info("[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0370] component obj1 is: " + JSON.stringify(obj1));
      console.info("[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0370] obj1.$attrs.content is: " + obj1.$attrs.content);
      expect(obj1.$attrs.content).assertContain('success');
      done();
    });

    /*
     * @tc.number : SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0380
     * @tc.name   : SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0380
     * @tc.desc   : citation base64
     * @tc.size   : MediumTest
     * @tc.type   : Function
     * @tc.level  : Level 3
     */
    it('SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0380', 3, async (done: Function) =>  {
      console.info('[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0380] START'); 
      await routerPush("imageBase64")
      let driver = Driver.create();
      await CommonFunc.sleep(2000);
      let strJson1 = getInspectorByKey('loadingResultBase64');
      let obj1: ESObject = JSON.parse(strJson1);
      console.info("[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0380] component obj1 is: " + JSON.stringify(obj1));
      console.info("[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0380] obj1.$attrs.content is: " + obj1.$attrs.content);
      expect(obj1.$attrs.content).assertContain('success');
      done();
    });

    /*
     * @tc.number : SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0420
     * @tc.name   : SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0420
     * @tc.desc   : citation jpg,png,bmp,svg,gif
     * @tc.size   : MediumTest
     * @tc.type   : Function
     * @tc.level  : Level 3
     */
    it('SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0420', 3, async (done: Function) =>  {
      console.info('[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0420] START'); 
      await routerPush("image14")
      let driver = Driver.create();
      await CommonFunc.sleep(2000);
      let strJson1 = getInspectorByKey('loadingJpg14');
      let obj1: ESObject = JSON.parse(strJson1);
      console.info("[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0420] component obj1 is: " + JSON.stringify(obj1));
      console.info("[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0420] obj1.$attrs.content is: " + obj1.$attrs.content);
      expect(obj1.$attrs.content).assertContain('success');
      let strJson2 = getInspectorByKey('loadingPng14');
      let obj2: ESObject = JSON.parse(strJson2);
      console.info("[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0420] component obj2 is: " + JSON.stringify(obj2));
      console.info("[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0420] obj2.$attrs.content is: " + obj2.$attrs.content);
      expect(obj2.$attrs.content).assertContain('success');
      let strJson3 = getInspectorByKey('loadingBmp14');
      let obj3: ESObject = JSON.parse(strJson3);
      console.info("[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0420] component obj3 is: " + JSON.stringify(obj3));
      console.info("[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0420] obj3.$attrs.content is: " + obj3.$attrs.content);
      expect(obj3.$attrs.content).assertContain('success');
      let strJson4 = getInspectorByKey('loadingSvg14');
      let obj4: ESObject = JSON.parse(strJson4);
      console.info("[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0420] component obj4 is: " + JSON.stringify(obj4));
      console.info("[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0420] obj4.$attrs.content is: " + obj4.$attrs.content);
      expect(obj4.$attrs.content).assertContain('success');
      let strJson5 = getInspectorByKey('loadingGif14');
      let obj5: ESObject = JSON.parse(strJson5);
      console.info("[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0420] component obj5 is: " + JSON.stringify(obj5));
      console.info("[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0420] obj5.$attrs.content is: " + obj5.$attrs.content);
      expect(obj5.$attrs.content).assertContain('success');
      done();
    });

    /*
     * @tc.number : SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0430
     * @tc.name   : SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0430
     * @tc.desc   : citation internal img
     * @tc.size   : MediumTest
     * @tc.type   : Function
     * @tc.level  : Level 3
     */
    it('SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0430', 3, async (done: Function) =>  {
      console.info('[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0430] START'); 
      await routerPush("image15")
      let driver = Driver.create();
      await CommonFunc.sleep(2000);
      let strJson1 = getInspectorByKey('loadingResult15');
      let obj1: ESObject = JSON.parse(strJson1);
      console.info("[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0430] component obj1 is: " + JSON.stringify(obj1));
      console.info("[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0430] obj1.$attrs.content is: " + obj1.$attrs.content);
      expect(obj1.$attrs.content).assertContain('success');
      done();
    });

    /*
     * @tc.number : SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0440
     * @tc.name   : SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0440
     * @tc.desc   : Referencing using relative paths
     * @tc.size   : MediumTest
     * @tc.type   : Function
     * @tc.level  : Level 3
     */
    it('SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0440', 3, async (done: Function) =>  {
      console.info('[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0440] START'); 
      await routerPush("image16")
      let driver = Driver.create();
      await CommonFunc.sleep(2000);
      let strJson1 = getInspectorByKey('loadingResult16');
      let obj1: ESObject = JSON.parse(strJson1);
      console.info("[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0440] component obj1 is: " + JSON.stringify(obj1));
      console.info("[SUB_ACE_UI_COMPONENT_MEDIA_IMAGE_SIZE_0440] obj1.$attrs.content is: " + obj1.$attrs.content);
      expect(obj1.$attrs.content).assertContain('success');
      done();
    });
  })
}
