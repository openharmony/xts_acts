/**
 * Copyright (c) 2023 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { describe, beforeAll, beforeEach, afterEach, afterAll, it, expect } from "@ohos/hypium"
import router from '@ohos.router';
import {UiComponent, UiDriver, Component, Driver, UiWindow, ON, BY, MatchPattern, DisplayRotation, ResizeDirection, WindowMode, PointerMatrix} from '@ohos.UiTest';
import CommonFunc from '../../MainAbility/utils/Common';
import {MessageManager,Callback} from '../../MainAbility/utils/MessageManager';


export default function ListLanes05() {
  describe('ListLanes05', () => {
    beforeEach(async (done: Function) => {
      console.info("ListLanes05 beforeEach start");
      let options: router.RouterOptions = {
        url: 'MainAbility/pages/List/ListLanes05',
      }
      try {
        router.clear();
        let pages = router.getState();
        console.info("get ListLanes05 state pages: " + JSON.stringify(pages));
        if (!("ListLanes05" == pages.name)) {
          console.info("get ListLanes05 state pages.name: " + JSON.stringify(pages.name));
          let result = await router.push(options);
          await CommonFunc.sleep(2000);
          console.info("push ListLanes05 page result: " + JSON.stringify(result));
        }
      } catch (err) {
        console.error("push ListLanes05 page error: " + err);
        expect().assertFail();
      }
      done();
    });

    /* *
      * @tc.number: SUB_ACE_FUNCTION_JICHU_SR000HQ76H_046
      * @tc.name  : ListLanes05_001
      * @tc.desc  : set gutter to 10lpx and listDirection to Axis.Horizontal
      * @tc.level : Level 3
      */
    it('ListLanes05_001', 0, async (done: Function) => {

      console.info('[ListLanes05_001] START');
      await CommonFunc.sleep(200);

      let ListItem01_0 = CommonFunc.getComponentRect('ListItem0501_0');
      let ListItem01_1 = CommonFunc.getComponentRect('ListItem0501_1');
      await CommonFunc.sleep(1000);
      expect(Math.abs(Math.round(ListItem01_1.top - ListItem01_0.bottom) - Math.round(lpx2px(10))) <= 1).assertTrue();
     

      console.info('[ListLanes05_001] END');
      done();
    });

    /* *
      * @tc.number: SUB_ACE_FUNCTION_JICHU_SR000HQ76H_042
      * @tc.name  : ListLanes05_002
      * @tc.desc  : set gutter to 10px and listDirection to Axis.Horizontal
      * @tc.level : Level 3
      */
    it('ListLanes05_002', 0, async (done: Function) => {

      console.info('[ListLanes05_002] START');
      await CommonFunc.sleep(200);

      let ListItem0 = CommonFunc.getComponentRect('ListItem02_0');
      let ListItem1 = CommonFunc.getComponentRect('ListItem02_1');
      await CommonFunc.sleep(1000);
      expect(Math.abs(Math.round(ListItem1.top - ListItem0.bottom) - Math.round(10)) <= 1).assertTrue();
     

      console.info('[ListLanes05_002] END');
      done();
    });

    /* *
      * @tc.number: SUB_ACE_FUNCTION_JICHU_SR000HQ76H_044
      * @tc.name  : ListLanes05_003
      * @tc.desc  : set gutter to 10vp and listDirection to Axis.Horizontal
      * @tc.level : Level 3
      */
    it('ListLanes05_003', 0, async (done: Function) => {

      console.info('[ListLanes05_003] START');
      await CommonFunc.sleep(200);

      let ListItem0 = CommonFunc.getComponentRect('ListItem03_0');
      let ListItem1 = CommonFunc.getComponentRect('ListItem03_1');
      await CommonFunc.sleep(1000);
      expect(Math.abs(Math.round(ListItem1.top - ListItem0.bottom) - Math.round(vp2px(10))) <= 1).assertTrue();

      console.info('[ListLanes05_003] END');
      done();
    });

    /* *
      * @tc.number: SUB_ACE_FUNCTION_JICHU_SR000HQ76H_048
      * @tc.name  : ListLanes05_004
      * @tc.desc  : set gutter to Resource and listDirection to Axis.Horizontal
      * @tc.level : Level 3
      */
    it('ListLanes05_004', 0, async (done: Function) => {

      console.info('[ListLanes05_004] START');
      await CommonFunc.sleep(200);

      let ListItem0 = CommonFunc.getComponentRect('ListItem04_0');
      let ListItem1 = CommonFunc.getComponentRect('ListItem04_1');
      await CommonFunc.sleep(1000);
      expect(Math.abs(Math.round(ListItem1.top - ListItem0.bottom) - Math.round(vp2px(10))) <= 1).assertTrue();

      console.info('[ListLanes05_004] END');
      done();
    });


  })
}
