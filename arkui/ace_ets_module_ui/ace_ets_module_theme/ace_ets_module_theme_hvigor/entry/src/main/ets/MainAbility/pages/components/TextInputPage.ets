/*
 * Copyright (c) 2024 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License")
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { redCustomTheme, brownCustomTheme } from '../../themes/CustomTheme'

export const textInputThemeProperty: string = `TextInputThemeProperty`
export const textInputThemeSetProperty: string = `TextInputThemeSetProperty`

export const textInputBackgroundColor: ResourceColor | undefined = brownCustomTheme.colors?.backgroundPrimary
export const textInputPlaceholderColor: ResourceColor | undefined = brownCustomTheme.colors?.fontOnPrimary

export class TextInputKeys {
  static readonly textInputOthersSystem = 'TextInput_Others_System'
  static readonly textInputPasswordSystem = `TextInput_Password_System`
  static readonly textInputInlineSystem = `TextInput_Inline_System`
  static readonly textInputOthersSystemCustomAttrs = 'TextInput_Others_System_CustomAttrs'
  static readonly textInputPasswordSystemCustomAttrs = `TextInput_Password_System_CustomAttrs`
  static readonly textInputInlineSystemCustomAttrs = `TextInput_Inline_System_CustomAttrs`
  static readonly textInputOthersWithTheme = `TextInput_Others_WithTheme`
  static readonly textInputPasswordWithTheme = `TextInput_Password_WithTheme`
  static readonly textInputInlineWithTheme = `TextInput_Inline_WithTheme`
  static readonly textInputOthersWithThemeCustomAttrs = `TextInput_Others_WithTheme_CustomAttrs`
  static readonly textInputPasswordWithThemeCustomAttrs = `TextInput_Password_WithTheme_CustomAttrs`
  static readonly textInputInlineWithThemeCustomAttrs = `TextInput_Inline_WithTheme_CustomAttrs`
}

@Entry
@Component
struct TextInputPage {
  @StorageLink(textInputThemeProperty) localTheme: CustomTheme | undefined = redCustomTheme
  @StorageLink(textInputThemeSetProperty) themeSet: boolean = true

  build(){
    Column() {
      TextInput({ placeholder: 'Type text here' })
        .margin({ left: '20vp', right: '20vp', top: '10vp' })
        .key(TextInputKeys.textInputOthersSystem)
      TextInput({ placeholder: 'Type text here' })
        .margin({ left: '20vp', right: '20vp', top: '10vp' })
        .type(InputType.Password)
        .key(TextInputKeys.textInputPasswordSystem)
      TextInput({ placeholder: 'Type text here' })
        .style(TextInputStyle.Inline)
        .margin({ left: '20vp', right: '20vp', top: '10vp' })
        .key(TextInputKeys.textInputInlineSystem)
      TextInput({ placeholder: 'Type text here' })
        .margin({ left: '20vp', right: '20vp', top: '10vp' })
        .backgroundColor(textInputBackgroundColor)
        .placeholderColor(textInputPlaceholderColor)
        .key(TextInputKeys.textInputOthersSystemCustomAttrs)
      TextInput({ placeholder: 'Type text here' })
        .margin({ left: '20vp', right: '20vp', top: '10vp' })
        .type(InputType.Password)
        .backgroundColor(textInputBackgroundColor)
        .placeholderColor(textInputPlaceholderColor)
        .key(TextInputKeys.textInputPasswordSystemCustomAttrs)
      TextInput({ placeholder: 'Type text here' })
        .style(TextInputStyle.Inline)
        .margin({ left: '20vp', right: '20vp', top: '10vp' })
        .backgroundColor(textInputBackgroundColor)
        .placeholderColor(textInputPlaceholderColor)
        .key(TextInputKeys.textInputInlineSystemCustomAttrs)
      WithTheme({ theme: this.themeSet ? this.localTheme : undefined }) {
        Column() {
          TextInput({ placeholder: 'Type text here' })
            .margin({ left: '20vp', right: '20vp', top: '10vp' })
            .key(TextInputKeys.textInputOthersWithTheme)
          TextInput({ placeholder: 'Type text here' })
            .margin({ left: '20vp', right: '20vp', top: '10vp' })
            .type(InputType.Password)
            .key(TextInputKeys.textInputPasswordWithTheme)
          TextInput({ placeholder: 'Type text here' })
            .style(TextInputStyle.Inline)
            .margin({ left: '20vp', right: '20vp', top: '10vp' })
            .key(TextInputKeys.textInputInlineWithTheme)
          TextInput({ placeholder: 'Type text here' })
            .margin({ left: '20vp', right: '20vp', top: '10vp' })
            .backgroundColor(textInputBackgroundColor)
            .placeholderColor(textInputPlaceholderColor)
            .key(TextInputKeys.textInputOthersWithThemeCustomAttrs)
          TextInput({ placeholder: 'Type text here' })
            .margin({ left: '20vp', right: '20vp', top: '10vp' })
            .type(InputType.Password)
            .backgroundColor(textInputBackgroundColor)
            .placeholderColor(textInputPlaceholderColor)
            .key(TextInputKeys.textInputPasswordWithThemeCustomAttrs)
          TextInput({ placeholder: 'Type text here' })
            .style(TextInputStyle.Inline)
            .margin({ left: '20vp', right: '20vp', top: '10vp' })
            .backgroundColor(textInputBackgroundColor)
            .placeholderColor(textInputPlaceholderColor)
            .key(TextInputKeys.textInputInlineWithThemeCustomAttrs)
        }.width('100%')
      }
    }
  }
}