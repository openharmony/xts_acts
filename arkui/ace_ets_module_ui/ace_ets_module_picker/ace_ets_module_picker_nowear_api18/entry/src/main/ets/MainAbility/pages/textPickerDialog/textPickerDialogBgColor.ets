/**
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
@Entry
@Component
struct TextPickerDialogBgColor {
  showDialog(color: ResourceColor | null | undefined) {
    TextPickerDialog.show({
      // 建议使用 this.getUIContext().showTextPickerDialog()接口
      range: ['apple1', 'orange2', 'peach3', 'grape4', 'banana5'],
      defaultPickerItemHeight: 40,
      backgroundColor: color,
      backgroundBlurStyle: BlurStyle.NONE,
      onDidAppear: () => {
        let tree: ESObject = getInspectorTree();
        let dialog: ESObject = tree.$children[1];
        let column: ESObject = dialog.$children[0];
        let backgroundColor: string = column.$attrs.backgroundColor;
        console.log('onDidAppear: ' + backgroundColor);
      }
    })
}
  build() {
    Flex({wrap: FlexWrap.Wrap}) {
      Button('Color.White')
        .onClick(() => {
          this.showDialog(Color.White)
        })
        .id('ColorWhiteID')
      Button('rgb(255, 100, 255)')
        .onClick(() => {
          this.showDialog('rgb(255, 100, 255)')
        })
        .id('rgb(255, 100, 255)ID')
      Button('0x008080')
        .onClick(() => {
          this.showDialog(0x008080)
        })
        .id('0x008080ID')
      Button('#00FFFF')
        .onClick(() => {
          this.showDialog('#00FFFF')
        })
        .id('00FFFFID')
      Button('$r(app.color.blue)')
        .onClick(() => {
          this.showDialog($r('app.color.blue'))
        })
        .id('colorBlueID')

      Button('null')
        .onClick(() => {
          this.showDialog(null)
        })
        .id('nullID')
      Button('undefined')
        .onClick(() => {
          this.showDialog(undefined)
        })
        .id('undefinedID')
      Button('xxx')
        .onClick(() => {
          this.showDialog('xxx')
        })
        .id('xxxID')
      Button('-100')
        .onClick(() => {
          this.showDialog(-100)
        })
        .id('-100ID')
    }.width('100%')
  }
}