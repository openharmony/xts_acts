/*
 * Copyright (c) 2024 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import web_webview from '@ohos.web.webview';
import Utils from '../../test/Utils';
import testNapi from 'libentry.so';
import events_emitter from '@ohos.events.emitter';

@Entry
@Component
struct testWebResponseSetCharsetParamNone {
  controller: web_webview.WebviewController = new web_webview.WebviewController("scheme-handler");
  @State str: string = ""

  aboutToAppear() {
    testNapi.registerCustomSchemes()
    web_webview.WebviewController.initializeWebEngine();
    testNapi.setSchemeHandler(16);
  }

  onPageShow(){
    let valueChangeEvent: events_emitter.InnerEvent = {
      eventId: 10,
      priority: events_emitter.EventPriority.LOW
    }
    events_emitter.on(valueChangeEvent, this.valueChangeCallBack)
  }

  onPageHide() {
    events_emitter.off(10)
  }

  private valueChangeCallBack = (eventData: events_emitter.EventData) => {
    console.info("web page valueChangeCallBack");
    if (eventData != null) {
      console.info("valueChangeCallBack:" + JSON.stringify(eventData));
      if (eventData.data != null && eventData.data.ACTION != null) {
        this.str = eventData.data.ACTION;
      }
    }
  }

  build() {
    Column() {
      Button("SetCharset")
        .key('SetCharset')
        .onClick(async () => {
          switch (this.str){
            case "testWebResponse_SetCharset_Param_None":{
              let result = testNapi.setStatus();
              if (result == 0) {
                console.log("Succeed testWebResponse_SetCharset_Param_None");
                Utils.emitEvent(result, 5116);
              }
              else{
                console.log("Faild testWebResponse_SetCharset_Param_None");
                Utils.emitEvent(result, 5116);
              }
              break;
            }
          }
        })
      Web({ src: 'https://www.example.com', controller: this.controller });
    }
  }
}