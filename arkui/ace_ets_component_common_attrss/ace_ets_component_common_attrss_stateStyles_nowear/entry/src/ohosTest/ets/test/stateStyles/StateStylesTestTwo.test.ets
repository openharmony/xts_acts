/*
 * Copyright (c) 2023 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import CommonTest from '../common/CommonTest';
import Utils from '../../MainAbility/common/Utils';
import { AttrsManager } from '../../MainAbility/common/AttrsManager';
import { describe, expect } from '@ohos/hypium'

class PageConfig {
  testName: string = '';
  pageName: string = '';
  pageUrl: string = '';
}

class TestValues {
  describe: string = '';
  setValue: boolean = false;
  expectValue: ESObject
}

export default function stateStylesTestTwo() {
  let supportView = [
    'Checkbox',
    'CheckboxGroup',
    'Radio',
    'Toggle',
    'MenuItem'
  ]

  let pageConfig: PageConfig = {
    testName: 'testStateStylesTwo',
    pageName: 'StateStylesPageTwo',
    pageUrl: 'MainAbility/pages/stateStyles/StateStylesPageTwo'
  }

  let testValues: TestValues[] = [{
    describe: 'SetSelected',
    setValue: false,
    expectValue: {
      selectedStyles: 2,
      normalStyles: 1
    }
  }]

  describe('StateStylesTestTwo', () => {
    CommonTest.initTest(pageConfig, supportView, testValues, null, async (data: ESObject) => {
      //Obtain target component information before changes
      let targetBeforeObj: ESObject = Utils.getComponentByKey(data.pageConfig.componentKey);

      //Set value
      AttrsManager.change(data.caseTag, data.testValue.setValue);
      await Utils.sleep(1000);

      //Obtain target component information after changes
      let targetAfterObj: ESObject = Utils.getComponentByKey(data.pageConfig.componentKey);

      //Check results
      console.info('[' + data.caseTag + ']' + 'targetBeforeObj.$attrs.zIndex is:' + targetBeforeObj.$attrs.zIndex);
      console.info('[' + data.caseTag + ']' + 'data.testValue.expectValue.selectedStyles is:' + data.testValue.expectValue.selectedStyles);
      expect(targetBeforeObj.$attrs.zIndex).assertEqual(data.testValue.expectValue.selectedStyles);
      console.info('[' + data.caseTag + ']' + 'targetAfterObj.$attrs.zIndex is:' + targetAfterObj.$attrs.zIndex);
      console.info('[' + data.caseTag + ']' + 'data.testValue.expectValue.normalStyles is:' + data.testValue.expectValue.normalStyles);
      expect(targetAfterObj.$attrs.zIndex).assertEqual(data.testValue.expectValue.normalStyles);
    });
  })
}