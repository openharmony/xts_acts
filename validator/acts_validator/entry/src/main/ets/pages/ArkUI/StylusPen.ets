/**

Copyright (c) 2025 Huawei Device Co., Ltd.
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
http://www.apache.org/licenses/LICENSE-2.0
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
import router from '@ohos.router';
import promptAction from '@ohos.promptAction';
import FirstDialog from '../model/FirstDialog';
import { unifiedDataChannel, uniformTypeDescriptor } from '@kit.ArkData';
const TAG = '[StylusPen]';
@Entry
@Component
struct StylusPenExample {
@State text: string = ''
@State axisValue: string = ''
@State name: string = 'StylusPen';
@State Vue: boolean = false;
@State intervalNum: number = 0;
@State hoverMoveText: string = '';
@State StepTips: string = '操作步骤：使用手写笔拖动图片到可释放区域' + '\n' + '预期结果：图片能够被拖动'
@State uri: string = ""
@State AblockArr: string[] = []
@State BblockArr: string[] = []
@State AVisible: Visibility = Visibility.Visible
@State dragSuccess :Boolean = false

aboutToAppear(): void {

FirstDialog.ChooseDialog(this.StepTips, this.name);
}

aboutToDisappear(): void {

clearInterval(this.intervalNum)
}

onPageHide() {
clearInterval(this.intervalNum)
}

onPageShow() {

this.intervalNum = setInterval(() => {
     if(this.dragSuccess) {
        this.Vue = true
     }
}, 500)
}

@Builder
PassBtn(text: Resource, isFullScreen: boolean) {
if (this.Vue == false) {
Button({ stateEffect: this.Vue }) {
Image($r('app.media.ic_public_pass'))
.width('20vp')
.height('20vp')
}
.width('30%')
.height('30vp')
.backgroundColor(Color.Grey)
.opacity(0.4)
.onClick(() => {

  })
} else {
  Button({ stateEffect: this.Vue }) {
    Image($r('app.media.ic_public_pass'))
      .width('20vp')
      .height('20vp')
  }.width('30%')
  .height('30vp')
  .backgroundColor(Color.Grey)
  .onClick(() => {
    router.back({
      url: 'pages/ArkUI/ArkUI_index',
      params: {
        result: 'true ', title: this.name,
      }
    })
    promptAction.showToast({
      message: '通过', duration: 1000
    });
  })
}
}

@Builder
FailBtn(text: Resource, isFullScreen: boolean) {
Button() {
Image($r('app.media.ic_public_fail'))
.width('20vp')
.height('20vp')
}
.width('30%')
.height('30vp')
.backgroundColor(Color.Grey)
.onClick(() => {
router.back({
url: 'pages/ArkUI/ArkUI_index',
params: {
result: 'false', title: this.name,
}
})
promptAction.showToast({
message: '失败', duration: 1000
});
})
}

build() {
Column() {
Row() {
Button() {
Image($r('app.media.ic_public_back'))
.width('20vp')
.height('18vp')
.margin({ left: '20vp' })
}
.backgroundColor(Color.Black)
.size({ width: '40vp', height: '30vp' })
.onClick(() => {
router.back({
url: 'pages/ArkUI/ArkUI_index',
params: { result: 'None' }
})
})

    Text(this.name)
      .fontColor(Color.White)
      .fontSize('18fp')
      .margin({ left: '-20vp' })
    Text('hello')
      .fontColor(Color.White)
      .visibility(Visibility.Hidden)
  }
  .backgroundColor(Color.Black)
  .height('10%')
  .width('100%')
  .justifyContent(FlexAlign.SpaceBetween)


   Column() {
      Text('Image拖拽')
        .fontSize('30dp')
      Flex({ direction: FlexDirection.Row, alignItems: ItemAlign.Center, justifyContent: FlexAlign.SpaceAround }) {
        Image($r('app.media.flower'))
          .width(100)
          .height(100)
          .border({ width: 1 })
          .visibility(this.AVisible)
          .draggable(true)
          .onDragEnd((event: DragEvent) => {
            let ret = event.getResult();
            if(ret == 0) {
              console.log("enter ret == 0")
              this.AVisible = Visibility.Hidden;
            } else {
              console.log("enter ret != 0")
              this.AVisible = Visibility.Visible;
            }
          })
      }
      .margin({ bottom: 20 })
      Row() {
        Column(){
          Text('可释放区域')
            .fontSize('15dp')
            .height('10%')
          List(){
            ForEach(this.BblockArr, (item:string, index) => {
              ListItem() {
                Image(item)
                  .width(100)
                  .height(100)
                  .border({width: 1})
              }
              .margin({ left: 30 , top : 30})
            }, (item:string) => item)
          }
          .border({width: 1})
          .height('90%')
          .width('100%')
          .allowDrop([uniformTypeDescriptor.UniformDataType.IMAGE])
          .onDrop((event?: DragEvent, extraParams?: string) => {
            console.log("enter onDrop")
            let dragData:UnifiedData = (event as DragEvent).getData() as UnifiedData;
            if(dragData != undefined) {
              let arr:Array<unifiedDataChannel.UnifiedRecord> = dragData.getRecords();
              if(arr.length > 0) {
                let image = arr[0] as unifiedDataChannel.Image;
                this.uri = image.imageUri;
                this.BblockArr.splice(JSON.parse(extraParams as string).insertIndex, 0, this.uri);
              } else {
                console.log(`dragData arr is null`)
              }
            } else {
              console.log(`dragData  is undefined`)
            }
            console.log("ondrop udmf data");
            this.dragSuccess = true
          })
        }
        .height("50%")
        .width("45%")
        .border({ width: 1 })
        .margin({ left: 12 })
      }
    }.height('80%')
  .width('100%')
  .backgroundColor(Color.White)

  Row() {
    this.PassBtn($r('app.string.btn_fullscreen'), true);
    Button() {
      Image($r('app.media.ic_public_help'))
        .width('20vp')
        .height('20vp')
    }
    .width('30%')
    .height('30vp')
    .backgroundColor(Color.Grey)
    .onClick(() => {
      AlertDialog.show(
        {
          title: '操作提示',
          message: this.StepTips,
          confirm: {
            value: 'OK',
            action: () => {
            }
          }
        }
      )
    })

    this.FailBtn($r('app.string.btn_fullscreen'), true);
  }
  .height('10%')
  .width('100%')
  .justifyContent(FlexAlign.SpaceEvenly)
  .backgroundColor(Color.Black)

}.height('100%').width('100%')
.backgroundColor('#F1F3F5')
}
}