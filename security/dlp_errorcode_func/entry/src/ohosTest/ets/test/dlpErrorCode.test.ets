/*
 * Copyright (C) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import { describe, beforeAll, beforeEach, afterEach, afterAll, it, expect, TestType, Size, Level } from '@ohos/hypium';
import dlpPermission from '@ohos.dlpPermission';

export default function dlpErrorCodeTest() {
  describe('dlpErrorCodeTest', () => {
    // Defines a test suite. Two parameters are supported: test suite name and test suite function.
    beforeAll(() => {
      // Presets an action, which is performed only once before all test cases of the test suite start.
      // This API supports only one parameter: preset action function.
    })
    beforeEach(() => {
      // Presets an action, which is performed before each unit test case starts.
      // The number of execution times is the same as the number of test cases defined by **it**.
      // This API supports only one parameter: preset action function.
    })
    afterEach(() => {
      // Presets a clear action, which is performed after each unit test case ends.
      // The number of execution times is the same as the number of test cases defined by **it**.
      // This API supports only one parameter: clear action function.
    })
    afterAll(() => {
      // Presets a clear action, which is performed after all test cases of the test suite end.
      // This API supports only one parameter: clear action function.
    })

    /**
     * @tc.number SUB_Security_DataSecurity_DLP_setSandboxAppConfig_0100
     * @tc.name test setSandboxAppConfig
     * @tc.desc 普通应用调用setSandboxAppConfig接口，不传入参数，返回19100001
     * @tc.size MediumTest
     * @tc.level Level3
     * @tc.type Function
     */
    it('SUB_Security_DataSecurity_DLP_setSandboxAppConfig_0100', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL3, async (done: Function) => {
      try {
        await dlpPermission.setSandboxAppConfig('');
        console.info(`SUB_Security_DataSecurity_DLP_setSandboxAppConfig_0100 setSandboxAppConfig SUCCESS`);
        expect(null).assertFail();
      } catch (err) {
        console.error(`SUB_Security_DataSecurity_DLP_setSandboxAppConfig_0100 failed to setSandboxAppConfig code is : ${err.code} `)
        expect(err.code).assertEqual(19100001);
      }
      done();
    });
  })
}