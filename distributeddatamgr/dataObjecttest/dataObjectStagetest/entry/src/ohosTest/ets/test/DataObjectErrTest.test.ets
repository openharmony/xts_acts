/*
 * Copyright (C) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { describe, beforeAll, beforeEach, afterEach, afterAll, it, expect, Level, TestType, Size } from '@ohos/hypium';
import { BusinessError, Device, deviceInfo } from '@kit.BasicServicesKit';
import { abilityAccessCtrl, common, PermissionRequestResult } from '@kit.AbilityKit';
import { commonType, distributedDataObject } from '@kit.ArkData';
import { Driver, ON } from '@kit.TestKit';

let TAG = 'ttt';
let atManager: abilityAccessCtrl.AtManager = abilityAccessCtrl.createAtManager();
let context: common.UIAbilityContext | undefined;

let getPermission = async () => {
  console.info('getPermission is start');
  let context:common.UIAbilityContext | undefined = AppStorage.get('context') as common.UIAbilityContext;
  atManager.requestPermissionsFromUser(context, ['ohos.permission.DISTRIBUTED_DATASYNC'], (err:BusinessError, data:PermissionRequestResult) => {
    console.info('requestPermissionsFromUser success data is' + JSON.stringify(data));
    console.info('requestPermissionsFromUser failed err is' + JSON.stringify(err));
  })
}

let sleep = (ms:number) => {
  return new Promise<ESObject>(resolve => setTimeout(resolve, ms));
}

let drivenFn = async () => {
  try {
    let driver: Driver = Driver.create();
    console.info('come in driveFn');
    console.info('driver is ${JSON.stringify(driver)}');
    await sleep(1000);
    let button = await driver.findComponent(ON.text('始终允许'));
    if (button) {
      console.info('button is $ {JSON.stringify(button)}');
      await sleep(1000);
      await button.click();
      await  sleep(1000);
    } else {
      let button1 = await driver.findComponent(ON.text('允许'));
      console.info('button is $ {JSON.stringify(button)}');
      await sleep(1000);
      await button1.click();
      await  sleep(1000);
    }
  } catch (err) {
    console.info('err is' + err);
    return
  }
}

class Note {
  title: string | undefined
  text: string | undefined
  attachment: commonType.Asset | undefined

  constructor(title: string | undefined, text: string | undefined, attachment: commonType.Asset | undefined) {
    this.title = title;
    this.text = text;
    this.attachment = attachment;
  }
}

let attachment: commonType.Asset = {
  name: 'test_img.jpg',
  uri: 'file://com.example.myapplication/data/storage/el2/distributedfiles/dir/test_img.jpg',
  path: '/dir/test_img.jpg',
  createTime: '2024-01-02 10:00:00',
  modifyTime: '2024-01-02 10:00:00',
  size: '5',
  status: commonType.AssetStatus.ASSET_NORMAL
}
let note: Note = new Note('test', 'test', attachment);

const bindInfo: distributedDataObject.BindInfo = {
  storeName: 'notepad',
  tableName: 'note_t',
  primaryKey: {
    'uuid': '00000000-0000-0000-0000-000000000000'
  },
  field: 'attachment',
  assetName: attachment.name as string
}

let changeCallback1: distributedDataObject.DataObserver = (sessionId: string, fields: Array<string>) => {
}

let changeCallback2: distributedDataObject.DataObserver = (sessionId: string, fields: Array<string>) => {
}

let statusCallback1: distributedDataObject.StatusObserver = (sessionId: string, networkId: string, status: string) => {
}

let statusCallback2: distributedDataObject.StatusObserver = (sessionId: string, networkId: string, status: string) => {
}

export default function DataObjectErrTest() {
  describe('DataObjectErrTest', () => {
    let currentDeviceIsTv = false;
    beforeAll(async (done:Function) => {
      await getPermission();
      await sleep(1000);
      await drivenFn();
      await sleep(1000);
      context = AppStorage.get('context') as common.UIAbilityContext;
      let deviceTypeInfo = deviceInfo.deviceType;
      currentDeviceIsTv = deviceTypeInfo ==='tv' ? true : false;
      console.info(TAG + 'the value of the deviceType is:' + deviceInfo.deviceType);
      done()
    })
    beforeEach(() => {
    })
    afterEach(() => {
    })
    afterAll(() => {
    })

    /**
     * @tc.number SUB_DataObject_on_Change_ErrTest_0100
     * @tc.name DataObjectErrTest01
     * @tc.desc Test DataObject on Change
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 2
     */
    it('SUB_DataObject_on_Change_ErrTest_0100', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, () => {
      console.info(TAG + '************ SUB_DataObject_on_Change_ErrTest_0100 start ************')
      let g_object: distributedDataObject.DataObject = distributedDataObject.create(context, note);
      try {
        g_object.on('change', null);
        expect().assertFail();
      } catch (err) {
        console.error(TAG + 'Failed to on.Code:' + err.code + ',message:' + err.message);
        expect(err.code).assertEqual('401')
      }
      console.info(TAG + '************ SUB_DataObject_on_Change_ErrTest_0100 end ************')
    })

    /**
     * @tc.number SUB_DataObject_off_Change_ErrTest_0100
     * @tc.name DataObjectErrTest02
     * @tc.desc Test DataObject off Change
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 2
     */
    it('SUB_DataObject_off_Change_ErrTest_0100', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, () => {
      console.info(TAG + '************ SUB_DataObject_off_Change_ErrTest_0100 start ************')
      let g_object: distributedDataObject.DataObject = distributedDataObject.create(context, note);
      try {
        g_object.off('change', null);
        expect().assertFail();
      } catch (err) {
        console.error(TAG + 'Failed to on.Code:' + err.code + ',message:' + err.message);
        expect(err.code).assertEqual('401')
      }
      console.info(TAG + '************ SUB_DataObject_off_Change_ErrTest_0100 end ************')
    })

    /**
     * @tc.number SUB_DistributedData_DataObject_JsApiErrTest_0300
     * @tc.name DataObjectErrTest03
     * @tc.desc Test DataObject offStatus
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 2
     */
    it('DataObjectErrTest03', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, () => {
      console.info(TAG + '************ DataObjectErrTest03 start ************')
      let g_object: distributedDataObject.DataObject = distributedDataObject.create(context, note);
      try {
        g_object.off("status", null)
        expect().assertFail();
      } catch (err) {
        console.error(TAG + 'Failed to on.Code:' + err.code + ',message:' + err.message);
        expect(err.code).assertEqual('401')
      }
      console.info(TAG + '************ DataObjectErrTest03 end ************')
    })

    /**
     * @tc.number SUB_DistributedData_DataObject_JsApiErrTest_0400
     * @tc.name DataObjectErrTest04
     * @tc.desc Test DataObject save
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 2
     */
    it('DataObjectErrTest04', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, () => {
      console.info(TAG + '************ DataObjectErrTest04 start ************')
      let g_object: distributedDataObject.DataObject = distributedDataObject.create(context, note);
      g_object.setSessionId("123456789");
      try {
        g_object.save(null, (err: BusinessError, result:distributedDataObject.SaveSuccessResponse) => {});
        expect().assertFail();
      } catch (err) {
        console.error(TAG + 'save fail: error code = ' + err.code)
        expect(err.code).assertEqual('401')
      }
      console.info(TAG + '************ DataObjectErrTest04 end ************')
    })

    /**
     * @tc.number SUB_DistributedData_DataObject_JsApiErrTest_0500
     * @tc.name DataObjectErrTest05
     * @tc.desc Test DataObject save
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 2
     */
    it('DataObjectErrTest05', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, () => {
      console.info(TAG + '************ DataObjectErrTest05 start ************')
      let g_object: distributedDataObject.DataObject = distributedDataObject.create(context, note);
      g_object.setSessionId("12345678");
      try {
        g_object.save("");
        expect().assertFail();
      } catch (err) {
        console.error(TAG + 'save fail: error code = ' + err.code)
        expect(err.code).assertEqual('401')
      }

      console.info(TAG + '************ DataObjectErrTest05 end ************')
    })

    /**
     * @tc.number SUB_DistributedData_DataObject_JsApiErrTest_0600
     * @tc.name DataObjectErrTest06
     * @tc.desc Test DataObject revokeSave
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 2
     */
    it('DataObjectErrTest06', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, () => {
      console.info(TAG + '************ DataObjectErrTest06 start ************')
      let g_object: distributedDataObject.DataObject = distributedDataObject.create(context, note);
      g_object.setSessionId("123456");
      try {
        g_object.revokeSave(null);
        expect().assertFail();
      } catch (err) {
        console.error(TAG + 'revokeSave fail: error code = ' + err.code)
        expect(err.code).assertEqual('401')
      }
      console.info(TAG + '************ DataObjectErrTest06 end ************')
    })

    /**
     * @tc.number SUB_DistributedData_DataObject_JsApiErrTest_0700
     * @tc.name DataObjectErrTest07
     * @tc.desc Test DataObject bindAssetStore
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 2
     */
    it('DataObjectErrTest07', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, (done:Function) => {
      console.info(TAG + '************ DataObjectErrTest07 start ************')
      let g_object: distributedDataObject.DataObject = distributedDataObject.create(context, note);
      g_object.setSessionId("1234567");

      try {
        g_object.bindAssetStore('attachment', bindInfo, (err: BusinessError) => {
          if (currentDeviceIsTv) {
            console.info(TAG + 'bindAssetStore fail.Code: ' + err.code + ',message: ' + err.message);
            expect(err.code).assertEqual('801');
          } else if (!currentDeviceIsTv && err) {
            expect().assertFail();
          }
          expect(err).assertEqual(undefined);
          console.info(TAG + 'bindAssetStore success.');
          console.info(TAG + '************ DataObjectErrTest07 end ************')
          done();
        });
      } catch (err) {
        console.error(TAG + 'Code: ' + err.code + ',message: ' + err.message);
        expect().assertFail();
      }
    })

    /**
     * @tc.number SUB_DistributedData_DataObject_JsApiErrTest_0800
     * @tc.name DataObjectErrTest08
     * @tc.desc Test DataObject bindAssetStore
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 2
     */
    it('DataObjectErrTest08', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, () => {
      console.info(TAG + '************ DataObjectErrTest08 start ************')
      let g_object: distributedDataObject.DataObject = distributedDataObject.create(context, note);
      g_object.setSessionId("12345");

      g_object.bindAssetStore("attachment", bindInfo).then(() => {
        console.info(TAG + 'bindAssetStore success.');
      }).catch((err: BusinessError) => {
        if (currentDeviceIsTv && err) {
          console.info(TAG + 'bindAssetStore fail. Code: ' + err.code + ',message:' + err.message);
          expect(err.code).assertEqual('801');
        } else if (!currentDeviceIsTv && err) {
          expect().assertFail();
        }
      });
      console.info(TAG + '************ DataObjectErrTest08 end ************')
    })

    /**
     * @tc.number SUB_DistributedData_DataObject_JsApiErrTest_0900
     * @tc.name DataObjectErrTest09
     * @tc.desc Test DataObject setAsset
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 2
     */
    it('DataObjectErrTest09', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, () => {
      console.info(TAG + '************ DataObjectErrTest09 start ************')
      let g_object: distributedDataObject.DataObject = distributedDataObject.create(context, note);
      let uri = 'file:1.text';
      g_object.setSessionId(distributedDataObject.genSessionId());
      try {
        g_object.setAsset('file', uri);
        expect().assertFail();
      } catch (err) {
        console.error(TAG + 'Failed to setAsset. code: ' + err.code + '.message:' + err.message);
        expect(err.code).assertEqual(15400003);
      }

      console.info(TAG + '************ DataObjectErrTest09 end ************')
    })

    /**
     * @tc.number SUB_DistributedData_DataObject_JsApiErrTest_1000
     * @tc.name DataObjectErrTest10
     * @tc.desc Test DataObject setAssets
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 2
     */
    it('DataObjectErrTest10', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, () => {
      console.info(TAG + '************ DataObjectErrTest10 start ************')
      let g_object: distributedDataObject.DataObject = distributedDataObject.create(context, note);
      let uris: string[] = ['file:1.text'];
      g_object.setSessionId(distributedDataObject.genSessionId());
      try {
        g_object.setAssets('file', uris);
        expect().assertFail();
      } catch (err) {
        console.error(TAG + 'Failed to setAssets. code: ' + err.code + '.message:' + err.message);
        expect(err.code).assertEqual(15400003);
      }
      console.info(TAG + '************ DataObjectErrTest10 end ************')
    })

    /**
     * @tc.number SUB_DistributedData_DataObject_JsApiErrTest_1100
     * @tc.name DataObjectErrTest11
     * @tc.desc Test DataObject on change20
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 2
     */
    it('DataObjectErrTest11', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, () => {
      console.info(TAG + '************ DataObjectErrTest11 start ************')
      let g_object: distributedDataObject.DataObject = distributedDataObject.create(context, note);
      try {
        g_object.on("change", changeCallback1);
        console.info(TAG + 'on20 success.');
      } catch (err) {
        console.error(TAG + 'Failed to on change20. code: ' + err.code + '.message:' + err.message);
        expect().assertFail();
      }
      console.info(TAG + '************ DataObjectErrTest11 end ************')
    })

    /**
     * @tc.number SUB_DistributedData_DataObject_JsApiErrTest_1200
     * @tc.name DataObjectErrTest12
     * @tc.desc Test DataObject on change20
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 2
     */
    it('DataObjectErrTest12', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, () => {
      console.info(TAG + '************ DataObjectErrTest12 start ************')
      let g_object: distributedDataObject.DataObject = distributedDataObject.create(context, note);
      try {
        g_object.on(undefined, changeCallback1);
        expect().assertFail();
      } catch (err) {
        console.error(TAG + 'Failed to on change20. code: ' + err.code + '.message:' + err.message);
        expect(err.code).assertEqual('401')
      }
      console.info(TAG + '************ DataObjectErrTest12 end ************')
    })

    /**
     * @tc.number SUB_DistributedData_DataObject_JsApiErrTest_1300
     * @tc.name DataObjectErrTest13
     * @tc.desc Test DataObject on change20
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 2
     */
    it('DataObjectErrTest13', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, () => {
      console.info(TAG + '************ DataObjectErrTest13 start ************')
      let g_object: distributedDataObject.DataObject = distributedDataObject.create(context, note);
      try {
        g_object.on(undefined, undefined);
        expect().assertFail();
      } catch (err) {
        console.error(TAG + 'Failed to on change20. code: ' + err.code + '.message:' + err.message);
        expect(err.code).assertEqual('401')
      }
      console.info(TAG + '************ DataObjectErrTest13 end ************')
    })

    /**
     * @tc.number SUB_DistributedData_DataObject_JsApiErrTest_1400
     * @tc.name DataObjectErrTest14
     * @tc.desc Test DataObject on change20
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 2
     */
    it('DataObjectErrTest14', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, () => {
      console.info(TAG + '************ DataObjectErrTest14 start ************')
      let g_object: distributedDataObject.DataObject = distributedDataObject.create(context, note);
      try {
        g_object.on('change', changeCallback1);
        g_object.on('change', changeCallback1);
        console.info(TAG + 'on change 20 success.');
      } catch (err) {
        console.error(TAG + 'Failed to on change20. code: ' + err.code + '.message:' + err.message);
        expect().assertFail();
      }
      console.info(TAG + '************ DataObjectErrTest14 end ************')
    })

    /**
     * @tc.number SUB_DistributedData_DataObject_JsApiErrTest_1500
     * @tc.name DataObjectErrTest15
     * @tc.desc Test DataObject on change20
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 2
     */
    it('DataObjectErrTest15', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, () => {
      console.info(TAG + '************ DataObjectErrTest15 start ************')
      let g_object: distributedDataObject.DataObject = distributedDataObject.create(context, note);
      try {
        g_object.on('change', changeCallback1);
        g_object.on('change', changeCallback2);
        console.info(TAG + 'on change 20 success.');
      } catch (err) {
        console.error(TAG + 'Failed to on change20. code: ' + err.code + '.message:' + err.message);
        expect(err.code).assertFail();
      }
      console.info(TAG + '************ DataObjectErrTest15 end ************')
    })

    /**
     * @tc.number SUB_DistributedData_DataObject_JsApiErrTest_1600
     * @tc.name DataObjectErrTest16
     * @tc.desc Test DataObject on status20
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 2
     */
    it('DataObjectErrTest16', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, () => {
      console.info(TAG + '************ DataObjectErrTest16 start ************')
      let g_object: distributedDataObject.DataObject = distributedDataObject.create(context, note);
      try {
        g_object.on('status', statusCallback1);
        console.info(TAG + 'on status 20 success.');
      } catch (err) {
        console.error(TAG + 'Failed to on status20. code: ' + err.code + '.message:' + err.message);
        expect(err.code).assertFail();
      }
      console.info(TAG + '************ DataObjectErrTest16 end ************')
    })

    /**
     * @tc.number SUB_DistributedData_DataObject_JsApiErrTest_1700
     * @tc.name DataObjectErrTest17
     * @tc.desc Test DataObject on status20
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 2
     */
    it('DataObjectErrTest17', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, () => {
      console.info(TAG + '************ DataObjectErrTest17 start ************')
      let g_object: distributedDataObject.DataObject = distributedDataObject.create(context, note);
      try {
        g_object.on('status', undefined);
        expect().assertFail();
      } catch (err) {
        console.error(TAG + 'Failed to on status20. code: ' + err.code + '.message:' + err.message);
        expect(err.code).assertEqual('401');
      }
      console.info(TAG + '************ DataObjectErrTest17 end ************')
    })

    /**
     * @tc.number SUB_DistributedData_DataObject_JsApiErrTest_1800
     * @tc.name DataObjectErrTest18
     * @tc.desc Test DataObject on status20
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 2
     */
    it('DataObjectErrTest18', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, () => {
      console.info(TAG + '************ DataObjectErrTest18 start ************')
      let g_object: distributedDataObject.DataObject = distributedDataObject.create(context, note);
      try {
        g_object.on(undefined, statusCallback1);
        expect().assertFail();
      } catch (err) {
        console.error(TAG + 'Failed to on status20. code: ' + err.code + '.message:' + err.message);
        expect(err.code).assertEqual('401');
      }
      console.info(TAG + '************ DataObjectErrTest18 end ************')
    })

    /**
     * @tc.number SUB_DistributedData_DataObject_JsApiErrTest_1900
     * @tc.name DataObjectErrTest19
     * @tc.desc Test DataObject on status20
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 2
     */
    it('DataObjectErrTest19', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, () => {
      console.info(TAG + '************ DataObjectErrTest19 start ************')
      let g_object: distributedDataObject.DataObject = distributedDataObject.create(context, note);
      try {
        g_object.on('status', statusCallback1);
        g_object.on('status', statusCallback1);
        console.info(TAG + 'on status 20 success.');
      } catch (err) {
        console.error(TAG + 'Failed to on status20. code: ' + err.code + '.message:' + err.message);
        expect().assertFail();
      }
      console.info(TAG + '************ DataObjectErrTest19 end ************')
    })

    /**
     * @tc.number SUB_DistributedData_DataObject_JsApiErrTest_2000
     * @tc.name DataObjectErrTest20
     * @tc.desc Test DataObject on status20
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 2
     */
    it('DataObjectErrTest20', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, () => {
      console.info(TAG + '************ DataObjectErrTest20 start ************')
      let g_object: distributedDataObject.DataObject = distributedDataObject.create(context, note);
      try {
        g_object.on('status', statusCallback1);
        g_object.on('status', statusCallback2);
        console.info(TAG + 'on status 20 success.');
      } catch (err) {
        console.error(TAG + 'Failed to on status20. code: ' + err.code + '.message:' + err.message);
        expect().assertFail();
      }
      console.info(TAG + '************ DataObjectErrTest20 end ************')
    })

    /**
     * @tc.number SUB_DistributedData_DataObject_JsApiErrTest_2100
     * @tc.name DataObjectErrTest21
     * @tc.desc Test DataObject off change20
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 2
     */
    it('DataObjectErrTest21', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, () => {
      console.info(TAG + '************ DataObjectErrTest21 start ************')
      let g_object: distributedDataObject.DataObject = distributedDataObject.create(context, note);
      try {
        g_object.on('change', changeCallback1);
        g_object.off('change', changeCallback1);
        console.info(TAG + 'off change20 success.');
      } catch (err) {
        console.error(TAG + 'Failed to off change 20. code: ' + err.code + '.message:' + err.message);
        expect().assertFail();
      }
      console.info(TAG + '************ DataObjectErrTest21 end ************')
    })

    /**
     * @tc.number SUB_DistributedData_DataObject_JsApiErrTest_2200
     * @tc.name DataObjectErrTest22
     * @tc.desc Test DataObject off change20
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 2
     */
    it('DataObjectErrTest22', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, () => {
      console.info(TAG + '************ DataObjectErrTest22 start ************')
      let g_object: distributedDataObject.DataObject = distributedDataObject.create(context, note);
      try {
        g_object.on('change', changeCallback1);
        g_object.on('change', changeCallback2);
        g_object.off('change');
        console.info(TAG + 'off change20 success.');
      } catch (err) {
        console.error(TAG + 'Failed to off change 20. code: ' + err.code + '.message:' + err.message);
        expect().assertFail();
      }
      console.info(TAG + '************ DataObjectErrTest22 end ************')
    })

    /**
     * @tc.number SUB_DistributedData_DataObject_JsApiErrTest_2300
     * @tc.name DataObjectErrTest23
     * @tc.desc Test DataObject off change20
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 2
     */
    it('DataObjectErrTest23', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, () => {
      console.info(TAG + '************ DataObjectErrTest23 start ************')
      let g_object: distributedDataObject.DataObject = distributedDataObject.create(context, note);
      try {
        g_object.on('change', changeCallback1);
        g_object.off('change', undefined);
        console.info(TAG + 'off change20 success.');
      } catch (err) {
        console.error(TAG + 'Failed to off change 20. code: ' + err.code + '.message:' + err.message);
        expect().assertFail();
      }
      console.info(TAG + '************ DataObjectErrTest23 end ************')
    })

    /**
     * @tc.number SUB_DistributedData_DataObject_JsApiErrTest_2400
     * @tc.name DataObjectErrTest24
     * @tc.desc Test DataObject off change20
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 2
     */
    it('DataObjectErrTest24', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, () => {
      console.info(TAG + '************ DataObjectErrTest24 start ************')
      let g_object: distributedDataObject.DataObject = distributedDataObject.create(context, note);
      try {
        g_object.on('change', changeCallback1);
        g_object.off(undefined, changeCallback1);
        expect().assertFail();
      } catch (err) {
        console.error(TAG + 'Failed to off change 20. code: ' + err.code + '.message:' + err.message);
        expect(err.code).assertEqual('401');
      }
      console.info(TAG + '************ DataObjectErrTest24 end ************')
    })

    /**
     * @tc.number SUB_DistributedData_DataObject_JsApiErrTest_2500
     * @tc.name DataObjectErrTest25
     * @tc.desc Test DataObject off change20
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 2
     */
    it('DataObjectErrTest25', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, () => {
      console.info(TAG + '************ DataObjectErrTest25 start ************')
      let g_object: distributedDataObject.DataObject = distributedDataObject.create(context, note);
      try {
        g_object.on('change', changeCallback1);
        g_object.off(undefined);
        expect().assertFail();
      } catch (err) {
        console.error(TAG + 'Failed to off change 20. code: ' + err.code + '.message:' + err.message);
        expect(err.code).assertEqual('401');
      }
      console.info(TAG + '************ DataObjectErrTest25 end ************')
    })

    /**
     * @tc.number SUB_DistributedData_DataObject_JsApiErrTest_2600
     * @tc.name DataObjectErrTest26
     * @tc.desc Test DataObject off change20
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 2
     */
    it('DataObjectErrTest26', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, () => {
      console.info(TAG + '************ DataObjectErrTest26 start ************')
      let g_object: distributedDataObject.DataObject = distributedDataObject.create(context, note);
      try {
        g_object.on('change', changeCallback1);
        g_object.off(undefined, undefined);
        expect().assertFail();
      } catch (err) {
        console.error(TAG + 'Failed to off change 20. code: ' + err.code + '.message:' + err.message);
        expect(err.code).assertEqual('401');
      }
      console.info(TAG + '************ DataObjectErrTest26 end ************')
    })

    /**
     * @tc.number SUB_DistributedData_DataObject_JsApiErrTest_2700
     * @tc.name DataObjectErrTest27
     * @tc.desc Test DataObject off_status20
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 2
     */
    it('DataObjectErrTest27', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, () => {
      console.info(TAG + '************ DataObjectErrTest27 start ************')
      let g_object: distributedDataObject.DataObject = distributedDataObject.create(context, note);
      try {
        g_object.on('status', statusCallback1);
        g_object.off('status', statusCallback1);
        console.info(TAG + 'off status20 success.');
      } catch (err) {
        console.error(TAG + 'Failed to off status20. code: ' + err.code + '.message:' + err.message);
        expect().assertFail();
      }
      console.info(TAG + '************ DataObjectErrTest27 end ************')
    })

    /**
     * @tc.number SUB_DistributedData_DataObject_JsApiErrTest_2800
     * @tc.name DataObjectErrTest28
     * @tc.desc Test DataObject off_status20
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 2
     */
    it('DataObjectErrTest28', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, () => {
      console.info(TAG + '************ DataObjectErrTest28 start ************')
      let g_object: distributedDataObject.DataObject = distributedDataObject.create(context, note);
      try {
        g_object.on('status', statusCallback1);
        g_object.on('status', statusCallback2);
        g_object.off('status');
        console.info(TAG + 'off status20 success.');
      } catch (err) {
        console.error(TAG + 'Failed to off status20. code: ' + err.code + '.message:' + err.message);
        expect().assertFail();
      }
      console.info(TAG + '************ DataObjectErrTest28 end ************')
    })

    /**
     * @tc.number SUB_DistributedData_DataObject_JsApiErrTest_2900
     * @tc.name DataObjectErrTest29
     * @tc.desc Test DataObject off_status20
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 2
     */
    it('DataObjectErrTest29', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, () => {
      console.info(TAG + '************ DataObjectErrTest29 start ************')
      let g_object: distributedDataObject.DataObject = distributedDataObject.create(context, note);
      try {
        g_object.on('status', statusCallback1);
        g_object.off('status', undefined);
        console.info(TAG + 'off status20 success.');
      } catch (err) {
        console.error(TAG + 'Failed to off status20. code: ' + err.code + '.message:' + err.message);
        expect().assertFail();
      }
      console.info(TAG + '************ DataObjectErrTest29 end ************')
    })

    /**
     * @tc.number SUB_DistributedData_DataObject_JsApiErrTest_3000
     * @tc.name DataObjectErrTest30
     * @tc.desc Test DataObject off_status20
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 2
     */
    it('DataObjectErrTest30', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, () => {
      console.info(TAG + '************ DataObjectErrTest30 start ************')
      let g_object: distributedDataObject.DataObject = distributedDataObject.create(context, note);
      try {
        g_object.on('status', statusCallback1);
        g_object.off(undefined, statusCallback1);
        expect().assertFail();
      } catch (err) {
        console.error(TAG + 'Failed to off status20. code: ' + err.code + '.message:' + err.message);
        expect(err.code).assertEqual('401');
      }
      console.info(TAG + '************ DataObjectErrTest30 end ************')
    })

    /**
     * @tc.number SUB_DistributedData_DataObject_JsApiErrTest_3100
     * @tc.name DataObjectErrTest31
     * @tc.desc Test DataObject setAsset
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 2
     */
    it('DataObjectErrTest31', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, () => {
      console.info(TAG + '************ DataObjectErrTest31 start ************')
      let g_object: distributedDataObject.DataObject = distributedDataObject.create(context, note);
      try {
        let uri = 'file:1.txt';
        g_object.setAsset('attachment', uri);
        console.info(TAG + 'setAsset success.');
      } catch (err) {
        console.error(TAG + 'Failed to setAsset. code: ' + err.code + '.message:' + err.message);
        expect().assertFail();
      }
      console.info(TAG + '************ DataObjectErrTest31 end ************')
    })

    /**
     * @tc.number SUB_DistributedData_DataObject_JsApiErrTest_3200
     * @tc.name DataObjectErrTest32
     * @tc.desc Test DataObject setAsset
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 2
     */
    it('DataObjectErrTest32', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, () => {
      console.info(TAG + '************ DataObjectErrTest32 start ************')
      let g_object: distributedDataObject.DataObject = distributedDataObject.create(context, note);
      try {
        let uri = '';
        g_object.setAsset('attachment', uri);
        expect().assertFail();
      } catch (err) {
        console.error(TAG + 'Failed to setAsset. code: ' + err.code + '.message:' + err.message);
        expect(err.code).assertEqual(15400002);
      }
      console.info(TAG + '************ DataObjectErrTest32 end ************')
    })

    /**
     * @tc.number SUB_DistributedData_DataObject_JsApiErrTest_3300
     * @tc.name DataObjectErrTest33
     * @tc.desc Test DataObject setAsset
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 2
     */
    it('DataObjectErrTest33', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, () => {
      console.info(TAG + '************ DataObjectErrTest33 start ************')
      let g_object: distributedDataObject.DataObject = distributedDataObject.create(context, note);
      try {
        let uri = undefined;
        g_object.setAsset('attachment', uri);
        expect().assertFail();
      } catch (err) {
        console.error(TAG + 'Failed to setAsset. code: ' + err.code + '.message:' + err.message);
        expect(err.code).assertEqual(15400002);
      }
      console.info(TAG + '************ DataObjectErrTest33 end ************')
    })

    /**
     * @tc.number SUB_DistributedData_DataObject_JsApiErrTest_3400
     * @tc.name DataObjectErrTest34
     * @tc.desc Test DataObject setAsset
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 2
     */
    it('DataObjectErrTest34', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, () => {
      console.info(TAG + '************ DataObjectErrTest34 start ************')
      let g_object: distributedDataObject.DataObject = distributedDataObject.create(context, note);
      try {
        let uri = 'file:1.txt';
        g_object.setAsset('', uri);
        expect().assertFail();
      } catch (err) {
        console.error(TAG + 'Failed to setAsset. code: ' + err.code + '.message:' + err.message);
        expect(err.code).assertEqual(15400002);
      }
      console.info(TAG + '************ DataObjectErrTest34 end ************')
    })

/**
     * @tc.number SUB_DistributedData_DataObject_JsApiErrTest_3500
     * @tc.name DataObjectErrTest35
     * @tc.desc Test DataObject setAsset
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 2
     */
    it('DataObjectErrTest35', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, () => {
      console.info(TAG + '************ DataObjectErrTest35 start ************')
      let g_object: distributedDataObject.DataObject = distributedDataObject.create(context, note);
      try {
        let uri = 'file:1.txt';
        g_object.setAsset('', uri);
        expect().assertFail();
      } catch (err) {
        console.error(TAG + 'Failed to setAsset. code: ' + err.code + '.message:' + err.message);
        expect(err.code).assertEqual(15400002);
      }
      console.info(TAG + '************ DataObjectErrTest35 end ************')
    })

    /**
     * @tc.number SUB_DistributedData_DataObject_JsApiErrTest_3600
     * @tc.name DataObjectErrTest36
     * @tc.desc Test DataObject setAsset
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 2
     */
    it('DataObjectErrTest36', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, () => {
      console.info(TAG + '************ DataObjectErrTest36 start ************')
      let g_object: distributedDataObject.DataObject = distributedDataObject.create(context, note);
      try {
        let uri = '';
        g_object.setAsset('', uri);
        expect().assertFail();
      } catch (err) {
        console.error(TAG + 'Failed to setAsset. code: ' + err.code + '.message:' + err.message);
        expect(err.code).assertEqual(15400002);
      }
      console.info(TAG + '************ DataObjectErrTest36 end ************')
    })

    /**
     * @tc.number SUB_DistributedData_DataObject_JsApiErrTest_3700
     * @tc.name DataObjectErrTest37
     * @tc.desc Test DataObject setAsset
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 2
     */
    it('DataObjectErrTest37', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, () => {
      console.info(TAG + '************ DataObjectErrTest37 start ************')
      let g_object: distributedDataObject.DataObject = distributedDataObject.create(context, note);
      try {
        let uri = 'file:1.txt';
        g_object.setAsset(undefined, uri);
        expect().assertFail();
      } catch (err) {
        console.error(TAG + 'Failed to setAsset. code: ' + err.code + '.message:' + err.message);
        expect(err.code).assertEqual(15400002);
      }
      console.info(TAG + '************ DataObjectErrTest37 end ************')
    })

    /**
     * @tc.number SUB_DistributedData_DataObject_JsApiErrTest_3800
     * @tc.name DataObjectErrTest38
     * @tc.desc Test DataObject setAsset
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 2
     */
    it('DataObjectErrTest38', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, () => {
      console.info(TAG + '************ DataObjectErrTest38 start ************')
      let g_object: distributedDataObject.DataObject = distributedDataObject.create(context, note);
      try {
        let uri = 'file:1.txt';
        let uri2 = 'file:2.txt';
        g_object.setAsset('attachment', uri);
        g_object.setAsset('attachment', uri2);
        console.info(TAG + 'setAsset success.')
      } catch (err) {
        console.error(TAG + 'Failed to setAsset. code: ' + err.code + '.message:' + err.message);
        expect().assertFail();
      }
      console.info(TAG + '************ DataObjectErrTest38 end ************')
    })

    /**
     * @tc.number SUB_DistributedData_DataObject_JsApiErrTest_3900
     * @tc.name DataObjectErrTest39
     * @tc.desc Test DataObject setAssets
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 2
     */
    it('DataObjectErrTest39', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, () => {
      console.info(TAG + '************ DataObjectErrTest39 start ************')
      let g_object: distributedDataObject.DataObject = distributedDataObject.create(context, note);
      try {
        let uris = ['file:1.txt'];
        g_object.setAssets('attachment', uris);
        console.info(TAG + 'setAssets success.')
      } catch (err) {
        console.error(TAG + 'Failed to setAssets. code: ' + err.code + '.message:' + err.message);
        expect().assertFail();
      }
      console.info(TAG + '************ DataObjectErrTest39 end ************')
    })

    /**
     * @tc.number SUB_DistributedData_DataObject_JsApiErrTest_4000
     * @tc.name DataObjectErrTest40
     * @tc.desc Test DataObject setAssets
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 2
     */
    it('DataObjectErrTest40', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, () => {
      console.info(TAG + '************ DataObjectErrTest40 start ************')
      let g_object: distributedDataObject.DataObject = distributedDataObject.create(context, note);
      try {
        let uris: string[] = [];
        for (let index = 0; index < 50; index++) {
          let uri = `file${index + 1}:${index + 1}.txt`;
          uris.push(uri);
        }
        g_object.setAssets('attachment', uris);
        console.info(TAG + 'setAssets success.')
      } catch (err) {
        console.error(TAG + 'Failed to setAssets. code: ' + err.code + '.message:' + err.message);
        expect().assertFail();
      }
      console.info(TAG + '************ DataObjectErrTest40 end ************')
    })

    /**
     * @tc.number SUB_DistributedData_DataObject_JsApiErrTest_4100
     * @tc.name DataObjectErrTest41
     * @tc.desc Test DataObject setAssets
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 2
     */
    it('DataObjectErrTest41', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, () => {
      console.info(TAG + '************ DataObjectErrTest41 start ************')
      let g_object: distributedDataObject.DataObject = distributedDataObject.create(context, note);
      try {
        let uris: string[] = [];
        g_object.setAssets('attachment', uris);
        expect().assertFail();
      } catch (err) {
        console.error(TAG + 'Failed to setAssets. code: ' + err.code + '.message:' + err.message);
        expect(err.code).assertEqual(15400002);
      }
      console.info(TAG + '************ DataObjectErrTest41 end ************')
    })

    /**
     * @tc.number SUB_DistributedData_DataObject_JsApiErrTest_4200
     * @tc.name DataObjectErrTest42
     * @tc.desc Test DataObject setAssets
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 2
     */
    it('DataObjectErrTest42', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, () => {
      console.info(TAG + '************ DataObjectErrTest42 start ************')
      let g_object: distributedDataObject.DataObject = distributedDataObject.create(context, note);
      try {
        let uris: string[] = [];
        for (let index = 0; index < 51; index++) {
          let uri = `file${index + 1}:${index + 1}.txt`;
          uris.push(uri);
        }
        g_object.setAssets('attachment', uris);
        expect().assertFail();
      } catch (err) {
        console.error(TAG + 'Failed to setAssets. code: ' + err.code + '.message:' + err.message);
        expect(err.code).assertEqual(15400002);
      } 
      try {
        g_object.setAssets('attachment', ['file:1.txt'])
        console.info(TAG + 'setAssets success.')
      } catch (err) {
        console.error(TAG + 'Failed to setAssets. code: ' + err.code + '.message:' + err.message);
        expect().assertFail();
      }
      console.info(TAG + '************ DataObjectErrTest42 end ************')
    })

    /**
     * @tc.number SUB_DistributedData_DataObject_JsApiErrTest_4300
     * @tc.name DataObjectErrTest43
     * @tc.desc Test DataObject setAssets
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 2
     */
    it('DataObjectErrTest43', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, () => {
      console.info(TAG + '************ DataObjectErrTest43 start ************')
      let g_object: distributedDataObject.DataObject = distributedDataObject.create(context, note);
      try {
        let uris1 = ['file:1.txt'];
        let uris2 = ['file:2.txt'];
        g_object.setAssets('attachment', uris1);
        g_object.setAssets('attachment', uris2);
        console.info(TAG + 'setAssets success.')
      } catch (err) {
        console.error(TAG + 'Failed to setAssets. code: ' + err.code + '.message:' + err.message);
        expect().assertFail();
      } 
      console.info(TAG + '************ DataObjectErrTest43 end ************')
    })

    /**
     * @tc.number SUB_DistributedData_DataObject_JsApiErrTest_4400
     * @tc.name DataObjectErrTest44
     * @tc.desc Test DataObject setAssets
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 2
     */
    it('DataObjectErrTest44', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, () => {
      console.info(TAG + '************ DataObjectErrTest44 start ************')
      let g_object: distributedDataObject.DataObject = distributedDataObject.create(context, note);
      try {
        let uris = ['file:1.txt'];
        g_object.setAssets(undefined, uris);
        expect().assertFail()
      } catch (err) {
        console.error(TAG + 'Failed to setAssets. code: ' + err.code + '.message:' + err.message);
        expect(err.code).assertEqual(15400002);
      } 
      console.info(TAG + '************ DataObjectErrTest44 end ************')
    })

    /**
     * @tc.number SUB_DistributedData_DataObject_JsApiErrTest_4500
     * @tc.name DataObjectErrTest45
     * @tc.desc Test DataObject setAssets
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 2
     */
    it('DataObjectErrTest45', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, () => {
      console.info(TAG + '************ DataObjectErrTest45 start ************')
      let g_object: distributedDataObject.DataObject = distributedDataObject.create(context, note);
      try {
        let uris = undefined;
        g_object.setAssets(undefined, uris);
        expect().assertFail()
      } catch (err) {
        console.error(TAG + 'Failed to setAssets. code: ' + err.code + '.message:' + err.message);
        expect(err.code).assertEqual(15400002);
      } 
      console.info(TAG + '************ DataObjectErrTest45 end ************')
    })

    /**
     * @tc.number SUB_DistributedData_DataObject_JsApiErrTest_4600
     * @tc.name DataObjectErrTest46
     * @tc.desc Test DataObject setAssets
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 2
     */
    it('DataObjectErrTest46', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, () => {
      console.info(TAG + '************ DataObjectErrTest46 start ************')
      let g_object: distributedDataObject.DataObject = distributedDataObject.create(context, note);
      try {
        let uris = undefined;
        g_object.setAssets('attachment', uris);
        expect().assertFail()
      } catch (err) {
        console.error(TAG + 'Failed to setAssets. code: ' + err.code + '.message:' + err.message);
        expect(err.code).assertEqual(15400002);
      } 
      console.info(TAG + '************ DataObjectErrTest46 end ************')
    })

    /**
     * @tc.number SUB_DistributedData_DataObject_JsApiErrTest_4700
     * @tc.name DataObjectErrTest47
     * @tc.desc Test DataObject setAssets
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 2
     */
    it('DataObjectErrTest47', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, () => {
      console.info(TAG + '************ DataObjectErrTest47 start ************')
      let g_object: distributedDataObject.DataObject = distributedDataObject.create(context, note);
      try {
        let uris = ['file:1.txt'];
        g_object.setAssets('', uris);
        expect().assertFail()
      } catch (err) {
        console.error(TAG + 'Failed to setAssets. code: ' + err.code + '.message:' + err.message);
        expect(err.code).assertEqual(15400002);
      } 
      console.info(TAG + '************ DataObjectErrTest47 end ************')
    })

    /**
     * @tc.number SUB_DistributedData_DataObject_JsApiErrTest_4800
     * @tc.name DataObjectErrTest48
     * @tc.desc Test DataObject setAssets
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 2
     */
    it('DataObjectErrTest48', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, () => {
      console.info(TAG + '************ DataObjectErrTest48 start ************')
      let g_object: distributedDataObject.DataObject = distributedDataObject.create(context, note);
      try {
        let uris = [];
        g_object.setAssets('', uris);
        expect().assertFail()
      } catch (err) {
        console.error(TAG + 'Failed to setAssets. code: ' + err.code + '.message:' + err.message);
        expect(err.code).assertEqual(15400002);
      } 
      console.info(TAG + '************ DataObjectErrTest48 end ************')
    })

    /**
     * @tc.number SUB_DistributedData_DataObject_JsApiErrTest_4900
     * @tc.name DataObjectErrTest49
     * @tc.desc Test DataObject setAssets
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 2
     */
    it('DataObjectErrTest49', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, () => {
      console.info(TAG + '************ DataObjectErrTest49 start ************')
      let g_object: distributedDataObject.DataObject = distributedDataObject.create(context, note);
      try {
        let uris = [];
        g_object.setAssets('attachment', uris);
        expect().assertFail()
      } catch (err) {
        console.error(TAG + 'Failed to setAssets. code: ' + err.code + '.message:' + err.message);
        expect(err.code).assertEqual(15400002);
      } 
      console.info(TAG + '************ DataObjectErrTest49 end ************')
    })
  })
}