# Copyright (c) 2022 Shenzhen Kaihong Digital Industry Development Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//test/xts/acts/graphic/vkgl/comm.gni")

config("deqp_platform_ohos_config") {
  cflags_cc = deqp_common_cflags_cc

  cflags_cc += [
    # "-Wno-conversion",
    # "-Wno-unused-function",
    "-Wno-unused-parameter",
  ]

  defines = deqp_common_defines
}

ohos_static_library("libkhrgles32func0001") {
  subsystem_name = "graphic"
  part_name = "graphic_2d"
  sources = common_src
  sources += [ "../Khrgles32BaseFunc.cpp" ]

  include_dirs = common_include
  deps = common_depends_gles32
  external_deps = [
    "hilog:libhilog",
    "image_framework:image_native",
    "zlib:libz",
  ]
  configs = [ ":deqp_platform_ohos_config" ]
}

ohos_moduletest_suite("ActsKhrgles32TestSuite0001") {
  subsystem_name = "graphic"
  part_name = "graphic_2d"
  sources = [
    "../ActsKhrgles320001TestSuite.cpp",
    "../core/Khrgles32core_constant_expressionsTestCase.cpp",
    "../core/Khrgles32core_draw_buffers_indexedTestCase.cpp",
    "../core/Khrgles32core_gpu_shader5TestCase.cpp",
    "../core/Khrgles32core_texture_border_clampTestCase.cpp",
    "../core/Khrgles32core_texture_bufferTestCase.cpp",
    "../core/Khrgles32core_texture_cube_map_arrayTestCase.cpp",
    "../core/Khrgles32geometry_shader_adjacencyTestCase.cpp",
    "../core/Khrgles32geometry_shader_apiTestCase.cpp",
    "../core/Khrgles32geometry_shader_blittingTestCase.cpp",
    "../core/Khrgles32geometry_shader_clippingTestCase.cpp",
    "../core/Khrgles32geometry_shader_constant_variablesTestCase.cpp",
    "../core/Khrgles32geometry_shader_inputTestCase.cpp",
    "../core/Khrgles32geometry_shader_layered_fboTestCase.cpp",
    "../core/Khrgles32geometry_shader_layered_framebufferTestCase.cpp",
    "../core/Khrgles32geometry_shader_layered_renderingTestCase.cpp",
    "../core/Khrgles32geometry_shader_layered_rendering_boundary_conditionTestCase.cpp",
    "../core/Khrgles32geometry_shader_layered_rendering_fbo_no_attachmentTestCase.cpp",
    "../core/Khrgles32geometry_shader_limitsTestCase.cpp",
    "../core/Khrgles32geometry_shader_linkingTestCase.cpp",
    "../core/Khrgles32geometry_shader_nonarray_inputTestCase.cpp",
    "../core/Khrgles32geometry_shader_outputTestCase.cpp",
    "../core/Khrgles32geometry_shader_primitive_counterTestCase.cpp",
    "../core/Khrgles32geometry_shader_primitive_queriesTestCase.cpp",
    "../core/Khrgles32geometry_shader_program_resourceTestCase.cpp",
    "../core/Khrgles32geometry_shader_qualifiersTestCase.cpp",
    "../core/Khrgles32rendering_renderingTestCase.cpp",
    "../core/Khrgles32tessellation_shader_compilation_and_linking_errorsTestCase.cpp",
    "../core/Khrgles32tessellation_shader_singleTestCase.cpp",
    "../core/Khrgles32tessellation_shader_tessellation_control_to_tessellation_evaluationTestCase.cpp",
    "../core/Khrgles32tessellation_shader_tessellation_invarianceTestCase.cpp",
    "../core/Khrgles32tessellation_shader_tessellation_shader_point_modeTestCase.cpp",
    "../core/Khrgles32tessellation_shader_tessellation_shader_quads_tessellationTestCase.cpp",
    "../core/Khrgles32tessellation_shader_tessellation_shader_tc_barriersTestCase.cpp",
    "../core/Khrgles32tessellation_shader_tessellation_shader_tessellationTestCase.cpp",
    "../core/Khrgles32tessellation_shader_tessellation_shader_triangles_tessellationTestCase.cpp",
    "../core/Khrgles32tessellation_shader_vertexTestCase.cpp",
    "../core/Khrgles32tessellation_shader_windingTestCase.cpp",
    "../info/Khrgles32KHR-GLES32_infoTestCase.cpp",
    "../shaders/Khrgles32shaders_aggressive_optimizationsTestCase.cpp",
    "../shaders/Khrgles32shaders_negativeTestCase.cpp",
    "../shaders/Khrgles32shaders_shader_integer_mixTestCase.cpp",
  ]

  include_dirs = [ "../../../src" ]

  deps = [ ":libkhrgles32func0001" ]

  cflags = [ "-Wno-error" ]
}
